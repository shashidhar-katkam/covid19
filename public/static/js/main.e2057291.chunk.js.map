{"version":3,"sources":["components/user/home/main/dataindia.ts","components/user/home/main/dataworld.ts","components/user/home/main/styles.module.scss","models/models.ts","constants/constants.ts","services/services.ts","components/user/RL/Service.ts","Redux/action.types.ts","util/index.ts","components/user/RL/RegisterForm.tsx","Redux/Actions/actions.ts","services/authService/index.ts","components/user/RL/LoginForm.tsx","components/user/RL/EmailVerify.tsx","components/user/RL/ForgetPasswordForm.tsx","components/user/RL/index.tsx","components/user/Navbar/index.tsx","components/user/home/index.tsx","components/common/PrivateRoute/index.tsx","components/user/Service.ts","components/user/myProfile/address.tsx","components/user/myProfile/name.tsx","components/user/myProfile/email.tsx","components/user/myProfile/gender.tsx","components/user/myProfile/password.tsx","components/user/myProfile/service.ts","components/user/myProfile/username.tsx","Redux/service/index.ts","components/user/myProfile/image.tsx","components/common/Loading/index.tsx","components/user/myProfile/index.tsx","components/common/NotFound/index.tsx","components/common/Loading/Shimmers.tsx","components/common/fileUpload/index.tsx","components/common/index.ts","components/user/home/stories/CreateStory.tsx","components/common/TimeStamp.tsx","components/common/UserInfo/index.tsx","components/common/Templates/Youtube.tsx","components/common/Templates/Image.tsx","components/common/Templates/facebook.tsx","components/common/Templates/localVideo.tsx","components/common/Templates/index.tsx","components/user/home/mainNews/Sources.tsx","components/common/CommentPoster/index.tsx","components/common/Comment.tsx","components/user/home/stories/index.tsx","components/user/home/help/raiseHelp.tsx","components/user/home/help/index.tsx","components/user/home/main/index.tsx","components/user/index.tsx","Redux/Reducers/reducers.ts","Redux/app.store.ts","app.tsx","serviceWorker.ts","index.tsx"],"names":["dataIndia","cc","dataWorld","module","exports","FileType","MainFileType","States","StatesAndDirstricts","State","Districts","URLs","Service","url","isAuthRequired","config","headers","localStorage","getItem","axios","get","then","res","status","catch","err","response","statuscode","message","statusText","data","post","NewsService","service","this","userInfo","HelpCovidModel","_id","name","phoneNumber","problem","expect","user","dateTime","StoryModel","Name","Age","Diceases","Files","User","Symptoms","Treatment","MoreToSay","DateTime","FormType","FileT","file","fileNewName","filePath","mimeType","originalName","fileType","jpeg","png","jif","localImage","mp4","localVideo","youtube","youtubeVideo","facebook","facebookVideo","mp3","audio","othersImage","others","ErrorMessages","BasicUserInfo","firstName","lastName","imagePath","ActionTypes","Util","email","test","someDate","today","Date","getDate","getMonth","getFullYear","date","dateT","hours","getHours","minutes","getMinutes","ampm","isToday","toDateString","n","indexOf","index","substring","genderOptions","key","text","options","map","state","Register","props","_emailChangeHandle","event","erorMessage","target","value","validateEmail","setState","userForm","userFormErr","_inputChangeHandle","_phoneNumberChangeHandle","validity","valid","isFormValid","confirmPasswordErr","phoneNumberErr","length","password","passwordErr","confirmPassword","firstNameErr","lastNameErr","gender","genderErr","emailErr","stateErr","city","cityErr","isLoginDialogEnabled","isPrivacyCheck","City","PrivacyCheckErr","FormErrMessage","showRegisterSuccessDialog","isLoading","imageError","_loginCancel","bind","_onGenderChange","_cityChangeHandle","_onPrivacyCheck","_submitForm","_onSucess","_onProgress","newProps","field","option","CitysInfo","forEach","sADInfo","citiesinSelectState","afterLogin","ev","checked","undefined","RegisterUser","msg","files","type","datae","FormData","append","xhr","XMLHttpRequest","open","upload","addEventListener","evt","lengthComputable","df","loaded","total","toFixed","progress","db","onloadstart","e","onloadend","send","onreadystatechange","readyState","JSON","parse","setTimeout","some","Dialog","hidden","onDismiss","dialogContentProps","DialogType","normal","title","closeButtonAriaLabel","showCloseButton","modalProps","styles","main","maxWidth","containerClassName","onDismissed","isBlocking","className","dir","src","alt","id","accept","onChange","onPhotoUpload","htmlFor","TextField","pattern","label","autoSave","autoComplete","errorMessage","required","minLength","prefix","maxLength","confirmPasswordChangeHandle","ChoiceGroup","defaultSelectedKey","o","Dropdown","selectedKey","stateChangeHandle","DefaultButton","onClick","formHandle","Login","React","connect","Actions","addUser","AddUser","removeUser","RemoveUser","UpdateLoginM","updateM","payload","updateUserImage","imgUrl","UpdateUserImage","AuthService","Promise","resolve","reject","statusmsg","setItem","MBwebToken","stringify","store","dispatch","clear","window","location","replace","LoginForm","authService","_passwordChangeHandle","loginForm","loginFormErr","language","EMailVerify","showDialog","placeholder","ForgetPassword","EmailVerifyForm","EmailVerifyFormErr","_otpChangeHandle","otp","validationMessage","emailVerifyForm","emailVerifyFormErr","_isOtpValid","otpErr","userLoginId","showOtpDialog","isSuccessDialogHide","showResendButton","isResendOtp","_submitOtp","_closeDialog","_resendOTP","verifyEmail","verifyOTP","style","textAlign","ForgetPasswrdForm","forgetPasswordForm","forgetPasswordFormErr","forgetPassword","forgetPasswordErr","resetPassword","resetPasswordErr","__otpChangeHandle","newPassword","newPasswordErr","isUserFound","_resetPassowrd","_confirmPasswordChangeHandle","verifyUser","isResetFormvalid","RL","Form","_formHandle","EmailVerify","Navbar","_menuButtonElement","isProfileClicked","isUser","isLogged","LoggedInUser","isLoggedIn","isLoggoutClik","DialogProps","show","_onProfileClick","_onCalloutDismiss","_enableLoginDialog","_logOut","_onPathClick","_navigateTo","_closeAlertDialog","navigateTo","history","push","LogOut","isLogoutClick","path","exact","to","ref","Callout","role","gapSpace","current","directionalHint","setInitialFocus","isBeakVisible","aria-hidden","withRouter","Home","model","_onModelOpen","reRender","render","afterLanguageChange","backgroundImage","PrivateRoute","children","pathname","from","newsInfo","dataOrError","filter","dataOrLogout","orderInfo","Address","address","isShow","userId","_stateChangeHandle","_submit","_showEditForm","_hideEditForm","form","e1","e2","isValid","cityIsRequired","stateIsRequired","prevState","isAddressValid","updateProfile","_nameChangeHandle","nameValidation","firstNameIsRequired","lastNameIsRequired","Email","isEmailValid","Gender","Password","oldPassword","oldPasswordErr","e3","oldPasswordIsRequired","newPasswordIsRequired","confirmPasswordIsRequired","oldAndNewpasswordShouldNotSame","passwordValidation","changePassword","MyProfileService","isAvailable","Username","myProfileService","usernameChangeHandle","isAvailCheck","username","userNameIsRequired","submit","ReduxService","Image","image","_onChangeHandler","success","onImageChange","Loading","Spinner","size","SpinnerSize","large","MyProfile","User2","_onImageChange","getProfileByIdF","newImagePath","NotFound","ShimmerLine","ShimmerElementsGroup","shimmerElements","ShimmerElementType","line","width","height","getShimmerStyles","shimmerGradient","shimmerWithElementFirstRow","circle","gap","Shimmer3","Shimmer","customElementsGroup","Shimmer1","FileUpload","uploadedFileInfo","uploadedFilesInfo","onChangeHandler","OnSucess","onProgress","onSucess","afterFilesUploaded","i","needToUpload","j","alert","Reset","getAcceptString","multiple","Common","filesInfo","tempFiles","added","getUnique","array","uniqueArray","CategoryOptions","require","CreateStory","authservice","_ageChangeHandle","amount","storyForm","storyFormErr","NameErr","AgeErr","DiceasesErr","SymptomsErr","TreatmentErr","MoreToSayErr","FilesErr","isShowInfoPanel","showStoryForm","_afterFilesUploaded","_removefile","_hideStoryForm","prevProps","fileInf","uploadedFiles","fileInfo","upLoad","newsForm","errormsgs","formData","FileUploadedResponse","trim","createStory","ProgressBar","now","animated","catergory","selected","toString","multiSelect","defaultSelectedKeys","_onCategoryChange","multiline","rows","filesUploadedBindingInfo","TimeStamp3Right","moment","fromNow","TimeStamp","UserInfo","util","onUserClick","YTPlayer","Youtube","playerRef","currentId","File","thisObj","link","linkL","ddd","player","load","element","document","querySelector","position","getBoundingClientRect","top","bottom","innerHeight","getState","pause","destroy","console","log","OthersImage","FacebookVideo","scrolling","frameBorder","allow","allowFullScreen","LocalVideo","isThumbNail","controls","Template","Sources","CurrentIndex","_onNavBtnClicked","prevStat","Number","infoBind","Comment","newsService","commentForm","comment","commentErr","showComments","RefId","isLoggedInUser","skip","comments","hideMoreCommentsButton","dialogProps","_showComments","_getMoreComments","_onKeyDown","getCommentsByRef","allComments","keyCode","postComment","LogOut1","socket","on","unshift","CommetPoster","onKeyDown","info","ShowMoreText","Stories","allNews","currentScrollPosition","isLoadNext","stopRequests","_onUserClick","_onScrollEvent","strings","dd","a","news","lines","more","less","anchorClass","expanded","keepNewLines","generateString","getStories","scrollY","English","tempNews","Show","Telugu","totalHeight","documentElement","scrollHeight","pageYOffset","allre","d","splice","removeEventListener","capture","stackStyles","root","color","RaiseHelp","_amountChangeHandle","donationForm","donationFormErr","problemErr","expectErr","showModel","nameErr","DialogProps2","errormsg","_showDialog","onPaymentSuccuess","_closeDialog2","script","createElement","async","body","appendChild","obj","razorpay_payment_id","objee","PaymentSuccess","paymentInit","orderId","updateDonationRequest","requestObj","raiseHelpRequest1","iconProps","iconName","Help","getHelpRequests1","highchartsMap","Highcharts","Main","getIndiaData","getWorldData","covidDataIndia","confirmed","deceased","recovered","covidDataWorld","fetch","method","json","indiaData","deaths","WorldData","Global","TotalConfirmed","TotalDeaths","TotalRecovered","mapOptionsIndia","chart","backgroundColor","credits","enabled","mapNavigation","tooltip","headerFormat","pointFormat","legend","series","states","hover","dataLabels","format","mapData","mapDataIN","mapOptionsWorld","mapDataWorld","homePageContainer","parallax","wrapper","mapContainer","worldMap","constructorType","highcharts","totalValueContainer","indiaMap","covidDetailsBrief","details","subTitle","learnMore","goToFacts","imageContainer","UserApp","getElementById","display","component","ecact","initialState","userType","login","rootReducer","combineReducers","action","createStore","socketIOClient","initializeIcons","App","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e2057291.chunk.js","sourcesContent":["export const dataIndia = [\r\n    ['madhya pradesh', 0],\r\n    ['uttar pradesh', 1],\r\n    ['karnataka', 2],\r\n    ['nagaland', 3],\r\n    ['bihar', 4],\r\n    ['lakshadweep', 5],\r\n    ['andaman and nicobar', 6],\r\n    ['assam', 7],\r\n    ['west bengal', 8],\r\n    ['puducherry', 9],\r\n    ['daman and diu', 10],\r\n    ['gujarat', 11],\r\n    ['rajasthan', 12],\r\n    ['dadara and nagar havelli', 13],\r\n    ['chhattisgarh', 14],\r\n    ['tamil nadu', 15],\r\n    ['chandigarh', 16],\r\n    ['punjab', 17],\r\n    ['haryana', 18],\r\n    ['andhra pradesh', 19],\r\n    ['maharashtra', 20],\r\n    ['himachal pradesh', 21],\r\n    ['meghalaya', 22],\r\n    ['kerala', 23],\r\n    ['telangana', 24],\r\n    ['mizoram', 25],\r\n    ['tripura', 26],\r\n    ['manipur', 27],\r\n    ['arunanchal pradesh', 28],\r\n    ['jharkhand', 29],\r\n    ['goa', 30],\r\n    ['nct of delhi', 31],\r\n    ['odisha', 32],\r\n    ['jammu and kashmir', 33],\r\n    ['sikkim', 34],\r\n    ['uttarakhand', 35]\r\n];\r\n\r\nexport default class cc {\r\n\r\n\r\n}","const dataWorld = [\r\n    ['gl', 0],\r\n    ['sh', 1],\r\n    ['bu', 2],\r\n    ['lk', 3],\r\n    ['as', 4],\r\n    ['dk', 5],\r\n    ['fo', 6],\r\n    ['gu', 7],\r\n    ['mp', 8],\r\n    ['um', 9],\r\n    ['us', 10],\r\n    ['vi', 11],\r\n    ['ca', 12],\r\n    ['st', 13],\r\n    ['jp', 14],\r\n    ['cv', 15],\r\n    ['dm', 16],\r\n    ['sc', 17],\r\n    ['nz', 18],\r\n    ['ye', 19],\r\n    ['jm', 20],\r\n    ['ws', 21],\r\n    ['om', 22],\r\n    ['in', 23],\r\n    ['vc', 24],\r\n    ['bd', 25],\r\n    ['sb', 26],\r\n    ['lc', 27],\r\n    ['fr', 28],\r\n    ['nr', 29],\r\n    ['no', 30],\r\n    ['fm', 31],\r\n    ['kn', 32],\r\n    ['cn', 33],\r\n    ['bh', 34],\r\n    ['to', 35],\r\n    ['fi', 36],\r\n    ['id', 37],\r\n    ['mu', 38],\r\n    ['se', 39],\r\n    ['tt', 40],\r\n    ['sw', 41],\r\n    ['br', 42],\r\n    ['bs', 43],\r\n    ['pw', 44],\r\n    ['ec', 45],\r\n    ['au', 46],\r\n    ['tv', 47],\r\n    ['mh', 48],\r\n    ['cl', 49],\r\n    ['ki', 50],\r\n    ['ph', 51],\r\n    ['gd', 52],\r\n    ['ee', 53],\r\n    ['ag', 54],\r\n    ['es', 55],\r\n    ['bb', 56],\r\n    ['it', 57],\r\n    ['mt', 58],\r\n    ['mv', 59],\r\n    ['sp', 60],\r\n    ['pg', 61],\r\n    ['vu', 62],\r\n    ['sg', 63],\r\n    ['gb', 64],\r\n    ['cy', 65],\r\n    ['gr', 66],\r\n    ['km', 67],\r\n    ['fj', 68],\r\n    ['ru', 69],\r\n    ['va', 70],\r\n    ['sm', 71],\r\n    ['am', 72],\r\n    ['az', 73],\r\n    ['ls', 74],\r\n    ['tj', 75],\r\n    ['ml', 76],\r\n    ['dz', 77],\r\n    ['tw', 78],\r\n    ['uz', 79],\r\n    ['tz', 80],\r\n    ['ar', 81],\r\n    ['sa', 82],\r\n    ['nl', 83],\r\n    ['ae', 84],\r\n    ['ch', 85],\r\n    ['pt', 86],\r\n    ['my', 87],\r\n    ['pa', 88],\r\n    ['tr', 89],\r\n    ['ir', 90],\r\n    ['ht', 91],\r\n    ['do', 92],\r\n    ['gw', 93],\r\n    ['hr', 94],\r\n    ['th', 95],\r\n    ['mx', 96],\r\n    ['kw', 97],\r\n    ['de', 98],\r\n    ['gq', 99],\r\n    ['cnm', 100],\r\n    ['nc', 101],\r\n    ['ie', 102],\r\n    ['kz', 103],\r\n    ['ge', 104],\r\n    ['pl', 105],\r\n    ['lt', 106],\r\n    ['ug', 107],\r\n    ['cd', 108],\r\n    ['mk', 109],\r\n    ['al', 110],\r\n    ['ng', 111],\r\n    ['cm', 112],\r\n    ['bj', 113],\r\n    ['tl', 114],\r\n    ['tm', 115],\r\n    ['kh', 116],\r\n    ['pe', 117],\r\n    ['mw', 118],\r\n    ['mn', 119],\r\n    ['ao', 120],\r\n    ['mz', 121],\r\n    ['za', 122],\r\n    ['cr', 123],\r\n    ['sv', 124],\r\n    ['bz', 125],\r\n    ['co', 126],\r\n    ['kp', 127],\r\n    ['kr', 128],\r\n    ['gy', 129],\r\n    ['hn', 130],\r\n    ['ga', 131],\r\n    ['ni', 132],\r\n    ['et', 133],\r\n    ['sd', 134],\r\n    ['so', 135],\r\n    ['gh', 136],\r\n    ['ci', 137],\r\n    ['si', 138],\r\n    ['gt', 139],\r\n    ['ba', 140],\r\n    ['jo', 141],\r\n    ['sy', 142],\r\n    ['we', 143],\r\n    ['il', 144],\r\n    ['eg', 145],\r\n    ['zm', 146],\r\n    ['mc', 147],\r\n    ['uy', 148],\r\n    ['rw', 149],\r\n    ['bo', 150],\r\n    ['cg', 151],\r\n    ['eh', 152],\r\n    ['rs', 153],\r\n    ['me', 154],\r\n    ['tg', 155],\r\n    ['mm', 156],\r\n    ['la', 157],\r\n    ['af', 158],\r\n    ['jk', 159],\r\n    ['pk', 160],\r\n    ['bg', 161],\r\n    ['ua', 162],\r\n    ['ro', 163],\r\n    ['qa', 164],\r\n    ['li', 165],\r\n    ['at', 166],\r\n    ['sk', 167],\r\n    ['sz', 168],\r\n    ['hu', 169],\r\n    ['ly', 170],\r\n    ['ne', 171],\r\n    ['lu', 172],\r\n    ['ad', 173],\r\n    ['lr', 174],\r\n    ['sl', 175],\r\n    ['bn', 176],\r\n    ['mr', 177],\r\n    ['be', 178],\r\n    ['iq', 179],\r\n    ['gm', 180],\r\n    ['ma', 181],\r\n    ['td', 182],\r\n    ['kv', 183],\r\n    ['lb', 184],\r\n    ['sx', 185],\r\n    ['dj', 186],\r\n    ['er', 187],\r\n    ['bi', 188],\r\n    ['sn', 189],\r\n    ['gn', 190],\r\n    ['zw', 191],\r\n    ['py', 192],\r\n    ['by', 193],\r\n    ['lv', 194],\r\n    ['bt', 195],\r\n    ['na', 196],\r\n    ['bf', 197],\r\n    ['ss', 198],\r\n    ['cf', 199],\r\n    ['md', 200],\r\n    ['gz', 201],\r\n    ['ke', 202],\r\n    ['bw', 203],\r\n    ['cz', 204],\r\n    ['pr', 205],\r\n    ['tn', 206],\r\n    ['cu', 207],\r\n    ['vn', 208],\r\n    ['mg', 209],\r\n    ['ve', 210],\r\n    ['is', 211],\r\n    ['np', 212],\r\n    ['sr', 213],\r\n    ['kg', 214]\r\n];\r\n\r\nexport{dataWorld};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homePageContainer\":\"styles_homePageContainer__2iBwA\",\"imageParallax\":\"styles_imageParallax__uV7v1\",\"parallax\":\"styles_parallax__2G2z7\",\"wrapper\":\"styles_wrapper__2rE67\",\"mapContainer\":\"styles_mapContainer__2HqSN\",\"worldMap\":\"styles_worldMap__16H5M\",\"totalValueContainer\":\"styles_totalValueContainer__1oioa\",\"total\":\"styles_total__6JQ7C\",\"recovered\":\"styles_recovered__1GlFV\",\"deaths\":\"styles_deaths__10Iq3\",\"indiaMap\":\"styles_indiaMap__18Gzw\",\"covidDetailsBrief\":\"styles_covidDetailsBrief__GVkZg\",\"details\":\"styles_details__bNYok\",\"title\":\"styles_title__1cdS5\",\"subTitle\":\"styles_subTitle__2EJkk\",\"learnMore\":\"styles_learnMore__2YkXi\",\"imageContainer\":\"styles_imageContainer__3Yebf\",\"image\":\"styles_image__37nA-\"};","\r\nexport interface IDialogPropss {\r\n    show: boolean;\r\n    message: string;\r\n}\r\n\r\n\r\nexport interface ISavedStory {\r\n    _id: string;\r\n    Name: string;\r\n    Age: string;\r\n    Diceases: string[];\r\n    Files: IFileC[];\r\n    User: IUserC;\r\n    Symptoms: string;\r\n    Treatment: string;\r\n    MoreToSay: string;\r\n    DateTime: string;\r\n}\r\n\r\nexport interface ISaveHelpCovid {\r\n    _id: string;\r\n    name: string;\r\n    phoneNumber: string;\r\n    problem: string;\r\n    user: IUserC;\r\n    expect: string;\r\n    dateTime: string;\r\n}\r\n\r\nexport class HelpCovidModel {\r\n    public _id: string;\r\n    public name: string;\r\n    public phoneNumber: string;\r\n    public problem: string;\r\n    public expect: string;\r\n    public user: any;\r\n    public dateTime:string;\r\n    constructor(data: any) {\r\n        this._id = data._id;\r\n        this.name = data.name;\r\n        this.phoneNumber = data.phoneNumber;\r\n        this.problem = data.problem;\r\n        this.dateTime = data.dateTime;\r\n        this.user = data.user;\r\n        this.expect = data.expect;\r\n    }\r\n}\r\n\r\n\r\nexport class StoryModel {\r\n    public _id: string;\r\n    public Name: string;\r\n    public Age: string;\r\n    public Diceases: string[];\r\n    public Files: IFileC[];\r\n    public User: IUserC;\r\n    public Symptoms: string;\r\n    public Treatment: string;\r\n    public MoreToSay: string;\r\n    public DateTime: string;\r\n    constructor(data: any) {\r\n        this._id = data._id;\r\n        this.Name = data.Name;\r\n        this.Treatment = data.Treatment;\r\n        this.DateTime = data.DateTime;\r\n        this.Files = data.Files;\r\n        this.User = data.User;\r\n        this.Age = data.Age;\r\n        this.Diceases = data.Diceases;\r\n        this.Symptoms = data.Symptoms;\r\n        this.MoreToSay = data.MoreToSay;\r\n    }\r\n}\r\nexport enum FileType {\r\n    png = \"image/png\",\r\n    mp3 = \"audio/mp3\",\r\n    jif = \"image/gif\",\r\n    jpeg = \"image/jpeg\",\r\n    mp4 = \"video/mp4\",\r\n    msword = \"application/msword\",\r\n    pdf = \"application/pdf\",\r\n    youtube = \"Youtube\",\r\n    facebook = \"Facebook\",\r\n    othersImage = \"Image URL\"\r\n}\r\n\r\nexport enum MainFileType {\r\n    localImage,\r\n    localVideo,\r\n    facebookVideo,\r\n    youtubeVideo,\r\n    audio,\r\n    othersImage,\r\n    others,\r\n}\r\n\r\nexport class FileT {\r\n    public fileNewName: string;\r\n    public filePath: string;\r\n    public mimeType: string;\r\n    public originalName: string;\r\n    public fileType: number;\r\n\r\n    constructor(file: any) {\r\n        debugger;\r\n        this.fileNewName = file.fileNewName;\r\n        this.filePath = file.filePath;\r\n        this.mimeType = file.mimeType;\r\n        this.originalName = file.fileNewName;\r\n\r\n        if (file.mimeType === FileType.jpeg || file.mimeType === FileType.png || file.mimeType === FileType.jif) {\r\n            this.fileType = MainFileType.localImage;\r\n        } else if (file.mimeType === FileType.mp4) {\r\n            this.fileType = MainFileType.localVideo;\r\n\r\n        } else if (file.mimeType === FileType.youtube) {\r\n            this.fileType = MainFileType.youtubeVideo;\r\n\r\n        } else if (file.mimeType === FileType.facebook) {\r\n            this.fileType = MainFileType.facebookVideo;\r\n\r\n        } else if (file.mimeType === FileType.mp3) {\r\n            this.fileType = MainFileType.audio;\r\n        } else if (file.mimeType === FileType.othersImage) {\r\n            this.fileType = MainFileType.othersImage;\r\n        }\r\n        else {\r\n            this.fileType = MainFileType.others;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport interface IUser {\r\n    phoneNumber: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    gender: string;\r\n    email: string;\r\n    state: string;\r\n    city: string;\r\n    imagePath: string;\r\n}\r\n\r\nexport interface IUserErr {\r\n    phoneNumberErr: string;\r\n    passwordErr: string;\r\n    firstNameErr: string;\r\n    lastNameErr: string;\r\n    genderErr: string;\r\n    emailErr: string;\r\n    stateErr: string;\r\n    cityErr: string;\r\n}\r\n\r\nexport interface ILoginForm {\r\n    phoneNumber: string;\r\n    password: string;\r\n}\r\n\r\nexport interface ILoginFormErr {\r\n    phoneNumberErr: string;\r\n    passwordErr: string;\r\n}\r\n\r\nexport enum FormType {\r\n    Login = 1,\r\n    Register = 2,\r\n    ForgetPassword = 3,\r\n    EMailVerify = 4\r\n}\r\n\r\nexport interface IFileC {\r\n    fileNewName: string;\r\n    filePath: string;\r\n    _id: string;\r\n    mimeType: string;\r\n    originalName: string;\r\n    fileType: number;\r\n}\r\n\r\nexport interface IUserC {\r\n    firstName: string,\r\n    lastName: string,\r\n    imagePath: string,\r\n    _id: string;\r\n}\r\n\r\nexport class BasicUserInfo {\r\n    firstName: string;\r\n    lastName: string;\r\n    imagePath: string;\r\n    _id: string;\r\n\r\n    constructor(user: any) {\r\n        this.firstName = user.firstName;\r\n        this.lastName = user.lastName;\r\n        this.imagePath = user.imagePath;\r\n        this._id = user._id;\r\n    }\r\n}\r\nexport interface IComment {\r\n    _id: string;\r\n    CommetPoster: IUserC;\r\n    Comment: string;\r\n    DateTime: string;\r\n}\r\n\r\nexport enum ErrorMessages {\r\n    firstNameIsRequired = 'Firstname is Required.',\r\n    lastNameIsRequired = 'Lastname is Required.',\r\n    oldPasswordIsRequired = 'Old password is required',\r\n    newPasswordIsRequired = 'New password is required',\r\n    confirmPasswordIsRequired = 'Confirm password is required',\r\n    oldAndNewpasswordShouldNotSame = \"Old and new password should not be same.\",\r\n    emailIsRequired = 'Email is Required',\r\n    InvalidEmail = 'Invalid email',\r\n    userNameIsRequired = 'Username is required',\r\n    onlyNumbers = 'Only numbers allowed',\r\n    cityIsRequired = 'City is required',\r\n    stateIsRequired = 'State is required'\r\n}\r\n\r\nexport interface IFileInfo {\r\n    fileNewName: string;\r\n    filePath: string;\r\n    originalName: string;\r\n    mimeType: string;\r\n    fileType: number;\r\n}\r\n\r\n","\r\nexport const States = ['Andaman and Nicobar', 'Andhra Pradesh', 'Arunachal Pradesh', 'Assam', 'Bihar', 'Chandigarh',\r\n    'Chhattisgarh', 'Delhi', 'Daman and Diu', 'Dadra and Nagar Haveli', 'Goa', 'Gujarat', 'Haryana',\r\n    'Himachal Pradesh', 'Jammu and Kashmir', 'Ladakh', 'Lakshadweep', 'Jharkhand', 'Karnataka', 'Kerala',\r\n    'Madhya Pradesh', 'Maharashtra', 'Manipur', 'Odisha', 'Mizoram', 'Orissa', 'Punjab', 'Rajasthan',\r\n    'Sikkim', 'Tamilnadu', 'Telangana', 'Tripura', 'Uttarkhand', 'Uttar Pradesh', 'West Bengal', 'Puducherry'];\r\n\r\nexport const StatesAndDirstricts = [\r\n    { State: 'Andaman and Nicobar', Districts: ['Port Blair'] },\r\n    {\r\n        State: 'Andhra Pradesh', Districts: ['Anantapur', 'Chittoor', 'East Godavari', 'Guntur', 'Kadapa', 'Krishna', 'Kurnool',\r\n            'Prakasam', 'Sri Potti Sriramulu Nellore', 'Srikakulam', 'Visakhapatnam', 'Vizianagaram', 'West Godavari']\r\n    },\r\n    {\r\n        State: 'Arunachal Pradesh',\r\n        Districts: ['Hawai', 'Changlang', 'East Kameng', 'East Siang', 'Kamle', 'Kra Daadi', 'Kurung Kumey', 'Lepa Rada', 'Lohit',\r\n            'Longding', 'Lower Dibang Valley', 'Lower Siang', 'Lower Subansiri', 'Namsai', 'Pakke-Kessang', 'Papum Pare', 'Shi Yomi',\r\n            'Siang', 'Tawang', 'Tirap', 'Upper Dibang Valley', 'Upper Siang', 'Upper Subansiri', 'West Kameng', 'West Siang']\r\n    },\r\n    {\r\n        State: 'Assam', Districts: ['Baksa', 'Barpeta', 'Bishwanath', 'Bongaigaon', 'Cachar', 'Charaideo', 'Chirang', 'Darrang', 'Dhemaji',\r\n            'Dhubri', 'Dibrugarh', 'Dima Hasao', 'Goalpara', 'Golaghat', 'Hailakandi', 'Hojai', 'Jorhat', 'Kamrup', 'Kamrup Metropolitan',\r\n            'Karbi Anglong', 'Karimganj', 'Kokrajhar', 'Lakhimpur', 'Majuli', 'Morigaon', 'Nagaon', 'Nalbari', 'Sivasagar', 'South Salmara',\r\n            'Sonitpur', 'Tinsukia', 'Udalguri', 'West Karbi Anglong']\r\n    },\r\n    {\r\n        State: 'Bihar', Districts: ['Araria', 'Arwal', 'Aurangabad', 'Banka', 'Begusarai', 'Bhagalpur', 'Bhojpur', 'Buxar', 'Darbhanga',\r\n            'East Champaran', 'Gaya', 'Gopalganj', 'Jamui', 'Jehanabad', 'Kaimur', 'Katihar', 'Khagaria', 'Kishanganj', 'Lakhisarai', 'Madhepura',\r\n            'Madhubani', 'Munger', 'Muzaffarpur', 'Nalanda', 'Nawada', 'Patna', 'Purnia', 'Rohtas', 'Saharsa', 'Samastipur', 'Saran', 'Sheikhpura',\r\n            'Sheohar', 'Sitamarhi', 'Siwan', 'Supaul', 'Vaishali', 'West Champaran']\r\n    },\r\n    {\r\n        State: 'Chhattisgarh', Districts: ['Balod', 'Baloda Bazar', 'Balrampur', 'Bastar', 'Bemetara', 'Bijapur', 'Bilaspur', 'Dantewada',\r\n            'Dhamtari', 'Durg', 'Gariaband', 'Gaurela-Pendra-Marwahi', 'Janjgir-Champa', 'Jashpur', 'Kabirdham', 'Kanker', 'Kondagaon', 'Korba',\r\n            'Koriya', 'Mahasamund', 'Mungeli', 'Narayanpur', 'Raigarh', 'Raipur', 'Rajnandgaon', 'Sukma', 'Surajpur', 'Surguja']\r\n    },\r\n    { State: 'Goa', Districts: ['North Goa', 'South Goa'] },\r\n\r\n    {\r\n        State: 'Gujarat', Districts: ['Ahmedabad', 'Amreli', 'Anand', 'Aravalli', 'Banaskantha', 'Bharuch', 'Bhavnagar', 'Botad',\r\n            'Chhota Udepur', 'Dahod', 'Dang', 'Devbhoomi Dwarka', 'Gandhinagar', 'Gir Somnath', 'Jamnagar', 'Junagadh', 'Kheda', 'Kutch',\r\n            'Mahisagar', 'Mehsana', 'Morbi', 'Narmada', 'Navsari', 'Panchmahal', 'Patan', 'Porbandar', 'Rajkot', 'Sabarkantha', 'Surat',\r\n            'Surendranagar', 'Tapi', 'Vadodara', 'Valsad']\r\n    },\r\n\r\n    {\r\n        State: 'Haryana', Districts: ['Ambala', 'Bhiwani', 'Charkhi Dadri', 'Faridabad', 'Fatehabad', 'Gurugram', 'Hissar', 'Jhajjar',\r\n            'Jind', 'Kaithal', 'Karnal', 'Kurukshetra', 'Mahendragarh', 'Nuh', 'Palwal', 'Panchkula', 'Panipat', 'Rewari', 'Rohtak', 'Sirsa',\r\n            'Sonipat', 'Yamuna Nagar']\r\n    },\r\n\r\n    {\r\n        State: 'Himachal Pradesh', Districts: ['Bilaspur', 'Chamba', 'Hamirpur', 'Kangra', 'Kinnaur', 'Kullu', 'Lahaul and Spiti',\r\n            'Mandi', 'Shimla', 'Sirmaur', 'Solan', 'Una']\r\n    },\r\n\r\n    {\r\n        State: 'Jharkhand', Districts: ['Bokaro', 'Chatra', 'Deoghar', 'Dhanbad', 'Dumka', 'East Singhbhum', 'Garhwa', 'Giridih',\r\n            'Godda', 'Gumla', 'Hazaribag', 'Jamtara', 'Khunti', 'Koderma', 'Latehar', 'Lohardaga', 'Pakur', 'Palamu', 'Ramgarh', 'Ranchi',\r\n            'Sahibganj']\r\n    },\r\n\r\n    {\r\n        State: 'Karnataka', Districts: ['Bagalkot', 'Ballari', 'Belagavi', 'Bengaluru Rural', 'Bengaluru Urban', 'Bidar', 'Chamarajnagar',\r\n            'Chikkaballapur', 'Chikkamagaluru', 'Chitradurga', 'Dakshina Kannada', 'Davanagere', 'Dharwad', 'Gadag', 'Hassan', 'Haveri',\r\n            'Kalaburagi', 'Kodagu', 'Kolar', 'Koppal', 'Mandya', 'Mysuru', 'Raichur', 'Ramanagara', 'Shivamogga', 'Tumakuru', 'Udupi',\r\n            'Uttara Kannada', 'Vijayapura', 'Yadgir']\r\n    },\r\n\r\n    {\r\n        State: 'Kerala', Districts: ['Alappuzha', 'Ernakulam', 'Idukki', 'Kannur', 'Kasaragod', 'Kollam', 'Kottayam', 'Kozhikode',\r\n            'Malappuram', 'Palakkad', 'Pathanamthitta', 'Thrissur', 'Thiruvananthapuram', 'Wayanad']\r\n    },\r\n\r\n    {\r\n        State: 'Madhya Pradesh', Districts: ['Agar Malwa', 'Alirajpur', 'Anuppur', 'Ashok Nagar', 'Balaghat', 'Barwani', 'Betul',\r\n            'Bhind', 'Bhopal', 'Burhanpur', 'Chhatarpur', 'Chhindwara', 'Damoh', 'Datia', 'Dewas', 'Dhar', 'Dindori', 'Guna', 'Gwalior', 'Harda',\r\n            'Hoshangabad', 'Indore', 'Jabalpur', 'Jhabua', 'Katni', 'Khandwa (East Nimar)', 'Khargone (West Nimar)', 'Mandla', 'Mandsaur', 'Morena',\r\n            'Narsinghpur', 'Neemuch', 'Niwari', 'Panna', 'Raisen', 'Rajgarh', 'Ratlam', 'Rewa', 'Sagar', 'Satna', 'Sehore', 'Seoni', 'Shahdol',\r\n            'Shajapur', 'Sheopur', 'Shivpuri', 'Sidhi', 'Singrauli', 'Tikamgarh', 'Ujjain', 'Umaria', 'Vidisha']\r\n    },\r\n\r\n    {\r\n        State: 'Maharashtra', Districts: ['Ahmednagar', 'Akola', 'Amravati', 'Aurangabad', 'Beed', 'Bhandara', 'Buldhana', 'Chandrapur',\r\n            'Dhule', 'Gadchiroli', 'Gondia', 'Hingoli', 'Jalgaon', 'Jalna', 'Kolhapur', 'Latur', 'Mumbai City', 'Mumbai suburban', 'Nanded',\r\n            'Nandurbar', 'Nagpur', 'Nashik', 'Osmanabad', 'Palghar', 'Parbhani', 'Pune', 'Raigad', 'Ratnagiri', 'Sangli', 'Satara', 'Sindhudurg',\r\n            'Solapur', 'Thane', 'Wardha', 'Washim', 'Yavatmal']\r\n    },\r\n\r\n    {\r\n        State: 'Manipur', Districts: ['Bishnupur', 'Chandel', 'Churachandpur', 'Imphal East', 'Imphal West', 'Jiribam', 'Kakching',\r\n            'Kamjong', 'Kangpokpi', 'Noney', 'Pherzawl', 'Senapati', 'Tamenglong', 'Tengnoupal', 'Thoubal', 'Ukhrul']\r\n    },\r\n    {\r\n        State: 'Meghalaya', Districts: ['East Garo Hills', 'East Khasi Hills', 'East Jaintia Hills', 'North Garo Hills', 'Ri Bhoi',\r\n            'South Garo Hills', 'South West Garo Hills', 'South West Khasi Hills', 'West Jaintia Hills', 'West Garo Hills', 'West Khasi Hills']\r\n    },\r\n    { State: 'Mizoram', Districts: ['Aizawl', 'Champhai', 'Kolasib', 'Lawngtlai', 'Lunglei', 'Mamit', 'Saiha', 'Serchhip'] },\r\n    {\r\n        State: 'Nagaland', Districts: ['Dimapur', 'Kiphire', 'Kohima', 'Longleng', 'Mokokchung', 'Mon', 'Noklak', 'Peren', 'Phek', 'Tuensang',\r\n            'Wokha', 'Zunheboto']\r\n    },\r\n\r\n    {\r\n        State: 'Odisha', Districts: ['Angul', 'Boudh (Bauda)', 'Bhadrak', 'Balangir', 'Bargarh (Baragarh)', 'Balasore', 'Cuttack',\r\n            'Debagarh (Deogarh)', 'Dhenkanal', 'Ganjam', 'Gajapati', 'Jharsuguda', 'Jajpur', 'Jagatsinghpur', 'Khordha', 'Kendujhar (Keonjhar)',\r\n            'Kalahandi', 'Kandhamal', 'Koraput', 'Kendrapara', 'Malkangiri', 'Mayurbhanj', 'Nabarangpur', 'Nuapada', 'Nayagarh', 'Puri', 'Rayagada',\r\n            'Sambalpur', 'Subarnapur (Sonepur)', 'Sundargarh']\r\n    },\r\n\r\n    {\r\n        State: 'Punjab', Districts: ['Amritsar', 'Barnala', 'Bathinda', 'Firozpur', 'Faridkot', 'Fatehgarh Sahib', 'Fazilka',\r\n            'Gurdaspur', 'Hoshiarpur', 'Jalandhar', 'Kapurthala', 'Ludhiana', 'Mansa', 'Moga', 'Sri Muktsar Sahib', 'Pathankot', 'Patiala',\r\n            'Rupnagar', 'Sahibzada Ajit Singh Nagar', 'Sangrur', 'Shahid Bhagat Singh Nagar', 'Tarn Taran']\r\n    },\r\n\r\n    {\r\n        State: 'Rajasthan', Districts: ['Ajmer', 'Alwar', 'Bikaner', 'Barmer', 'Banswara', 'Bharatpur', 'Baran', 'Bundi', 'Bhilwara',\r\n            'Churu', 'Chittorgarh', 'Dausa', 'Dholpur', 'Dungarpur', 'Ganganagar', 'Hanumangarh', 'Jhunjhunu', 'Jalore', 'Jodhpur', 'Jaipur',\r\n            'Jaisalmer', 'Jhalawar', 'Karauli', 'Kota', 'Nagaur', 'Pali', 'Pratapgarh', 'Rajsamand', 'Sikar', 'Sawai Madhopur', 'Sirohi', 'Tonk',\r\n            'Udaipur']\r\n    },\r\n\r\n    { State: 'Sikkim', Districts: ['East Sikkim', 'North Sikkim', 'South Sikkim', 'West Sikkim'] },\r\n\r\n    {\r\n        State: 'Tamilnadu', Districts: ['Ariyalur', 'Chengalpattu', 'Chennai', 'Coimbatore', 'Cuddalore', 'Dharmapuri', 'Dindigul',\r\n            'Erode', 'Kallakurichi', 'Kanchipuram', 'Kanyakumari', 'Karur', 'Krishnagiri', 'Madurai', 'Nagapattinam', 'Nilgiris', 'Namakkal',\r\n            'Perambalur', 'Pudukkottai', 'Ramanathapuram', 'Ranipet', 'Salem', 'Sivaganga', 'Tenkasi', 'Tirupur', 'Tiruchirappalli', 'Theni',\r\n            'Tirunelveli', 'Thanjavur', 'Thoothukudi', 'Tirupattur', 'Tiruvallur', 'Tiruvarur', 'Tiruvannamalai', 'Vellore', 'Viluppuram',\r\n            'Virudhunagar']\r\n    },\r\n\r\n    {\r\n        State: 'Telangana', Districts: ['Adilabad', 'Komaram Bheem', 'Bhadradri Kothagudem', 'Hyderabad', 'Jagtial', 'Jangaon',\r\n            'Jayashankar Bhupalpally', 'Jogulamba Gadwal', 'Kamareddy', 'Karimnagar', 'Khammam', 'Mahabubabad', 'Mahbubnagar', 'Mancherial',\r\n            'Medak', 'Medchal-Malkajgiri', 'Mulugu', 'Nalgonda', 'Narayanpet', 'Nagarkurnool', 'Nirmal', 'Nizamabad', 'Peddapalli',\r\n            'Rajanna Sircilla', 'Ranga Reddy', 'Sangareddy', 'Siddipet', 'Suryapet', 'Vikarabad', 'Wanaparthy', 'Warangal Urban',\r\n            'Warangal Rural', 'Yadadri Bhuvanagiri']\r\n    },\r\n\r\n    {\r\n        State: 'Tripura', Districts: ['Dhalai', 'Gomati', 'Khowai', 'North Tripura', 'Sepahijala', 'South Tripura', 'Unokoti',\r\n            'West Tripura']\r\n    },\r\n\r\n    {\r\n        State: 'Uttar Pradesh', Districts: ['Agra', 'Aligarh', 'Allahabad', 'Ambedkar Nagar', 'Amethi', 'Amroha', 'Auraiya',\r\n            'Azamgarh', 'Bagpat', 'Bahraich', 'Ballia', 'Balrampur', 'Banda', 'Barabanki', 'Bareilly', 'Basti', 'Bhadohi', 'Bijnor', 'Budaun',\r\n            'Bulandshahr', 'Chandauli', 'Chitrakoot', 'Deoria', 'Etah', 'Etawah', 'Faizabad', 'Farrukhabad', 'Fatehpur', 'Firozabad',\r\n            'Gautam Buddh Nagar', 'Ghaziabad', 'Ghazipur', 'Gonda', 'Gorakhpur', 'Hamirpur', 'Hapur', 'Hardoi', 'Hathras', 'Jalaun',\r\n            'Jaunpur', 'Jhansi', 'Kannauj', 'Kanpur Dehat', 'Kanpur Nagar', 'Kasganj', 'Kaushambi', 'Kushinagar', 'Lakhimpur Kheri',\r\n            'Lalitpur', 'Lucknow', 'Maharajganj', 'Mahoba', 'Mainpuri', 'Mathura', 'Mau', 'Meerut', 'Mirzapur', 'Moradabad', 'Muzaffarnagar',\r\n            'Pilibhit', 'Pratapgarh', 'Raebareli', 'Rampur', 'Saharanpur', 'Sambhal', 'Sant Kabir Nagar', 'Shahjahanpur', 'Shamli',\r\n            'Shravasti', 'Siddharthnagar', 'Sitapur', 'Sonbhadra', 'Sultanpur', 'Unnao', 'Varanasi']\r\n    },\r\n\r\n    {\r\n        State: 'Uttarkhand', Districts: ['Almora', 'Bageshwar', 'Chamoli', 'Champawat', 'Dehradun', 'Haridwar', 'Nainital',\r\n            'Pauri Garhwal', 'Pithoragarh', 'Rudraprayag', 'Tehri Garhwal', 'Udham Singh Nagar', 'Uttarkashi']\r\n    },\r\n\r\n    {\r\n        State: 'West Bengal', Districts: ['Alipurduar', 'Bankura', 'Paschim Bardhaman', 'Purba Bardhaman', 'Birbhum', 'Cooch Behar',\r\n            'Dakshin Dinajpur', 'Darjeeling', 'Hooghly', 'Howrah', 'Jalpaiguri', 'Jhargram', 'Kalimpong', 'Kolkata', 'Maldah', 'Murshidabad',\r\n            'Nadia', 'North 24 Parganas', 'Paschim Medinipur', 'Purba Medinipur', 'Purulia', 'South 24 Parganas', 'Uttar Dinajpur']\r\n    },\r\n\r\n    {\r\n        State: 'Andaman and Nicobar', Districts: ['Nicobar',\r\n            'North and Middle Andaman',\r\n            'South Andaman']\r\n    },\r\n    { State: 'Chandigarh', Districts: ['Chandigarh'] },\r\n    { State: 'Dadra and Nagar Haveli', Districts: ['Dadra and Nagar Haveli'] },\r\n    { State: 'Daman and Diu', Districts: ['Daman', 'Diu'] },\r\n    {\r\n        State: 'Jammu and Kashmir', Districts: ['Anantnag', 'Bandipora', 'Baramulla', 'Badgam', 'Doda', 'Ganderbal', 'Jammu',\r\n            'Kathua', 'Kishtwar', 'Kulgam', 'Kupwara', 'Poonch', 'Pulwama', 'Rajouri', 'Ramban', 'Reasi', 'Samba', 'Shopian', 'Srinagar',\r\n            'Udhampur']\r\n    },\r\n    { State: 'Ladakh', Districts: ['Kargil', 'Leh'] },\r\n    { State: 'Lakshadweep', Districts: ['Lakshadweep'] },\r\n    {\r\n        State: 'Delhi', Districts: ['Central Delhi', 'East Delhi', 'New Delhi', 'North Delhi', 'North East Delhi',\r\n            'North West Delhi', 'Shahdara', 'South Delhi', 'South East Delhi', 'South West Delhi', 'West Delhi']\r\n    },\r\n    { State: 'Puducherry', Districts: ['Karaikal', 'Mahé', 'Pondicherry', 'Yanam'] }\r\n];\r\n\r\nexport const URLs = {\r\n    createStory: '/api/createStory',\r\n    getStories: '/api/getStories',\r\n    raiseHelpRequest1: '/api/raiseHelpRequest1',\r\n    getHelpRequests1: '/api/getHelpRequests1',\r\n    getMyProfileInfo: '/api/getmyprofileinfo',\r\n    updateMyProfile: '/api/updatemyprofile',\r\n    checkIsUserAvailable: '/api/checkisuseravailable',\r\n    changePassword: '/api/changepassword',\r\n    login: '/api/login',\r\n    uploadProfilePic: '/api/addprofilepiccc',\r\n    postComment: '/api/postcomment',\r\n    getCommentsByRef: '/api/getcommentsbyref',\r\n    raiseDonationRequest: '/api/raiseDonationRequest',\r\n    updateDonationRequest: '/api/updateDonationRequest',\r\n    registerUser: '/api/registeruser',\r\n}\r\n\r\nexport const UserType = {\r\n    Normal: 1,\r\n    SelfAdmin: 2,\r\n    Admin: 3,\r\n    SuperAdmin: 4\r\n}","import axios from 'axios';\r\n\r\nexport default class Service {\r\n    public get(url: string, isAuthRequired?: boolean) {\r\n        let config;\r\n        if (isAuthRequired) {\r\n            config = {\r\n                headers: {\r\n                    'Authorization': `MBwebToken ${localStorage.getItem('MBwebToken') ? localStorage.getItem('MBwebToken') : ''}`\r\n                }\r\n            };\r\n        } else {\r\n            config = {};\r\n        }\r\n\r\n        return axios.get(url, config)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    return res;\r\n                }\r\n            }).catch((err: any) => {\r\n                if (err && err.response) {\r\n                    return {\r\n                        status: false,\r\n                        statuscode: err.response.status,\r\n                        message: err.response.statusText\r\n                    }\r\n                } else {\r\n                    return {\r\n                        status: false,\r\n                        statuscode: 143,\r\n                        message: err.message\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    public post(url: string, data: any, isAuthRequired?: boolean): Promise<any> {\r\n        let config;\r\n        if (isAuthRequired) {\r\n            config = {\r\n                headers: {\r\n                    'Authorization': `MBwebToken ${localStorage.getItem('MBwebToken') ? localStorage.getItem('MBwebToken') : ''}`\r\n                }\r\n            };\r\n        } else {\r\n            config = {};\r\n        }\r\n        return axios.post(url, data, config)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    return res;\r\n                }\r\n            }).catch(err => {\r\n                if (err && err.response) {\r\n                    return {\r\n                        status: false,\r\n                        statuscode: err.response.status,\r\n                        message: err.response.statusText\r\n                    }\r\n                } else {\r\n                    return {\r\n                        status: false,\r\n                        statuscode: 143,\r\n                        message: err.message\r\n                    }\r\n                }\r\n            });\r\n    }\r\n}","import Service from '../../../services/services';\r\nimport { URLs } from '../../../constants/constants';\r\n\r\nexport default class NewsService {\r\n  private service: Service;\r\n  constructor() {\r\n    this.service = new Service();\r\n  }\r\n\r\n  public Login(userInfo: any): Promise<any> {\r\n    let url = `/use${URLs.login}`;\r\n    return this.service.post(url, userInfo).then((res: any) => {\r\n      if (res.status === 200) {\r\n        return res.data;\r\n      }\r\n    });\r\n  }\r\n\r\n  public RegisterUser(userInfo: any): Promise<any> {\r\n    let url = `/use${URLs.registerUser}`;\r\n    return this.service.post(url, userInfo).then((res: any) => {\r\n      if (res.status === 200) {\r\n        return res.data;\r\n      } else {\r\n        return res;\r\n      }\r\n    });\r\n  }\r\n}","export enum ActionTypes {\r\nAddUser = \"AddUser\",\r\nRemoveUser = \"RemoveUser\",\r\nUpdateLoginM =\"UpdateLoginM\",\r\nUpdateUserImage = \"UpdateUserImage\"\r\n}","export default class Util {\r\n  public static validateEmail(email: string): boolean {\r\n    let filter: RegExp = /^([\\w-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\r\n    if (filter.test(email)) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  private static isToday(someDate: any) {\r\n    const today = new Date()\r\n    return someDate.getDate() === today.getDate() &&\r\n      someDate.getMonth() === today.getMonth() &&\r\n      someDate.getFullYear() === today.getFullYear()\r\n  }\r\n\r\n\r\n  public static formatAMPM(date: any) {\r\n    let dateT = new Date(date);\r\n    let hours = dateT.getHours();\r\n    let minutes = dateT.getMinutes();\r\n    const ampm = hours >= 12 ? 'PM' : 'AM';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12;\r\n    let dateTo = '';\r\n    if (this.isToday(dateT)) {\r\n      dateTo = 'Today,';\r\n    } else {\r\n      dateTo = dateT.toDateString();\r\n    }\r\n    let minutess = minutes < 10 ? '0' + minutes : minutes;\r\n    const strTime = dateTo + ' ' + hours + ':' + minutess + ' ' + ampm;\r\n    return strTime;\r\n  }\r\n\r\n  public static extractYoutubeVideoID(url: string) {\r\n    let n = url.indexOf(\"embed\");\r\n    let index = 0;\r\n    if (n !== -1) {\r\n      index = n + 6;\r\n    } else if (url.indexOf(\"watch\") !== -1) {\r\n      let temp = url.indexOf(\"watch\");\r\n      index = temp + 8;\r\n    } else {\r\n      let temp = url.indexOf('youtu.be');\r\n      index = temp + 9;\r\n    }\r\n    return url.substring(index);\r\n  }\r\n}\r\n\r\n\r\n\r\n","import * as React from \"react\";\r\nimport { DefaultButton } from 'office-ui-fabric-react';\r\nimport { ChoiceGroup, IChoiceGroupOption } from 'office-ui-fabric-react/lib/ChoiceGroup';\r\nimport { Dialog, DialogType } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { IUser, IUserErr } from '../../../models/models';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { States, StatesAndDirstricts } from '../../../constants/constants';\r\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport Service from './Service';\r\nimport { FormType } from '../../../models/models';\r\nimport { URLs } from '../../../constants/constants';\r\nimport Util from '../../../util';\r\nimport './styles.scss';\r\nimport { AppState } from \"../../../Redux/app.store\";\r\nimport { connect } from \"react-redux\";\r\nimport { IUserState } from \"../../../Redux/models\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst genderOptions: IChoiceGroupOption[] = [\r\n    { key: 'male', text: 'Male' },\r\n    { key: 'female', text: 'Female' }\r\n];\r\n\r\nconst options: IDropdownOption[] = States.map((state: string) => {\r\n    return { key: state, text: state }\r\n})\r\n\r\ninterface IState {\r\n    isLoginDialogEnabled: boolean;\r\n    userForm: IUser;\r\n    userFormErr: IUserErr;\r\n    confirmPassword: string;\r\n    confirmPasswordErr: string;\r\n    City: IDropdownOption[];\r\n    isPrivacyCheck: boolean;\r\n    PrivacyCheckErr: string;\r\n    FormErrMessage: string;\r\n    showRegisterSuccessDialog: boolean;\r\n    isLoading: boolean,\r\n    imageError: string;\r\n}\r\n\r\ninterface IProps {\r\n    isLoginDialogEnabled: boolean;\r\n    afterLogin(): void;\r\n    formHandle(id: number): void;\r\n    User: IUserState;\r\n}\r\n\r\nclass Register extends React.Component<IProps, IState> {\r\n    private service: Service;\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            isLoginDialogEnabled: this.props.isLoginDialogEnabled,\r\n            userForm: { firstName: '', lastName: '', phoneNumber: '', password: '', gender: '', email: '', city: '', state: '', imagePath: '/uploads/images/avatar_2x.png' },\r\n            userFormErr: { firstNameErr: '', lastNameErr: '', phoneNumberErr: '', passwordErr: '', genderErr: '', emailErr: '', cityErr: '', stateErr: '' },\r\n            confirmPassword: '',\r\n            confirmPasswordErr: '',\r\n            isPrivacyCheck: false,\r\n            City: [],\r\n            PrivacyCheckErr: '',\r\n            FormErrMessage: '',\r\n            showRegisterSuccessDialog: false,\r\n            isLoading: false,\r\n            imageError: ''\r\n        }\r\n\r\n        this._loginCancel = this._loginCancel.bind(this);\r\n        this._inputChangeHandle = this._inputChangeHandle.bind(this);\r\n        this._onGenderChange = this._onGenderChange.bind(this);\r\n        this._cityChangeHandle = this._cityChangeHandle.bind(this);\r\n        this._onPrivacyCheck = this._onPrivacyCheck.bind(this);\r\n        this._submitForm = this._submitForm.bind(this);\r\n        this._onSucess = this._onSucess.bind(this);\r\n        this._phoneNumberChangeHandle = this._phoneNumberChangeHandle.bind(this);\r\n        this._onProgress = this._onSucess.bind(this);\r\n        this._emailChangeHandle = this._emailChangeHandle.bind(this);\r\n        this.service = new Service();\r\n    }\r\n\r\n    componentWillReceiveProps(newProps: IProps) {\r\n        this.setState({\r\n            isLoginDialogEnabled: newProps.isLoginDialogEnabled\r\n        });\r\n    }\r\n\r\n    public _emailChangeHandle = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        let erorMessage: string;\r\n        if (event.target.value === \"\") {\r\n            erorMessage = \"Required\";\r\n        } else if (!Util.validateEmail(event.target.value)) {\r\n            erorMessage = \"Invalid email\"\r\n        }\r\n        else {\r\n            erorMessage = \"\";\r\n        }\r\n        this.setState({\r\n            userForm: { ...this.state.userForm, [event.target.name]: event.target.value },\r\n            userFormErr: { ...this.state.userFormErr, [event.target.name + 'Err']: erorMessage }\r\n        });\r\n    }\r\n\r\n    public _inputChangeHandle = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        let erorMessage: string;\r\n        if (event.target.value === \"\") {\r\n            erorMessage = \"Required\";\r\n        } else {\r\n            erorMessage = \"\";\r\n        }\r\n        this.setState({\r\n            userForm: { ...this.state.userForm, [event.target.name]: event.target.value },\r\n            userFormErr: { ...this.state.userFormErr, [event.target.name + 'Err']: erorMessage }\r\n        });\r\n    }\r\n\r\n    public _phoneNumberChangeHandle = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        let erorMessage: string;\r\n        const phoneNumber = (event.target.validity.valid || event.target.value === '') ? event.target.value : this.state.userForm.phoneNumber;\r\n        if (event.target.value === \"\") {\r\n            erorMessage = \"Required\";\r\n        } else if (!event.target.validity.valid) {\r\n            erorMessage = \"Only number are allowed\";\r\n        } else {\r\n            erorMessage = \"\";\r\n        }\r\n        this.setState({\r\n            userForm: { ...this.state.userForm, [event.target.name]: phoneNumber },\r\n            userFormErr: { ...this.state.userFormErr, [event.target.name + 'Err']: erorMessage }\r\n        });\r\n    }\r\n\r\n    public confirmPasswordChangeHandle(event: any) {\r\n        let erorMessage: string;\r\n        if (event.target.value === \"\") {\r\n            erorMessage = \"Required\";\r\n        } else if (this.state.userForm.password !== '' && (this.state.userForm.password !== event.target.value)) {\r\n            erorMessage = \"Password doesn't match.\"\r\n        }\r\n        else {\r\n            erorMessage = \"\";\r\n        }\r\n        this.setState({\r\n            confirmPassword: event.target.value,\r\n            confirmPasswordErr: erorMessage\r\n        });\r\n    }\r\n\r\n    stateChangeHandle(event: React.FormEvent<HTMLDivElement>, field: string, option?: IDropdownOption,) {\r\n        if (option) {\r\n            let CitysInfo: any[] = [];\r\n            StatesAndDirstricts.forEach((sADInfo: any) => {\r\n                if (sADInfo.State === option.key) {\r\n                    CitysInfo = [...CitysInfo, sADInfo];\r\n                }\r\n            });\r\n            if (CitysInfo && CitysInfo.length > 0) {\r\n\r\n\r\n                let citiesinSelectState = CitysInfo[0].Districts.map((state: string) => {\r\n                    return { key: state, text: state }\r\n                });\r\n                this.setState({\r\n                    userForm: { ...this.state.userForm, [field]: option.key },\r\n                    userFormErr: { ...this.state.userFormErr, [field + 'Err']: '' },\r\n                    City: citiesinSelectState\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    _cityChangeHandle(event: React.FormEvent<HTMLDivElement>, field: string, option?: IDropdownOption,) {\r\n        if (option) {\r\n            this.setState({\r\n                userForm: { ...this.state.userForm, [field]: option.key },\r\n                userFormErr: { ...this.state.userFormErr, [field + 'Err']: '' }\r\n            });\r\n        }\r\n    }\r\n    _loginCancel() {\r\n        this.setState({\r\n            isLoginDialogEnabled: false\r\n        });\r\n        this.props.afterLogin();\r\n    }\r\n\r\n    _onGenderChange(ev: React.FormEvent<HTMLInputElement>, option: IChoiceGroupOption, field: string) {\r\n        if (option) {\r\n            this.setState({\r\n                userForm: { ...this.state.userForm, [field]: option.key },\r\n                userFormErr: { ...this.state.userFormErr, [field + 'Err']: '' }\r\n            });\r\n        }\r\n    }\r\n    _onPrivacyCheck(ev?: React.FormEvent<HTMLElement | HTMLInputElement> | undefined, checked?: boolean | undefined) {\r\n        if (checked !== undefined) {\r\n            this.setState({\r\n                isPrivacyCheck: checked,\r\n                PrivacyCheckErr: ''\r\n            });\r\n        }\r\n    }\r\n\r\n    private isFormValid = (): boolean => {\r\n        let userForm: IUser = this.state.userForm;\r\n        let userFormErr: IUserErr = this.state.userFormErr;\r\n        let confirmPasswordErr: string;\r\n        let isFormValid: boolean = true;\r\n        let PrivacyCheckErr: string;\r\n        if (userForm.phoneNumber === \"\") {\r\n            userFormErr.phoneNumberErr = \"Required\";\r\n            isFormValid = false;\r\n        } else if (userForm.phoneNumber.length < 10) {\r\n            userFormErr.phoneNumberErr = \"Enter valid mobile number\"\r\n            isFormValid = false;\r\n        } else {\r\n            userFormErr.phoneNumberErr = \"\";\r\n        }\r\n        if (userForm.password === \"\") {\r\n            userFormErr.passwordErr = \"Required\";\r\n            isFormValid = false;\r\n        } else {\r\n            userFormErr.passwordErr = \"\";\r\n        }\r\n\r\n        if (this.state.confirmPassword === \"\") {\r\n            confirmPasswordErr = \"Required\";\r\n            isFormValid = false;\r\n        } else if (userForm.password !== '' && (this.state.userForm.password !== this.state.confirmPassword)) {\r\n            confirmPasswordErr = \"Password doesn't match.\";\r\n            isFormValid = false;\r\n        }\r\n        else {\r\n            confirmPasswordErr = \"\";\r\n        }\r\n\r\n        if (userForm.firstName === \"\") {\r\n            userFormErr.firstNameErr = \"Required\";\r\n            isFormValid = false;\r\n        } else {\r\n            userFormErr.firstNameErr = \"\";\r\n        }\r\n\r\n        if (userForm.lastName === \"\") {\r\n            userFormErr.lastNameErr = \"Required\";\r\n            isFormValid = false;\r\n        } else {\r\n            userFormErr.lastNameErr = \"\";\r\n        }\r\n\r\n        if (userForm.gender === \"\") {\r\n            userFormErr.genderErr = \"Required\";\r\n            isFormValid = false;\r\n        } else {\r\n            userFormErr.genderErr = \"\";\r\n        }\r\n\r\n        if (userForm.email === \"\") {\r\n            userFormErr.emailErr = \"Required\";\r\n            isFormValid = false;\r\n        } else if (!Util.validateEmail(userForm.email)) {\r\n            userFormErr.emailErr = \"Invlaid email\"\r\n            isFormValid = false;\r\n        } else {\r\n            userFormErr.emailErr = \"\";\r\n        }\r\n\r\n        if (userForm.state === \"\") {\r\n            userFormErr.stateErr = \"Required\";\r\n            isFormValid = false;\r\n        } else {\r\n            userFormErr.stateErr = \"\";\r\n        }\r\n\r\n        if (userForm.city === \"\") {\r\n            userFormErr.cityErr = \"Required\";\r\n            isFormValid = false;\r\n        } else {\r\n            userFormErr.cityErr = \"\";\r\n        }\r\n\r\n        this.setState({\r\n            userFormErr: userFormErr,\r\n            confirmPasswordErr: confirmPasswordErr,\r\n        });\r\n\r\n        return isFormValid;\r\n\r\n    }\r\n\r\n    private _submitForm() {\r\n        if (this.isFormValid()) {\r\n            this.service.RegisterUser(this.state.userForm).then((res: any) => {\r\n                if (res.status === true) {\r\n                    this.setState({\r\n                        userForm: { firstName: '', lastName: '', phoneNumber: '', password: '', gender: '', email: '', city: '', state: '', imagePath: '/uploads/images/avatar_2x.png' },\r\n                        userFormErr: { firstNameErr: '', lastNameErr: '', phoneNumberErr: '', passwordErr: '', genderErr: '', emailErr: '', cityErr: '', stateErr: '' },\r\n                        confirmPassword: '',\r\n                        confirmPasswordErr: '',\r\n                        isPrivacyCheck: false,\r\n                        City: [],\r\n                        PrivacyCheckErr: '',\r\n                        showRegisterSuccessDialog: true\r\n                    });\r\n                } else {\r\n                    if (res.statuscode === 2) {\r\n                        this.setState({\r\n                            FormErrMessage: \"Account exit with this number/email\"\r\n                        });\r\n                    } else {\r\n                        this.setState({\r\n                            FormErrMessage: res.msg\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onPhotoUpload(event: any, _onSucess: any, _onProgress: any) {\r\n        //console.log(event.target.files[0]);\r\n        if (event.target.files[0]) {\r\n            if (event.target.files[0].type === 'image/x-png' || event.target.files[0].type === 'image/png' || event.target.files[0].type === 'image/gif' || event.target.files[0].type === 'image/jpeg' || event.target.files[0].type === 'image/jpg') {\r\n                let datae: any = event.target.files[0];\r\n                const data = new FormData();\r\n                data.append('file', event.target.files[0]);\r\n                var xhr = new XMLHttpRequest();\r\n                xhr.open(\"POST\", `/use${URLs.uploadProfilePic}`);\r\n                xhr.upload.addEventListener(\"progress\", function (this, evt) {\r\n                    if (evt.lengthComputable) {\r\n                        let percentComplete: any = evt.loaded / evt.total;\r\n                        let df: any = percentComplete.toFixed(2) * 100;\r\n                        datae.progress = df.toFixed(0);\r\n                        let db = datae;\r\n                        db.progress = df.toFixed(0);\r\n                        _onProgress(db);\r\n                    }\r\n                }, false);\r\n                xhr.onloadstart = function (e) {\r\n                }\r\n                xhr.onloadend = function (e) {\r\n                }\r\n                xhr.send(data);\r\n                xhr.onreadystatechange =\r\n                    function () {\r\n                        if (this.readyState === 4 && this.status === 200) {\r\n                            var res = JSON.parse(this.response);\r\n                            datae.response = res;\r\n                            var de = datae\r\n                            _onSucess(de);\r\n                        }\r\n                    };\r\n            } else {\r\n                this.setState({\r\n                    imageError: \"Only images are allowed.\"\r\n                });\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        imageError: ''\r\n                    });\r\n                }, 3000);\r\n            }\r\n        }\r\n    }\r\n\r\n    public _onSucess(some: any) {\r\n        if (some && some.response) {\r\n            this.setState({\r\n                userForm: { ...this.state.userForm, imagePath: some.response.filePath }\r\n            });\r\n        }\r\n    }\r\n\r\n    public _onProgress(some: any) {\r\n\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (<>\r\n            <Dialog\r\n                hidden={!this.state.isLoginDialogEnabled}\r\n                onDismiss={this._loginCancel}\r\n                dialogContentProps={{\r\n                    type: DialogType.normal,\r\n                    title: \"Signup\",\r\n                    closeButtonAriaLabel: 'Close',\r\n                    showCloseButton: true,\r\n                }}\r\n\r\n                modalProps={{\r\n                    styles: { main: { maxWidth: 450 } },\r\n                    containerClassName: \"register-form-dialog\",\r\n                    onDismissed: this._loginCancel,\r\n                    isBlocking: true\r\n                }}\r\n            >\r\n                <div className=\"ms-Grid\" dir=\"ltr\">\r\n                    <div className=\"ms-Grid-row\">\r\n                        <div className=\"ms-Grid-col ms-sm12 ms-md6 ms-lg6 sp-center\">\r\n                            <img src={`${this.state.userForm.imagePath}`} className=\"avatar\" alt=\"sss\" />\r\n                            <input type=\"file\" name=\"photo\" id=\"photo\" className=\"display-none\" accept=\"image/*\" onChange={(event: any) => this.onPhotoUpload(event, this._onSucess, this._onProgress)} />\r\n                            <label className=\"cursor upload-photo\" htmlFor=\"photo\">Select photo</label>\r\n                            <span className=\"sp-danger\">{this.state.imageError}</span>\r\n                        </div>\r\n                        <div className=\"ms-Grid-col ms-sm12 ms-md6 ms-lg6\">\r\n                            <TextField pattern=\"[0-9]*\" label=\"phoneNumber\" autoSave=\"false\" autoComplete=\"false\" name=\"phoneNumber\" errorMessage={this.state.userFormErr.phoneNumberErr} value={this.state.userForm.phoneNumber} onChange={(event: any) => this._phoneNumberChangeHandle(event)} required minLength={10} prefix=\"+91\" maxLength={10} />\r\n                            <TextField type=\"password\" autoComplete=\"false\" label=\"Password\" name=\"password\" errorMessage={this.state.userFormErr.passwordErr} value={this.state.userForm.password} onChange={(event: any) => this._inputChangeHandle(event)} required minLength={8} />\r\n                            <TextField type=\"password\" autoComplete=\"false\" label=\"Confirm password\" name=\"confirmPassword\" errorMessage={this.state.confirmPasswordErr} value={this.state.confirmPassword} onChange={(event: any) => this.confirmPasswordChangeHandle(event)} required minLength={8} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"ms-Grid\" dir=\"ltr\">\r\n                    <div className=\"ms-Grid-row\">\r\n                        <div className=\"ms-Grid-col ms-sm12 ms-md6 ms-lg6\">\r\n                            <TextField label=\"First Name\" name=\"firstName\" errorMessage={this.state.userFormErr.firstNameErr} value={this.state.userForm.firstName} onChange={(event: any) => this._inputChangeHandle(event)} required />\r\n                        </div>\r\n                        <div className=\"ms-Grid-col ms-sm12 ms-md6 ms-lg6\">\r\n                            <TextField label=\"Last Name\" name=\"lastName\" errorMessage={this.state.userFormErr.lastNameErr} value={this.state.userForm.lastName} onChange={(event: any) => this._inputChangeHandle(event)} required />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"ms-Grid\" dir=\"ltr\">\r\n                    <div className=\"ms-Grid-row\">\r\n                        <div className=\"ms-Grid-col ms-sm12 ms-md6 ms-lg6\">\r\n                            <TextField label=\"Email\" name=\"email\" errorMessage={this.state.userFormErr.emailErr} value={this.state.userForm.email} onChange={(event: any) => this._emailChangeHandle(event)} required />\r\n                        </div>\r\n                        <div className=\"ms-Grid-col ms-sm12 ms-md6 ms-lg6\">\r\n                            <ChoiceGroup defaultSelectedKey=\"B\" options={genderOptions} onChange={(ev: any, o: any) => this._onGenderChange(ev, o, \"gender\")} label=\"Gender\" required={true} />\r\n                            <span className=\"sp-danger\">{this.state.userFormErr.genderErr}</span>\r\n                            <style>\r\n                                {`.ms-ChoiceField {\r\n                                    display: inline-block;\r\n                                    margin-left:10px;\r\n                                } \r\n                                `}\r\n                            </style>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"ms-Grid\" dir=\"ltr\">\r\n                    <div className=\"ms-Grid-row\">\r\n                        <div className=\"ms-Grid-col ms-sm12 ms-md6 ms-lg6\">\r\n                            <Dropdown\r\n                                label=\"State\"\r\n                                options={options}\r\n                                errorMessage={this.state.userFormErr.stateErr}\r\n                                selectedKey={this.state.userForm.state}\r\n                                onChange={(event: React.FormEvent<HTMLDivElement>, option?: IDropdownOption) => this.stateChangeHandle(event, \"state\", option)} required\r\n                            />\r\n                        </div>\r\n                        <div className=\"ms-Grid-col ms-sm12 ms-md6 ms-lg6\">\r\n                            <Dropdown\r\n                                label=\"District\"\r\n                                options={this.state.City}\r\n                                errorMessage={this.state.userFormErr.cityErr}\r\n                                selectedKey={this.state.userForm.city}\r\n                                onChange={(event: React.FormEvent<HTMLDivElement>, option?: IDropdownOption) => this._cityChangeHandle(event, \"city\", option)} required\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <span className=\"sp-danger sp-ml10\">{this.state.FormErrMessage}</span>\r\n                <DefaultButton onClick={this._submitForm} className=\"sp-main-btn sp-float-right btn-register\" text=\"Register\" />\r\n            </Dialog>\r\n            <Dialog\r\n                hidden={!this.state.showRegisterSuccessDialog}\r\n                onDismiss={this._loginCancel}\r\n                modalProps={{\r\n                    styles: { main: { maxWidth: 450 } },\r\n                    isBlocking: true\r\n                }}\r\n            >\r\n                <h5>Thanks for joing our community.</h5>\r\n                <DefaultButton onClick={() => this.props.formHandle(FormType.Login)} className=\"sp-main-btn sp-float-right btn-login\" text=\"Ok\" />\r\n            </Dialog>\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppState): AppState => ({\r\n    User: state.User,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(Register);\r\n","import { ActionTypes } from '../action.types';\r\nimport { IUser, IAddUser, IRemoveUser, IChangeLanguage, ILoginM } from '../models';\r\n\r\nexport default class Actions {\r\n  public static addUser = (userInfo: IUser): IAddUser => {\r\n    return {\r\n      type: ActionTypes.AddUser,\r\n      User: userInfo\r\n    };\r\n  }\r\n\r\n  public static removeUser = (): IRemoveUser => {\r\n    return {\r\n      type: ActionTypes.RemoveUser,\r\n      User: null\r\n    };\r\n  }\r\n\r\n  public static UpdateLoginM = (updateM: ILoginM) => {\r\n    return {\r\n      type: ActionTypes.UpdateLoginM,\r\n      payload: updateM\r\n    }\r\n  }\r\n\r\n  public static updateUserImage = (imgUrl: string) => {\r\n    return {\r\n      type: ActionTypes.UpdateUserImage,\r\n      payload: imgUrl\r\n    }\r\n  }\r\n}","import Service from '../services';\r\nimport { store } from '../../app';\r\nimport Actions from '../../Redux/Actions/actions';\r\nimport { URLs } from '../../constants/constants';\r\n\r\nexport default class AuthService {\r\n    private service: Service;\r\n    constructor() {\r\n        this.service = new Service();\r\n    }\r\n\r\n    public Login(userInfo: any): Promise<any> {\r\n        let url = `/use${URLs.login}`;\r\n        const promise = new Promise((resolve, reject) => {\r\n            this.service.post(url, userInfo)\r\n                .then(\r\n                    (data: any) => {\r\n                        if (data.status || data.status === 200) {\r\n                            let res = data.data\r\n                            if (res.statusmsg.status === true) {\r\n                                localStorage.setItem('MBwebToken', res.MBwebToken);\r\n                                localStorage.setItem('User', JSON.stringify(res.User));\r\n                                store.dispatch(Actions.addUser(res.User));\r\n                                resolve(res.statusmsg);\r\n                            } else {\r\n                                resolve(res.statusmsg);\r\n                            }\r\n                        } else {\r\n                            resolve(data);\r\n                        }\r\n                    },\r\n                    msg => { \r\n                        reject(msg);\r\n                    }\r\n                ).catch((err) => {\r\n\r\n                });\r\n        });\r\n        return promise;\r\n    }\r\n\r\n    public verifyEmail(data: any): Promise<any> {\r\n        let url = \"/use/api/verifyemail\";\r\n        return this.service.post(url, data, true).then((res: any) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            } else if (res.status === false) {\r\n                return res;\r\n            }\r\n        });\r\n    }\r\n\r\n    public verifyOTP(data: any): Promise<any> {\r\n        let url = \"/use/api/verifyotp\";\r\n        return this.service.post(url, data, true).then((res: any) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            } else if (res.status === false) {\r\n                return res;\r\n            }\r\n        });\r\n    }\r\n\r\n    public verifyUser(data: any): Promise<any> {\r\n        let url = \"/use/api/verifyuserforgetpassword\";\r\n        return this.service.post(url, data, true).then((res: any) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            } else if (res.status === false) {\r\n                return res;\r\n            }\r\n        });\r\n    }\r\n\r\n    public resetPassword(data: any): Promise<any> {\r\n        let url = \"/use/api/forgetpassword\";\r\n        return this.service.post(url, data, true).then((res: any) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            } else if (res.status === false) {\r\n                return res;\r\n            }\r\n        });\r\n    }\r\n\r\n    public isLoggedIn() {\r\n        var user: any;\r\n        if (localStorage.getItem('User')) {\r\n            user = localStorage.getItem('User');\r\n            return JSON.parse(user);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public isLogged() {\r\n        if (localStorage.getItem('User')) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public LogOut() {\r\n        localStorage.clear();\r\n        store.dispatch(Actions.removeUser());\r\n        window.location.replace(`/`);\r\n        return { message: 'logged out successfully.', statuscode: 1, status: true };\r\n    }\r\n\r\n    public LogOut1() {\r\n        localStorage.clear();\r\n        store.dispatch(Actions.removeUser());\r\n        return { message: 'logged out successfully.', statuscode: 1, status: true };\r\n    }\r\n}","import * as React from \"react\";\r\nimport { DefaultButton } from 'office-ui-fabric-react';\r\nimport { Dialog, DialogType } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { FormType, ILoginForm, ILoginFormErr } from '../../../models/models';\r\nimport AuthService from '../../../services/authService/index';\r\nimport { AppState } from \"../../../Redux/app.store\";\r\nimport { connect } from \"react-redux\";\r\nimport { IUserState } from \"../../../Redux/models\";\r\nimport './styles.scss';\r\n\r\ninterface IState {\r\n    loginForm: ILoginForm;\r\n    loginFormErr: ILoginFormErr;\r\n    FormErrMessage: string;\r\n    language: string;\r\n}\r\n\r\ninterface IProps {\r\n    showDialog: boolean;\r\n    afterLogin(): void;\r\n    formHandle(id: number, userLoginId?: string): void;\r\n    User: IUserState;\r\n}\r\n\r\nclass LoginForm extends React.Component<IProps, IState> {\r\n    private authService: AuthService;\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            loginForm: { phoneNumber: '', password: '' },\r\n            loginFormErr: { phoneNumberErr: '', passwordErr: '' },\r\n            FormErrMessage: '',\r\n            language: this.props.User.language\r\n        }\r\n        this._passwordChangeHandle = this._passwordChangeHandle.bind(this);\r\n        this._submitForm = this._submitForm.bind(this);\r\n        this._phoneNumberChangeHandle = this._phoneNumberChangeHandle.bind(this);\r\n        this.authService = new AuthService();\r\n    }\r\n\r\n    private _passwordChangeHandle = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        let errorMessage: string;\r\n        if (event.target.value === \"\") {\r\n            errorMessage = \"Required\";\r\n        } else {\r\n            errorMessage = \"\";\r\n        }\r\n        this.setState({\r\n            loginForm: { ...this.state.loginForm, [event.target.name]: event.target.value },\r\n            loginFormErr: { ...this.state.loginFormErr, [event.target.name + 'Err']: errorMessage }\r\n        });\r\n    }\r\n\r\n    private _phoneNumberChangeHandle = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        let errorMessage: string;\r\n        const phoneNumber = (event.target.validity.valid) ? event.target.value : this.state.loginForm.phoneNumber;\r\n        if (event.target.value === \"\") {\r\n            errorMessage = errorMessage = \"Required\";\r\n        } else if (!event.target.validity.valid) {\r\n            errorMessage = \"Only number are allowed\";\r\n        } else {\r\n            errorMessage = \"\";\r\n        }\r\n        this.setState({\r\n            loginForm: { ...this.state.loginForm, [event.target.name]: phoneNumber },\r\n            loginFormErr: { ...this.state.loginFormErr, [event.target.name + 'Err']: errorMessage }\r\n        });\r\n    }\r\n\r\n    private isFormValid = (): boolean => {\r\n        let loginForm: ILoginForm = this.state.loginForm;\r\n        let loginFormErr: ILoginFormErr = this.state.loginFormErr;\r\n        let isFormValid: boolean = true;\r\n        if (loginForm.phoneNumber === \"\") {\r\n            loginFormErr.phoneNumberErr = \"Required\";\r\n            isFormValid = false;\r\n        } else if (loginForm.phoneNumber.length < 10) {\r\n            loginFormErr.phoneNumberErr = \"Enter valid mobile number\"\r\n            isFormValid = false;\r\n        } else {\r\n            loginFormErr.phoneNumberErr = \"\";\r\n        }\r\n        if (loginForm.password === \"\") {\r\n            loginFormErr.passwordErr = \"Required\";\r\n            isFormValid = false;\r\n        } else {\r\n            loginFormErr.passwordErr = \"\";\r\n        }\r\n        this.setState({\r\n            loginFormErr: loginFormErr,\r\n        });\r\n        return isFormValid;\r\n    }\r\n\r\n    private _submitForm() {\r\n        if (this.isFormValid()) {\r\n            this.authService.Login(this.state.loginForm).then((res: any) => {\r\n                if (res.status === true) {\r\n                    this.setState({\r\n                        loginForm: { phoneNumber: '', password: '' },\r\n                        loginFormErr: { phoneNumberErr: '', passwordErr: '' },\r\n                        FormErrMessage: ''\r\n                    });\r\n                } else {\r\n                    if (res.statuscode === 2) {\r\n                        this.props.formHandle(FormType.EMailVerify, this.state.loginForm.phoneNumber)\r\n                    } else {\r\n                        if (this.state.language === 'en') {\r\n                            this.setState({\r\n                                FormErrMessage: res.message\r\n                            });\r\n                        } else {\r\n                            if (res.statuscode === 6) {\r\n                                this.setState({\r\n                                    FormErrMessage: \"Invalid Password\"\r\n                                });\r\n                            } else if (res.statuscode === 3) {\r\n                                this.setState({\r\n                                    FormErrMessage: \"Your account is rejected.\"\r\n                                });\r\n                            } else if (res.statuscode === 4) {\r\n                                this.setState({\r\n                                    FormErrMessage: \"Your account is suspended.\"\r\n                                });\r\n                            } else if (res.statuscode === 7) {\r\n                                this.setState({\r\n                                    FormErrMessage: \"Didn't find your account.\"\r\n                                });\r\n                            } else {\r\n                                this.setState({\r\n                                    FormErrMessage: \"Some error occured.\"\r\n                                });\r\n                            }\r\n                        }\r\n                        setTimeout(() => {\r\n                            this.setState({\r\n                                FormErrMessage: ''\r\n                            });\r\n                        }, 5000);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <Dialog\r\n                hidden={!this.props.showDialog}\r\n                onDismiss={() => { this.props.afterLogin() }}\r\n                dialogContentProps={{\r\n                    type: DialogType.normal,\r\n                    title: \"Login\",\r\n                    closeButtonAriaLabel: 'Close',\r\n                    showCloseButton: true,\r\n                }}\r\n                modalProps={{\r\n                    containerClassName: \"login-container-w\",\r\n                    onDismissed: () => { this.props.afterLogin() },\r\n                    isBlocking: true\r\n                }} >\r\n                <div className=\"login-page\">\r\n                    <input type=\"text\" pattern=\"[0-9]*\" maxLength={10} className={`input-control fadeIn first ${true ? 'error-border' : ''}`} placeholder={\"Enter phone number\"} name=\"phoneNumber\" value={this.state.loginForm.phoneNumber} onChange={this._phoneNumberChangeHandle} />\r\n                    <p className=\"sp-danger\">{this.state.loginFormErr.phoneNumberErr}</p>\r\n                    <input type=\"password\" className={`input-control fadeIn second ${true ? 'error-border' : ''}`} placeholder=\"Enter password\" name=\"password\" value={this.state.loginForm.password} onChange={this._passwordChangeHandle} />\r\n                    <p className=\"sp-danger\">{this.state.loginFormErr.passwordErr}</p>\r\n                    <p className=\"sp-danger\">{this.state.FormErrMessage}</p>\r\n                    <a className=\"forget-password\" onClick={() => this.props.formHandle(FormType.ForgetPassword)} >Forget password?</a>\r\n                    <div className=\"sp-clearFix\"></div>\r\n                    <p className=\"create-account\">{\"Join with us!\"}<a className=\"register\" onClick={() => this.props.formHandle(FormType.Register)}>{\"Signup\"}</a> </p>\r\n                    <DefaultButton onClick={this._submitForm} className=\"sp-main-btn sp-float-right btn-login\" text=\"login\" />\r\n                </div>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): AppState => ({\r\n    User: state.User,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(LoginForm);","import * as React from \"react\";\r\nimport { DefaultButton } from 'office-ui-fabric-react';\r\nimport { Dialog, DialogType } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { FormType } from '../../../models/models';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport AuthService from '../../../services/authService/index';\r\nimport Util from '../../../util';\r\nimport { AppState } from \"../../../Redux/app.store\";\r\nimport { connect } from \"react-redux\";\r\nimport { IUserState } from \"../../../Redux/models\";\r\nimport './styles.scss';\r\n\r\ninterface IEmailVerifyForm {\r\n    email: string;\r\n    userLoginId: string;\r\n    otp: string;\r\n}\r\n\r\ninterface IEmailVerifyFormErr {\r\n    emailErr: string;\r\n    otpErr: string;\r\n}\r\n\r\ninterface IState {\r\n    EmailVerifyForm: IEmailVerifyForm;\r\n    EmailVerifyFormErr: IEmailVerifyFormErr;\r\n    FormErrMessage: string;\r\n    showOtpDialog: boolean;\r\n    isSuccessDialogHide: boolean;\r\n    showResendButton: boolean;\r\n    isResendOtp: boolean;\r\n}\r\n\r\ninterface IProps {\r\n    showDialog: boolean;\r\n    afterLogin(): void;\r\n    formHandle(id: number): void;\r\n    userLoginId: string;\r\n    User: IUserState;\r\n\r\n}\r\n\r\nclass EmailVerifyForm extends React.Component<IProps, IState> {\r\n    private authService: AuthService;\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            EmailVerifyForm: { email: '', otp: '', userLoginId: this.props.userLoginId },\r\n            EmailVerifyFormErr: { emailErr: '', otpErr: '' },\r\n            FormErrMessage: '',\r\n            showOtpDialog: false,\r\n            isSuccessDialogHide: false,\r\n            showResendButton: false,\r\n            isResendOtp: false\r\n        }\r\n\r\n        this._submitForm = this._submitForm.bind(this);\r\n        this._emailChangeHandle = this._emailChangeHandle.bind(this);\r\n        this._isOtpValid = this._isOtpValid.bind(this);\r\n        this._submitOtp = this._submitOtp.bind(this);\r\n        this._closeDialog = this._closeDialog.bind(this);\r\n        this._otpChangeHandle = this._otpChangeHandle.bind(this);\r\n        this._resendOTP = this._resendOTP.bind(this);\r\n\r\n        this.authService = new AuthService();\r\n    }\r\n\r\n    private _emailChangeHandle = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        let erorMessage: string;\r\n        if (event.target.value === \"\") {\r\n            erorMessage = \"Email is required.\";\r\n        } else if (!Util.validateEmail(event.target.value)) {\r\n            erorMessage = \"Invalid email\";\r\n        }\r\n        else {\r\n            erorMessage = \"\";\r\n        }\r\n        this.setState({\r\n            EmailVerifyForm: { ...this.state.EmailVerifyForm, [event.target.name]: event.target.value },\r\n            EmailVerifyFormErr: { ...this.state.EmailVerifyFormErr, [event.target.name + 'Err']: erorMessage }\r\n        });\r\n    }\r\n\r\n    private _otpChangeHandle = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        let erorMessage: string;\r\n        const otp = (event.target.validity.valid) ? event.target.value : (event.target.validationMessage === \"Please fill out this field.\" ? '' : this.state.EmailVerifyForm.otp);\r\n        if (event.target.value === \"\") {\r\n            erorMessage = \"OTP is required\";\r\n        } else if (!event.target.validity.valid) {\r\n            erorMessage = \"Please enter numbers only.\";\r\n        }\r\n        else {\r\n            erorMessage = \"\";\r\n        }\r\n        this.setState({\r\n            EmailVerifyForm: { ...this.state.EmailVerifyForm, [event.target.name]: otp },\r\n            EmailVerifyFormErr: { ...this.state.EmailVerifyFormErr, [event.target.name + 'Err']: erorMessage }\r\n        });\r\n    }\r\n\r\n\r\n    private _closeDialog() {\r\n        this.props.formHandle(FormType.Login);\r\n    }\r\n\r\n    private isFormValid = (): boolean => {\r\n        let emailVerifyForm: IEmailVerifyForm = this.state.EmailVerifyForm;\r\n        let emailVerifyFormErr: IEmailVerifyFormErr = this.state.EmailVerifyFormErr;\r\n        let isFormValid: boolean = true;\r\n        if (emailVerifyForm.email === \"\") {\r\n            emailVerifyFormErr.emailErr = \"Email is required.\";\r\n        } else if (!Util.validateEmail(emailVerifyForm.email)) {\r\n            emailVerifyFormErr.emailErr = \"Invalid email\";\r\n        }\r\n        else {\r\n            emailVerifyFormErr.emailErr = \"\";\r\n        }\r\n        this.setState({\r\n            EmailVerifyFormErr: emailVerifyFormErr,\r\n        });\r\n        return isFormValid;\r\n    }\r\n\r\n    private _submitForm() {\r\n        if (this.isFormValid()) {\r\n            this.authService.verifyEmail({ phoneNumber: this.state.EmailVerifyForm.userLoginId, email: this.state.EmailVerifyForm.email }).then((res: any) => {\r\n                if (res.status === true) {\r\n\r\n                    if (res.statuscode === 1) {\r\n                        this.setState({\r\n                            showOtpDialog: true\r\n                        });\r\n                        setTimeout(() => {\r\n                            this.setState({\r\n                                showResendButton: true\r\n                            });\r\n                        }, 30000);\r\n                    }\r\n                } else {\r\n                    this.setState({\r\n                        FormErrMessage: res.message\r\n                    });\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            FormErrMessage: ''\r\n                        });\r\n                    }, 5000);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    private _isOtpValid = (): boolean => {\r\n        let emailVerifyForm: IEmailVerifyForm = this.state.EmailVerifyForm;\r\n        let emailVerifyFormErr: IEmailVerifyFormErr = this.state.EmailVerifyFormErr;\r\n        let isFormValid: boolean = true;\r\n        if (emailVerifyForm.otp === \"\") {\r\n            emailVerifyFormErr.otpErr = \"Required\";\r\n            isFormValid = false;\r\n        }\r\n        else {\r\n            emailVerifyFormErr.otpErr = \"\";\r\n        }\r\n        this.setState({\r\n            EmailVerifyFormErr: emailVerifyFormErr,\r\n        });\r\n        return isFormValid;\r\n    }\r\n\r\n    private _submitOtp() {\r\n        if (this._isOtpValid()) {\r\n            this.authService.verifyOTP({ phoneNumber: this.state.EmailVerifyForm.userLoginId, email: this.state.EmailVerifyForm.email, otp: this.state.EmailVerifyForm.otp }).then((res: any) => {\r\n                if (res.status === true) {\r\n                    this.setState({\r\n                        isSuccessDialogHide: true\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        FormErrMessage: res.message\r\n                    });\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            FormErrMessage: ''\r\n                        });\r\n                    }, 5000);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private _resendOTP() {\r\n        this.authService.verifyEmail({ phoneNumber: this.state.EmailVerifyForm.userLoginId, email: this.state.EmailVerifyForm.email }).then((res: any) => {\r\n            if (res.status === true) {\r\n                if (res.statuscode === 1) {\r\n                    this.setState({\r\n                        showResendButton: false,\r\n                        isResendOtp: true\r\n                    });\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            isResendOtp: false\r\n                        });\r\n                    }, 7000);\r\n                }\r\n            } else {\r\n                this.setState({\r\n                    FormErrMessage: res.message\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <Dialog\r\n                hidden={!this.props.showDialog}\r\n                onDismiss={() => { this.props.afterLogin() }}\r\n                dialogContentProps={{\r\n                    type: DialogType.normal,\r\n                    title: \"Verify email\",\r\n                    closeButtonAriaLabel: 'Close',\r\n                    showCloseButton: true,\r\n                }}\r\n                modalProps={{\r\n                    containerClassName: \"login-container-w\",\r\n                    onDismissed: () => { this.props.afterLogin() },\r\n                    isBlocking: true\r\n                }} >\r\n                <div className=\"login-page\">\r\n                    {!this.state.isSuccessDialogHide ? (!this.state.showOtpDialog ? <>\r\n                        <p className=\"sp-danger\">Your email not verified</p>\r\n                        <p>Please enter email to verify</p>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            errorMessage={this.state.EmailVerifyFormErr.emailErr}\r\n                            value={this.state.EmailVerifyForm.email}\r\n                            onChange={(event: any) => this._emailChangeHandle(event)}\r\n                            required />\r\n                        <p className=\"sp-danger\">{this.state.FormErrMessage}</p>\r\n                        <DefaultButton onClick={this._submitForm} className=\"sp-main-btn sp-float-right btn-login\" text=\"Send\" />\r\n                    </> : <>\r\n                            <p>Please enter Six digit Otp sent to your email.</p>\r\n                            <TextField\r\n                                label=\"OTP\"\r\n                                minLength={6}\r\n                                maxLength={6}\r\n                                pattern=\"[0-9]*\"\r\n                                name=\"otp\"\r\n                                errorMessage={this.state.EmailVerifyFormErr.otpErr}\r\n                                value={this.state.EmailVerifyForm.otp}\r\n                                onChange={(event: any) => this._otpChangeHandle(event)} required />\r\n                            <p className=\"sp-danger\">{this.state.FormErrMessage}</p>\r\n\r\n                            {this.state.showResendButton && <> <p className=\"no-otp\">Didn't recieve OTP,<span onClick={this._resendOTP} >Resend</span></p> </>}\r\n                            {this.state.isResendOtp && <p className=\"otp-sent\">OTP sent succussfully.</p>}\r\n                            <DefaultButton onClick={this._submitOtp} className=\"sp-main-btn float-right btn-login\" text=\"Verify\" />\r\n                        </>) :\r\n                        <div style={{ textAlign: \"center\" }}>\r\n                            <p>Your account is verified.</p>\r\n                            <p>Please login again.</p>\r\n                            <DefaultButton className=\"sp-btn-login\" onClick={this._closeDialog} text=\"Ok\" />\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): AppState => ({\r\n    User: state.User,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(EmailVerifyForm);\r\n","import * as React from \"react\";\r\nimport { DefaultButton } from 'office-ui-fabric-react';\r\nimport { Dialog, DialogType } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { FormType } from '../../../models/models';\r\nimport AuthService from '../../../services/authService/index';\r\nimport Util from \"../../../util\";\r\nimport { AppState } from \"../../../Redux/app.store\";\r\nimport { connect } from \"react-redux\";\r\nimport { IUserState } from \"../../../Redux/models\";\r\nimport './styles.scss';\r\n\r\ninterface IForgetPassword {\r\n    phoneNumber: string;\r\n    email: string;\r\n}\r\n\r\ninterface IForgetPasswordErr {\r\n    phoneNumberErr: string;\r\n    emailErr: string;\r\n}\r\n\r\ninterface IResetPasswordForm {\r\n    otp: string;\r\n    newPassword: string;\r\n    confirmPassword: string;\r\n}\r\n\r\ninterface IResetPasswordFormErr {\r\n    otpErr: string;\r\n    newPasswordErr: string;\r\n    confirmPasswordErr: string;\r\n}\r\n\r\ninterface IState {\r\n    forgetPasswordForm: IForgetPassword;\r\n    forgetPasswordFormErr: IForgetPasswordErr;\r\n    FormErrMessage: string;\r\n    resetPassword: IResetPasswordForm;\r\n    resetPasswordErr: IResetPasswordFormErr;\r\n    isUserFound: boolean;\r\n    isSuccessDialogHide: boolean;\r\n\r\n}\r\n\r\ninterface IProps {\r\n    showDialog: boolean;\r\n    afterLogin(): void;\r\n    User: IUserState;\r\n    formHandle(id: number, userLoginId?: string): void;\r\n}\r\n\r\nclass ForgetPasswrdForm extends React.Component<IProps, IState> {\r\n    private authService: AuthService;\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            forgetPasswordForm: { phoneNumber: '', email: '' },\r\n            forgetPasswordFormErr: { phoneNumberErr: '', emailErr: '' },\r\n            resetPassword: { otp: '', newPassword: '', confirmPassword: '' },\r\n            resetPasswordErr: { otpErr: '', newPasswordErr: '', confirmPasswordErr: '' },\r\n            FormErrMessage: '',\r\n            isSuccessDialogHide: false,\r\n            isUserFound: false\r\n        }\r\n        this._submitForm = this._submitForm.bind(this);\r\n        this._emailChangeHandle = this._emailChangeHandle.bind(this);\r\n        this._phoneNumberChangeHandle = this._phoneNumberChangeHandle.bind(this);\r\n        this._resetPassowrd = this._resetPassowrd.bind(this);\r\n        this._closeDialog = this._closeDialog.bind(this);\r\n        this._confirmPasswordChangeHandle = this._confirmPasswordChangeHandle.bind(this);\r\n        this._passwordChangeHandle = this._passwordChangeHandle.bind(this);\r\n        this.__otpChangeHandle = this.__otpChangeHandle.bind(this);\r\n        this.authService = new AuthService();\r\n    }\r\n\r\n    private _phoneNumberChangeHandle = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        let errorMessage: string;\r\n        const phoneNumber = (event.target.validity.valid) ? event.target.value : (event.target.validationMessage === \"required\" ? '' : this.state.forgetPasswordForm.phoneNumber);\r\n        if (event.target.value === \"\") {\r\n            errorMessage = \"Required\";\r\n        } else if (!event.target.validity.valid) {\r\n            errorMessage = \"Only number allowed.\"\r\n        } else {\r\n            errorMessage = \"\";\r\n        }\r\n        this.setState({\r\n            forgetPasswordForm: { ...this.state.forgetPasswordForm, [event.target.name]: phoneNumber },\r\n            forgetPasswordFormErr: { ...this.state.forgetPasswordFormErr, [event.target.name + 'Err']: errorMessage }\r\n        });\r\n    }\r\n\r\n    private _closeDialog() {\r\n        this.props.formHandle(FormType.Login);\r\n    }\r\n\r\n    private isFormValid = (): boolean => {\r\n        let forgetPassword: IForgetPassword = this.state.forgetPasswordForm;\r\n        let forgetPasswordErr: IForgetPasswordErr = this.state.forgetPasswordFormErr;\r\n        let isFormValid: boolean = true;\r\n        if (forgetPassword.phoneNumber === \"\") {\r\n            forgetPasswordErr.phoneNumberErr = \"Required\";\r\n            isFormValid = false;\r\n        } else {\r\n            forgetPasswordErr.phoneNumberErr = \"\";\r\n        }\r\n        if (forgetPassword.email === \"\") {\r\n            forgetPasswordErr.emailErr = \"Required\";\r\n            isFormValid = false;\r\n        } else if (!Util.validateEmail(forgetPassword.email)) {\r\n            forgetPasswordErr.emailErr = \"Invalid email\"\r\n            isFormValid = false;\r\n        }\r\n        else {\r\n            forgetPasswordErr.emailErr = \"\";\r\n        }\r\n        this.setState({\r\n            forgetPasswordFormErr: forgetPasswordErr,\r\n        });\r\n        return isFormValid;\r\n    }\r\n\r\n    private _emailChangeHandle = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        let erorMessage: string;\r\n        if (event.target.value === \"\") {\r\n            erorMessage = \"Required\";\r\n        } else if (!Util.validateEmail(event.target.value)) {\r\n            erorMessage = \"Invalid email.\"\r\n        }\r\n        else {\r\n            erorMessage = \"\";\r\n        }\r\n        this.setState({\r\n            forgetPasswordForm: { ...this.state.forgetPasswordForm, [event.target.name]: event.target.value },\r\n            forgetPasswordFormErr: { ...this.state.forgetPasswordFormErr, [event.target.name + 'Err']: erorMessage }\r\n        });\r\n    }\r\n\r\n    private _submitForm() {\r\n        if (this.isFormValid()) {\r\n            this.authService.verifyUser(this.state.forgetPasswordForm).then((res: any) => {\r\n                if (res.status === true) {\r\n                    this.setState({\r\n                        isUserFound: true\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        FormErrMessage: res.message\r\n                    });\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            FormErrMessage: ''\r\n                        });\r\n                    }, 5000);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private _passwordChangeHandle = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        let erorMessage: string;\r\n        if (event.target.value === \"\") {\r\n            erorMessage = \"Required\";\r\n        } else {\r\n            erorMessage = \"\";\r\n        }\r\n        this.setState({\r\n            resetPassword: { ...this.state.resetPassword, [event.target.name]: event.target.value },\r\n            resetPasswordErr: { ...this.state.resetPasswordErr, [event.target.name + 'Err']: erorMessage }\r\n        });\r\n    }\r\n\r\n    private __otpChangeHandle = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        let erorMessage: string;\r\n        const otp = (event.target.validity.valid) ? event.target.value : (event.target.validationMessage === \"Required\" ? '' : this.state.resetPassword.otp);\r\n        if (event.target.value === \"\") {\r\n            erorMessage = \"Required\";\r\n        } else if (!event.target.validity.valid) {\r\n            erorMessage = \"Only number are allowed\";\r\n        }\r\n        else {\r\n            erorMessage = \"\";\r\n        }\r\n        this.setState({\r\n            resetPassword: { ...this.state.resetPassword, [event.target.name]: otp },\r\n            resetPasswordErr: { ...this.state.resetPasswordErr, [event.target.name + 'Err']: erorMessage }\r\n        });\r\n    }\r\n\r\n    private _confirmPasswordChangeHandle(event: any) {\r\n        let erorMessage: string;\r\n        if (event.target.value === \"\") {\r\n            erorMessage = \"Required\";\r\n        } else if (this.state.resetPassword.newPassword !== '' && (this.state.resetPassword.newPassword !== event.target.value)) {\r\n            erorMessage = \"Password doesn't match.\"\r\n        }\r\n        else {\r\n            erorMessage = \"\";\r\n        }\r\n        this.setState({\r\n            resetPassword: { ...this.state.resetPassword, [event.target.name]: event.target.value },\r\n            resetPasswordErr: { ...this.state.resetPasswordErr, [event.target.name + 'Err']: erorMessage }\r\n        });\r\n    }\r\n\r\n    private isResetFormvalid() {\r\n        let resetPassword: IResetPasswordForm = this.state.resetPassword;\r\n        let resetPasswordErr: IResetPasswordFormErr = this.state.resetPasswordErr;\r\n        let isFormValid: boolean = true;\r\n\r\n        if (resetPassword.otp === \"\") {\r\n            resetPasswordErr.otpErr = \"Required\";\r\n            isFormValid = false;\r\n        }\r\n        else {\r\n            resetPasswordErr.otpErr = \"\";\r\n        }\r\n\r\n        if (resetPassword.newPassword === \"\") {\r\n            resetPasswordErr.newPasswordErr = \"Required\";\r\n            isFormValid = false;\r\n        } else {\r\n            resetPasswordErr.newPasswordErr = \"\";\r\n        }\r\n\r\n        if (resetPassword.confirmPassword === \"\") {\r\n            resetPasswordErr.confirmPasswordErr = \"Required\";\r\n            isFormValid = false;\r\n        } else if (resetPassword.newPassword !== '' && (resetPassword.newPassword !== resetPassword.confirmPassword)) {\r\n            resetPasswordErr.confirmPasswordErr = \"Password doesn't match\";\r\n            isFormValid = false;\r\n        }\r\n        else {\r\n            resetPasswordErr.confirmPasswordErr = \"\";\r\n        }\r\n        this.setState({\r\n            resetPasswordErr: resetPasswordErr,\r\n        });\r\n        return isFormValid;\r\n    }\r\n\r\n    private _resetPassowrd() {\r\n        if (this.isResetFormvalid()) {\r\n            this.authService.resetPassword({ phoneNumber: this.state.forgetPasswordForm.phoneNumber, otp: this.state.resetPassword.otp, newPassword: this.state.resetPassword.newPassword }).then((res: any) => {\r\n                if (res.status === true) {\r\n                    this.setState({\r\n                        isSuccessDialogHide: true\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        FormErrMessage: res.message\r\n                    });\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            FormErrMessage: ''\r\n                        });\r\n                    }, 5000);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <Dialog\r\n                hidden={!this.props.showDialog}\r\n                onDismiss={() => { this.props.afterLogin() }}\r\n                dialogContentProps={{\r\n                    type: DialogType.normal,\r\n                    title: \"Forget password\",\r\n                    closeButtonAriaLabel: 'Close',\r\n                    showCloseButton: true,\r\n                }}\r\n                modalProps={{\r\n                    containerClassName: \"login-container-w\",\r\n                    onDismissed: () => { this.props.afterLogin() },\r\n                    isBlocking: true\r\n                }} >\r\n\r\n                {!this.state.isSuccessDialogHide ? (!this.state.isUserFound ?\r\n                    <div className=\"login-page\">\r\n                        <TextField pattern=\"[0-9]*\" label=\"Phone number\" autoSave=\"false\" autoComplete=\"false\" name=\"phoneNumber\" errorMessage={this.state.forgetPasswordFormErr.phoneNumberErr} value={this.state.forgetPasswordForm.phoneNumber} onChange={(event: any) => this._phoneNumberChangeHandle(event)} required minLength={10} prefix=\"+91\" maxLength={10} />\r\n                        <TextField label=\"Email\" name=\"email\" errorMessage={this.state.forgetPasswordFormErr.emailErr} value={this.state.forgetPasswordForm.email} onChange={(event: any) => this._emailChangeHandle(event)} required />\r\n                        <p className=\"sp-danger\">{this.state.FormErrMessage}</p>\r\n                        <DefaultButton onClick={this._submitForm} className=\"sp-main-btn sp-float-right btn-login\" text=\"Send\" />\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <p>Please enter Six digit OTP</p>\r\n                        <TextField label=\"OTP\" minLength={6} maxLength={6} pattern=\"[0-9]*\" name=\"otp\" errorMessage={this.state.resetPasswordErr.otpErr} value={this.state.resetPassword.otp} onChange={(event: any) => this.__otpChangeHandle(event)} required />\r\n                        <hr />\r\n                        <TextField type=\"password\" autoComplete=\"false\" label=\"Password\" name=\"newPassword\" errorMessage={this.state.resetPasswordErr.newPasswordErr} value={this.state.resetPassword.newPassword} onChange={(event: any) => this._passwordChangeHandle(event)} required minLength={8} />\r\n                        <TextField type=\"password\" autoComplete=\"false\" label=\"Confirm password\" name=\"confirmPassword\" errorMessage={this.state.resetPasswordErr.confirmPasswordErr} value={this.state.resetPassword.confirmPassword} onChange={(event: any) => this._confirmPasswordChangeHandle(event)} required minLength={8} />\r\n                        <DefaultButton onClick={this._resetPassowrd} className=\"sp-main-btn float-right btn-login\" text=\"Send\" />\r\n                    </div>) : <div style={{ textAlign: \"center\" }}>\r\n                        <p>Password changed.</p>\r\n                        <p>Please login again.</p>\r\n                        <DefaultButton className=\"sp-btn-login sp-mb10\" onClick={this._closeDialog} text=\"Ok\" />\r\n                    </div>\r\n                }\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\n//export default ForgetPasswrdForm;\r\n\r\nconst mapStateToProps = (state: AppState): AppState => ({\r\n    User: state.User,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(ForgetPasswrdForm);\r\n","import * as React from \"react\";\r\nimport Register from './RegisterForm';\r\nimport LoginForm from './LoginForm';\r\nimport { FormType } from '../../../models/models';\r\nimport EmailVerifyForm from \"./EmailVerify\";\r\nimport ForgetPasswrdForm from \"./ForgetPasswordForm\";\r\nimport { AppState } from \"../../../Redux/app.store\";\r\nimport { connect } from \"react-redux\";\r\nimport { IUserState } from \"../../../Redux/models\";\r\nimport './styles.scss';\r\n\r\ninterface IState {\r\n    isLoginDialogEnabled: boolean;\r\n    Form: number;\r\n    userLoginId: string;\r\n}\r\n\r\ninterface IProps {\r\n    isLoginDialogEnabled: boolean;\r\n    afterLogin(): void;\r\n    User: IUserState;\r\n}\r\n\r\nclass RL extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            isLoginDialogEnabled: this.props.isLoginDialogEnabled,\r\n            Form: FormType.Login,\r\n            userLoginId: ''\r\n        }\r\n        this._formHandle = this._formHandle.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(newProps: IProps) {\r\n        this.setState({\r\n            Form: (newProps.isLoginDialogEnabled ? 1 : 0)\r\n        });\r\n    }\r\n\r\n    public _formHandle(id: number, userLoginId?: string) {\r\n        if (userLoginId) {\r\n            this.setState({\r\n                Form: id,\r\n                userLoginId: userLoginId\r\n            });\r\n            if (id === 3) {\r\n                this.props.afterLogin();\r\n            }\r\n        } else {\r\n            this.setState({\r\n                Form: id\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <>\r\n                {this.state.Form === FormType.Login && <LoginForm showDialog={true} formHandle={this._formHandle} afterLogin={this.props.afterLogin} ></LoginForm>}\r\n                {this.state.Form === FormType.Register && <Register isLoginDialogEnabled={true} afterLogin={this.props.afterLogin} formHandle={this._formHandle} ></Register>}\r\n                {this.state.Form === FormType.EMailVerify && <EmailVerifyForm userLoginId={this.state.userLoginId} showDialog={true} formHandle={this._formHandle} afterLogin={this.props.afterLogin} />}\r\n                {this.state.Form === FormType.ForgetPassword && <ForgetPasswrdForm showDialog={true} formHandle={this._formHandle} afterLogin={this.props.afterLogin} />}\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): AppState => ({\r\n    User: state.User,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(RL);\r\n","import * as React from \"react\";\r\nimport {\r\n    NavLink,\r\n    RouteComponentProps, withRouter\r\n} from 'react-router-dom';\r\nimport { AppState } from '../../../Redux/app.store';\r\nimport { connect } from \"react-redux\";\r\nimport { DefaultButton, Callout, Dialog, DialogType } from 'office-ui-fabric-react';\r\nimport RL from './../RL';\r\nimport { store } from '../../../app';\r\nimport { IUserState } from '../../../Redux/models';\r\nimport AuthService from '../../../services/authService/index';\r\nimport Actions from '../../../Redux/Actions/actions';\r\nimport ReduxService from \"../../../Redux/service\";\r\nimport { IDialogPropss } from \"../../../models/models\";\r\n\r\ninterface IState {\r\n    isProfileClicked: boolean;\r\n    isUser: boolean;\r\n    isLoginDialogEnabled: boolean;\r\n    LoggedInUser: any;\r\n    isLoggoutClik: boolean;\r\n    DialogProps: IDialogPropss;\r\n}\r\n\r\ninterface IProps extends RouteComponentProps {\r\n    User: IUserState;\r\n    afterLanguageChange?: () => void;\r\n}\r\n\r\nclass Navbar extends React.Component<IProps, IState> {\r\n    private _menuButtonElement = React.createRef<HTMLImageElement>();\r\n    private authService: AuthService;\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.authService = new AuthService();\r\n        var language = localStorage.getItem('language');\r\n        if (language === undefined || language === null) {\r\n            localStorage.setItem('language', 'en');\r\n        }\r\n\r\n        this.state = {\r\n            isProfileClicked: false,\r\n            isUser: (this.authService.isLogged() ? true : false),\r\n            isLoginDialogEnabled: false,\r\n            LoggedInUser: this.authService.isLoggedIn(),\r\n            isLoggoutClik: false,\r\n            DialogProps: { show: false, message: '' }\r\n        }\r\n        this._onProfileClick = this._onProfileClick.bind(this);\r\n        this._onCalloutDismiss = this._onCalloutDismiss.bind(this);\r\n        this._enableLoginDialog = this._enableLoginDialog.bind(this);\r\n        this._loginCancel = this._loginCancel.bind(this);\r\n        this._logOut = this._logOut.bind(this);\r\n        this._onPathClick = this._onPathClick.bind(this);\r\n        this._navigateTo = this._navigateTo.bind(this);\r\n        this._closeAlertDialog = this._closeAlertDialog.bind(this);\r\n        store.dispatch(Actions.addUser(this.authService.isLoggedIn()));\r\n\r\n    }\r\n\r\n    _loginCancel() {\r\n        this.setState({\r\n            isLoginDialogEnabled: false\r\n        });\r\n    }\r\n\r\n    _onProfileClick() {\r\n        this.setState({\r\n            isProfileClicked: true\r\n        });\r\n    }\r\n\r\n    _onCalloutDismiss() {\r\n        this.setState({\r\n            isProfileClicked: false\r\n        });\r\n    }\r\n\r\n    private _enableLoginDialog() {\r\n        this.setState({\r\n            isLoginDialogEnabled: true\r\n        });\r\n    }\r\n\r\n\r\n    public _navigateTo(navigateTo: string) {\r\n        this.props.history.push(navigateTo);\r\n    }\r\n\r\n    public _logOut() {\r\n        this.setState({\r\n            isLoggoutClik: true\r\n        });\r\n        this.authService.LogOut();\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(newProps: IProps) {\r\n        let isProfileClicked = false;\r\n        let isLogoutClick = false;\r\n        if (this.state.isLoggoutClik && newProps.User.User === null) {\r\n            isProfileClicked = false;\r\n            isLogoutClick = false;\r\n        }\r\n        this.setState({\r\n            isLoginDialogEnabled: false,\r\n            isUser: ((newProps.User.User && (newProps.User.User.firstName !== '')) ? true : false),\r\n            LoggedInUser: ((newProps.User.User && (newProps.User.User.firstName !== '')) ? newProps.User.User : null),\r\n            isProfileClicked: isProfileClicked,\r\n            isLoggoutClik: isLogoutClick\r\n        });\r\n    }\r\n\r\n\r\n    private _onPathClick(path: string) {\r\n        if (this.state.isUser) {\r\n            this.props.history.push(path);\r\n        } else {\r\n            this.setState({\r\n                DialogProps: { show: true, message: \"Please login\" }\r\n            });\r\n        }\r\n    }\r\n\r\n    private _closeAlertDialog() {\r\n        this.setState({\r\n            DialogProps: { show: false, message: '' },\r\n        });\r\n\r\n    }\r\n    public render(): JSX.Element {\r\n        return (\r\n            <>\r\n                <div className=\"sp-topnav\">\r\n                    <div className=\"sp-nav-container nav-items\">\r\n                        <NavLink exact className=\"home-lin\" to=\"/\">\r\n                            <img src={'/uploads/static_files/logo.png'} className=\"sp-logo\" />\r\n                        </NavLink>\r\n                        <NavLink exact className=\"home-link\" to=\"/\">\r\n                            Share Care\r\n                        </NavLink>\r\n                        <div className=\"nav-items1\">\r\n                            <span onClick={() => { this._onPathClick('/stories') }}>\r\n                                Stories\r\n                        </span>\r\n                            <span onClick={() => { this._onPathClick('/help') }}>\r\n                                Help\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"sp-topnav-right\" >\r\n                            {(this.state.isUser && this.state.LoggedInUser) && <>\r\n                                <p onClick={this._onProfileClick} className=\"user-name sp-pointer\">{this.state.LoggedInUser.firstName}</p>\r\n                                <img className=\"profile-pict sp-pointer\" src={`${this.state.LoggedInUser.imagePath}`} ref={this._menuButtonElement} onClick={this._onProfileClick} />\r\n                            </>\r\n                            }\r\n                            {!this.state.isUser &&\r\n                                <DefaultButton onClick={this._enableLoginDialog} className=\"sp-btn-login\" text=\"Login\" />\r\n                            }\r\n                        </div>\r\n                        {this.state.isProfileClicked && (\r\n                            <Callout\r\n                                role=\"alertdialog\"\r\n                                gapSpace={0}\r\n                                target={this._menuButtonElement.current}\r\n                                onDismiss={this._onCalloutDismiss}\r\n                                directionalHint={6}\r\n                                setInitialFocus={true}\r\n                                isBeakVisible={false}\r\n                            >\r\n                                <div className=\"user-actions\">\r\n                                    <p onClick={() => this._navigateTo('/myprofile')}>My profile</p>\r\n                                    <hr />\r\n                                    <p onClick={this._logOut}>Log out <i className=\"ms-Icon ms-Icon--PowerButton\" aria-hidden=\"true\"></i></p>\r\n                                </div>\r\n                            </Callout>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                {this.state.isLoginDialogEnabled && <RL isLoginDialogEnabled={this.state.isLoginDialogEnabled} afterLogin={this._loginCancel} />}\r\n\r\n                <Dialog\r\n                    hidden={!this.state.DialogProps.show}\r\n                    onDismiss={this._closeAlertDialog}\r\n                    dialogContentProps={{\r\n                        type: DialogType.normal,\r\n\r\n                    }}\r\n                    modalProps={{\r\n                        styles: { main: { maxWidth: 450, textAlign: \"center\" } },\r\n                        isBlocking: true\r\n                    }}\r\n                >\r\n                    <p>{this.state.DialogProps.message}</p>\r\n                    <DefaultButton className=\"sp-btn-login\" onClick={this._closeAlertDialog} text=\"Ok\" />\r\n                </Dialog>\r\n            </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): AppState => ({\r\n    User: state.User,\r\n});\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n)(Navbar));","import * as React from \"react\";\r\nimport Navbar from \"../Navbar/index\";\r\nimport Stories from './stories';\r\nimport Help from './help';\r\nimport Main from './main';\r\nimport { DefaultButton, IStackStyles } from \"office-ui-fabric-react\";\r\nconst stackStyles: Partial<IStackStyles> = { root: { color: \"#E55346\" } };\r\ninterface IProps {\r\n}\r\n\r\ninterface IState {\r\n    model: number;\r\n}\r\n\r\nclass Home extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            model: 1\r\n        }\r\n        this._onModelOpen = this._onModelOpen.bind(this);\r\n        this.reRender = this.reRender.bind(this);\r\n    }\r\n\r\n    private reRender() {\r\n        this.render();\r\n    }\r\n\r\n    private _onModelOpen(model: number) {\r\n        if (this.state.model === model) {\r\n        } else {\r\n            this.setState({\r\n                model: model\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    public render(): JSX.Element {\r\n        return (<>\r\n            <Navbar afterLanguageChange={this.reRender} />\r\n            <div className=\"sp-container13 main-container\" style={{\r\n                backgroundImage: `url(\"https://raw.githubusercontent.com/bimalendu04/file_Host/master/ShareCare%20(1).png\")`\r\n            }} >\r\n            </div >\r\n            <div>\r\n                <p>asdfg</p>\r\n            </div>\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import * as React from \"react\";\r\nimport {\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport AuthService from '../../../services/authService';\r\n\r\ninterface IProps {\r\n    path: string;\r\n}\r\n\r\nclass PrivateRoute extends React.Component<IProps, {}> {\r\n    private authService: AuthService;\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.authService = new AuthService();\r\n    }\r\n    public render(): JSX.Element {\r\n        let { path } = this.props;\r\n        return (\r\n            <Route\r\n                path={path}\r\n                render={({ location }) =>\r\n                    this.authService.isLogged() ? (\r\n                        this.props.children\r\n                    ) : (\r\n                            <Redirect\r\n                                to={{\r\n                                    pathname: \"/\",\r\n                                    state: { from: location }\r\n                                }}\r\n                            />\r\n                        )\r\n                }\r\n            />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PrivateRoute;","import Service from '../../services/services';\r\nimport { URLs } from '../../constants/constants';\r\nimport AuthService from '../../services/authService/index'\r\nexport default class NewsService {\r\n  private service: Service;\r\n  private authService: AuthService;\r\n\r\n  constructor() {\r\n    this.service = new Service();\r\n    this.authService = new AuthService();\r\n  }\r\n\r\n  private dataOrLogout(res: any): any {\r\n    if (res.status === 200) {\r\n      return res.data;\r\n    } else if (res.status === false && res.statuscode === 403) {\r\n      this.authService.LogOut();\r\n    } else if (res.status === false && res.statuscode === 401) {\r\n      this.authService.LogOut();\r\n    } else if (res.status === false) {\r\n      return res;\r\n    }\r\n  }\r\n\r\n  private dataOrError(res: any): any {\r\n    if (res.status === 200) {\r\n      return res.data;\r\n    } else if (res.status === false) {\r\n      return res;\r\n    }\r\n  }\r\n\r\n  public createStory(newsInfo: any): Promise<any> {\r\n    let url = `/use${URLs.createStory}`\r\n    return this.service.post(url, newsInfo, true).then((res: any) => {\r\n      return this.dataOrError(res);\r\n    });\r\n  }\r\n\r\n  public getStories(filter: any): Promise<any> {\r\n    let url = `/use/${URLs.getStories}`;\r\n    return this.service.post(url, filter, true).then((res: any) => {\r\n      return this.dataOrError(res);\r\n    });\r\n  }\r\n\r\n  public raiseHelpRequest1(filter: any): Promise<any> {\r\n    let url = `/use/${URLs.raiseHelpRequest1}`;\r\n    return this.service.post(url, filter, true).then((res: any) => {\r\n      return this.dataOrError(res);\r\n    });\r\n  }\r\n\r\n  public getHelpRequests1(filter: any): Promise<any> {\r\n    let url = `/use/${URLs.getHelpRequests1}`;\r\n    return this.service.post(url, filter, true).then((res: any) => {\r\n      return this.dataOrError(res);\r\n    });\r\n  }\r\n\r\n  public getProfileByIdF(newsInfo: any): Promise<any> {\r\n    let url = `/use${URLs.getMyProfileInfo}`;\r\n    return this.service.post(url, {}, true).then((res: any) => {\r\n      return this.dataOrLogout(res);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  public updateProfile(newsInfo: any): Promise<any> {\r\n    let url = `/use${URLs.updateMyProfile}`;\r\n    return this.service.post(url, newsInfo, true).then((res: any) => {\r\n      return this.dataOrLogout(res);\r\n    });\r\n  }\r\n\r\n  public changePassword(newsInfo: any): Promise<any> {\r\n    let url = `/use${URLs.changePassword}`;\r\n    return this.service.post(url, newsInfo, true).then((res: any) => {\r\n      return this.dataOrLogout(res);\r\n    });\r\n  }\r\n\r\n  public isAvailable(filter: any): Promise<any> {\r\n    let url = `/use${URLs.checkIsUserAvailable}`;\r\n    return this.service.post(url, filter).then((res: any) => {\r\n      return this.dataOrError(res);\r\n    });\r\n  }\r\n\r\n  public getCommentsByRef(newsInfo: any): Promise<any> {\r\n    let url = `/use${URLs.getCommentsByRef}`\r\n    return this.service.post(url, newsInfo).then((res: any) => {\r\n      return this.dataOrError(res);\r\n    });\r\n  }\r\n\r\n\r\n  public postComment(newsInfo: any): Promise<any> {\r\n    let url = `/use${URLs.postComment}`\r\n    return this.service.post(url, newsInfo, true).then((res: any) => {\r\n      return this.dataOrError(res);\r\n\r\n    });\r\n  }\r\n\r\n  public updateDonationRequest(orderInfo: any): Promise<any> {\r\n    let url = `/use${URLs.updateDonationRequest}`;\r\n    return this.service.post(url, orderInfo).then((res: any) => {\r\n      return this.dataOrLogout(res);\r\n    });\r\n  }\r\n\r\n  public raiseDonationRequest(filter: any): Promise<any> {\r\n    let url = `/use/${URLs.raiseDonationRequest}`;\r\n    return this.service.post(url, filter).then((res: any) => {\r\n      return this.dataOrError(res);\r\n    });\r\n  }\r\n\r\n}","import * as React from \"react\";\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { States, StatesAndDirstricts } from '../../../constants/constants';\r\nimport { ErrorMessages, IDialogPropss } from '../../../models/models';\r\nimport NewsService from '../Service';\r\nimport './styles.scss';\r\nimport { Dialog, DialogType } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { DefaultButton } from 'office-ui-fabric-react';\r\n\r\nconst options: IDropdownOption[] = States.map((state: string) => {\r\n  return { key: state, text: state }\r\n})\r\n\r\ninterface IAddress {\r\n  isShow: boolean;\r\n  state: string;\r\n  stateErr: string;\r\n  city: string;\r\n  cityErr: string;\r\n}\r\n\r\ninterface IState {\r\n  address: IAddress;\r\n  City: IDropdownOption[];\r\n  userId: string;\r\n  DialogProps: IDialogPropss;\r\n}\r\n\r\ninterface IProps {\r\n  city: string;\r\n  state: string;\r\n  userId: string;\r\n}\r\n\r\nclass Address extends React.Component<IProps, IState> {\r\n  private service: NewsService;\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    let CitysInfo: any[] = [];\r\n    StatesAndDirstricts.forEach((sADInfo: any) => {\r\n      if (sADInfo.State === this.props.state) {\r\n        CitysInfo = [...CitysInfo, sADInfo];\r\n      }\r\n    });\r\n    let citiesinSelectState = CitysInfo[0].Districts.map((state: string) => {\r\n      return { key: state, text: state }\r\n    });\r\n\r\n    this.state = {\r\n      address: {\r\n        isShow: false,\r\n        stateErr: '',\r\n        state: this.props.state,\r\n        city: this.props.city,\r\n        cityErr: ''\r\n      },\r\n      userId: this.props.userId,\r\n      City: citiesinSelectState,\r\n      DialogProps: { show: false, message: '' }\r\n    }\r\n    this._stateChangeHandle = this._stateChangeHandle.bind(this);\r\n    this._cityChangeHandle = this._cityChangeHandle.bind(this);\r\n    this._submit = this._submit.bind(this);\r\n    this._showEditForm = this._showEditForm.bind(this);\r\n    this._closeDialog = this._closeDialog.bind(this);\r\n    this._hideEditForm = this._hideEditForm.bind(this);\r\n    this.service = new NewsService();\r\n\r\n  }\r\n\r\n  private _closeDialog() {\r\n    this.setState({\r\n      DialogProps: { show: false, message: '' }\r\n    });\r\n  }\r\n\r\n\r\n  private _stateChangeHandle(event: React.FormEvent<HTMLDivElement>, field: string, option?: IDropdownOption) {\r\n    if (option) {\r\n      let CitysInfo: any[] = [];\r\n      StatesAndDirstricts.forEach((sADInfo: any) => {\r\n        if (sADInfo.State === option.key) {\r\n          CitysInfo = [...CitysInfo, sADInfo];\r\n        }\r\n      });\r\n      let citiesinSelectState = CitysInfo[0].Districts.map((state: string) => {\r\n        return { key: state, text: state }\r\n      });\r\n      this.setState({\r\n        address: { ...this.state.address, [field]: option.key, city: '' },\r\n        City: citiesinSelectState\r\n      });\r\n    }\r\n  }\r\n\r\n  private _cityChangeHandle(event: React.FormEvent<HTMLDivElement>, field: string, option?: IDropdownOption) {\r\n    if (option) {\r\n      this.setState({\r\n        address: { ...this.state.address, [field]: option.key }\r\n      });\r\n    }\r\n  }\r\n\r\n  private isAddressValid(form: IAddress) {\r\n    let e1: string, e2: string, isValid = true;\r\n    if (form.city === \"\") {\r\n      e1 = ErrorMessages.cityIsRequired;\r\n      isValid = false;\r\n    } else {\r\n      e1 = \"\";\r\n    }\r\n    if (form.state === \"\") {\r\n      e2 = ErrorMessages.stateIsRequired;\r\n      isValid = false;\r\n    } else {\r\n      e2 = \"\";\r\n    }\r\n\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        address: { ...prevState.address, cityErr: e1, stateErr: e2 }\r\n      }\r\n    });\r\n    return isValid;\r\n  }\r\n\r\n  private _submit() {\r\n    if (this.isAddressValid(this.state.address)) {\r\n      this.service.updateProfile({\r\n        field: 'address',\r\n        data: { city: this.state.address.city, state: this.state.address.state, id: this.state.userId }\r\n      }).then((res: any) => {\r\n        if (res.status) {\r\n          this.setState((prevState: IState) => {\r\n            return {\r\n              ...prevState,\r\n              address: { ...prevState.address, isShow: false }\r\n            }\r\n          });\r\n        } else {\r\n          this.setState({\r\n            DialogProps: { show: true, message: res.message },\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private _showEditForm() {\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        address: { ...prevState.address, isShow: true }\r\n      }\r\n    });\r\n  }\r\n\r\n  private _hideEditForm() {\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        address: {\r\n          ...prevState.address,\r\n          isShow: false,\r\n          stateErr: '',\r\n          state: this.props.state,\r\n          city: this.props.city,\r\n          cityErr: ''\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div className=\"ms-Grid\" dir=\"ltr\">\r\n        <div className=\"ms-Grid-row card-item\">\r\n          <div className=\"ms-Grid-col ms-sm3 ms-md3 ms-lg3\" >\r\n            <p className=\"sp-no-pm sp-m3 title\">Address</p>\r\n          </div>\r\n          <div className=\"ms-Grid-col ms-sm9 ms-md9 ms-lg9\" >\r\n            <div className=\"ms-Grid\" dir=\"ltr\">\r\n              {!this.state.address.isShow ?\r\n                <div className=\"ms-Grid-row\">\r\n                  <div className=\"ms-Grid-col ms-sm9 ms-md9 ms-lg9\" >\r\n                    <p className=\"sp-no-pm sp-m3\">{`${this.state.address.city} ${this.state.address.state}`}</p>\r\n                  </div>\r\n                  <div className=\"ms-Grid-col ms-sm3 ms-md3 ms-lg3\" >\r\n                    <button className=\"btn-edit btn-action\" onClick={() => this._showEditForm()}>Edit</button>\r\n                  </div>\r\n                </div>\r\n                : <div> <Dropdown\r\n                  label=\"State\"\r\n                  options={options}\r\n                  errorMessage={this.state.address.stateErr}\r\n                  selectedKey={this.state.address.state}\r\n                  onChange={(event: React.FormEvent<HTMLDivElement>, option?: IDropdownOption) => this._stateChangeHandle(event, \"state\", option)} required\r\n                />\r\n                  <Dropdown\r\n                    label=\"City\"\r\n                    options={this.state.City}\r\n                    errorMessage={this.state.address.cityErr}\r\n                    selectedKey={this.state.address.city}\r\n                    onChange={(event: React.FormEvent<HTMLDivElement>, option?: IDropdownOption) => this._cityChangeHandle(event, \"city\", option)} required\r\n                  />\r\n                  <button className=\"btn-edit btn-action\" onClick={() => this._submit()} >Save</button>\r\n                  <button className=\"btn-edit btn-action sp-mr10\" onClick={() => this._hideEditForm()} >Cancel</button>\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Dialog\r\n          hidden={!this.state.DialogProps.show}\r\n          onDismiss={this._closeDialog}\r\n          dialogContentProps={{\r\n            type: DialogType.normal,\r\n          }}\r\n          modalProps={{\r\n            styles: { main: { maxWidth: 450, textAlign: \"center\" } },\r\n            isBlocking: true\r\n          }}\r\n        >\r\n          <p>{this.state.DialogProps.message}</p>\r\n          <DefaultButton className=\"sp-btn-login\" onClick={this._closeDialog} text=\"Ok\" />\r\n        </Dialog>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Address;","import * as React from \"react\";\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport './styles.scss';\r\nimport { ErrorMessages, IDialogPropss } from '../../../models/models';\r\nimport NewsService from '../Service';\r\nimport { Dialog, DialogType } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { DefaultButton } from 'office-ui-fabric-react';\r\n\r\ninterface name {\r\n  isShow: boolean;\r\n  firstName: string;\r\n  lastName: string;\r\n  firstNameErr: string;\r\n  lastNameErr: string;\r\n}\r\ninterface IState {\r\n  name: name\r\n  userId: string;\r\n  DialogProps: IDialogPropss;\r\n}\r\n\r\ninterface IProps {\r\n  firstName: string;\r\n  lastName: string;\r\n  userId: string;\r\n}\r\n\r\nclass Name extends React.Component<IProps, IState> {\r\n  private service: NewsService;\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      name: {\r\n        isShow: false,\r\n        firstName: this.props.firstName,\r\n        firstNameErr: '',\r\n        lastName: this.props.lastName,\r\n        lastNameErr: ''\r\n      },\r\n      userId: this.props.userId,\r\n      DialogProps: { show: false, message: '' }\r\n    }\r\n    this.service = new NewsService();\r\n    this._submit = this._submit.bind(this);\r\n    this._showEditForm = this._showEditForm.bind(this);\r\n    this._closeDialog = this._closeDialog.bind(this);\r\n    this._nameChangeHandle = this._nameChangeHandle.bind(this);\r\n  }\r\n\r\n  private _submit() {\r\n    if (this.nameValidation(this.state.name)) {\r\n      this.service.updateProfile({\r\n        field: 'name',\r\n        data: { firstName: this.state.name.firstName, lastName: this.state.name.lastName, id: this.state.userId }\r\n      }).then((res: any) => {\r\n        if (res.status) {\r\n          this.setState((prevState: IState) => {\r\n            return {\r\n              ...prevState,\r\n              name: { ...prevState.name, isShow: false }\r\n            }\r\n          });\r\n        } else {\r\n          this.setState({\r\n            DialogProps: { show: true, message: res.message },\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private _closeDialog() {\r\n    this.setState({\r\n      DialogProps: { show: false, message: '' }\r\n    });\r\n  }\r\n\r\n  private _showEditForm() {\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        name: { ...prevState.name, isShow: true }\r\n      }\r\n    });\r\n  }\r\n\r\n  private nameValidation(form: name) {\r\n    let e1: string, e2: string, isValid = true;\r\n    if (form.firstName === \"\") {\r\n      e1 = ErrorMessages.firstNameIsRequired;\r\n      isValid = false;\r\n    } else {\r\n      e1 = \"\";\r\n    }\r\n    if (form.lastName === \"\") {\r\n      e2 = ErrorMessages.lastNameIsRequired;\r\n      isValid = false;\r\n    } else {\r\n      e2 = \"\";\r\n    }\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        name: { ...prevState.name, firstNameErr: e1, lastNameErr: e2 }\r\n      }\r\n    });\r\n    return isValid;\r\n  }\r\n\r\n  public _nameChangeHandle = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    let erorMessage: string;\r\n    if (event.target.value === \"\") {\r\n      erorMessage = event.target.name === \"firstName\" ? \"Firstname is Required.\" : \"Lastname is Required.\";\r\n    } else {\r\n      erorMessage = ''\r\n    }\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        name: { ...prevState.name, [event.target.name]: event.target.value, [event.target.name + 'Err']: erorMessage }\r\n      }\r\n    });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div className=\"ms-Grid\" dir=\"ltr\">\r\n        <div className=\"ms-Grid-row card-item\">\r\n          <div className=\"ms-Grid-col ms-sm3 ms-md3 ms-lg3\" >\r\n            <p className=\"sp-no-pm sp-m3 title\">Name</p>\r\n          </div>\r\n          <div className=\"ms-Grid-col ms-sm9 ms-md9 ms-lg9\" >\r\n            <div className=\"ms-Grid\" dir=\"ltr\">\r\n              {!this.state.name.isShow ?\r\n                <div className=\"ms-Grid-row\">\r\n                  <div className=\"ms-Grid-col ms-sm9 ms-md9 ms-lg9\" >\r\n                    <p className=\"sp-no-pm sp-m3 profile-name\">{`${this.state.name.firstName} ${this.state.name.lastName}`} </p>\r\n                  </div>\r\n                </div>\r\n                :\r\n                <div>\r\n                  <TextField label=\"First Name\" name=\"firstName\" errorMessage={this.state.name.firstNameErr} value={this.state.name.firstName} onChange={(event: any) => this._nameChangeHandle(event)} required />\r\n                  <TextField label=\"Last Name\" name=\"lastName\" errorMessage={this.state.name.lastNameErr} value={this.state.name.lastName} onChange={(event: any) => this._nameChangeHandle(event)} required />\r\n                  <button className=\"btn-edit btn-action\" onClick={() => this._submit()} >Save</button>\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Dialog\r\n          hidden={!this.state.DialogProps.show}\r\n          onDismiss={this._closeDialog}\r\n          dialogContentProps={{\r\n            type: DialogType.normal,\r\n          }}\r\n          modalProps={{\r\n            styles: { main: { maxWidth: 450, textAlign: \"center\" } },\r\n            isBlocking: true\r\n          }}\r\n        >\r\n          <p>{this.state.DialogProps.message}</p>\r\n          <DefaultButton className=\"sp-btn-login\" onClick={this._closeDialog} text=\"Ok\" />\r\n        </Dialog>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Name;","import * as React from \"react\";\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport NewsService from '../Service';\r\nimport Util from '../../../util';\r\nimport './styles.scss';\r\nimport { Dialog, DialogType } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { DefaultButton } from 'office-ui-fabric-react';\r\nimport { IDialogPropss } from \"../../../models/models\";\r\n\r\n\r\ninterface typ {\r\n  isShow: boolean;\r\n  value: string;\r\n  errorMessage: string;\r\n}\r\n\r\ninterface IState {\r\n  email: typ;\r\n  userId: string;\r\n  DialogProps: IDialogPropss;\r\n}\r\n\r\ninterface IProps {\r\n  email: string;\r\n  id: string;\r\n}\r\n\r\nclass Email extends React.Component<IProps, IState> {\r\n  private service: NewsService;\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      email: {\r\n        isShow: false,\r\n        value: this.props.email,\r\n        errorMessage: \"\"\r\n      },\r\n      userId: this.props.id,\r\n      DialogProps: { show: false, message: '' }\r\n    }\r\n    this.service = new NewsService();\r\n    this._submit = this._submit.bind(this);\r\n    this._emailChangeHandle = this._emailChangeHandle.bind(this);\r\n    this._showEditForm = this._showEditForm.bind(this);\r\n    this._closeDialog = this._closeDialog.bind(this);\r\n  }\r\n\r\n  private _submit() {\r\n    if (this.isEmailValid(this.state.email)) {\r\n      this.service.updateProfile({\r\n        field: 'email',\r\n        data: { email: this.state.email.value, id: this.state.userId }\r\n      }).then((res: any) => {\r\n        if (res.status) {\r\n          this.setState((prevState: IState) => {\r\n            return {\r\n              ...prevState,\r\n              email: { ...prevState.email, isShow: false }\r\n            }\r\n          });\r\n        } else {\r\n          this.setState({\r\n            DialogProps: { show: true, message: res.message },\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private _closeDialog() {\r\n    this.setState({\r\n      DialogProps: { show: false, message: '' }\r\n    });\r\n  }\r\n\r\n  public _emailChangeHandle = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    let erorMessage: string;\r\n    if (event.target.value === \"\") {\r\n      erorMessage = \"Email is required.\";\r\n    } else if (!Util.validateEmail(event.target.value)) {\r\n      erorMessage = \"Invalid email\";\r\n    }\r\n    else {\r\n      erorMessage = \"\";\r\n    }\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        email: { ...prevState.email, value: event.target.value, errorMessage: erorMessage }\r\n      }\r\n    });\r\n  }\r\n\r\n  private isEmailValid(form: typ) {\r\n\r\n    let isValid = true;\r\n    let erorMessage: string;\r\n    if (form.value === \"\") {\r\n      erorMessage = \"Email is required.\";\r\n      isValid = false;\r\n    } else if (!Util.validateEmail(form.value)) {\r\n      erorMessage = \"Invalid email\";\r\n      isValid = false;\r\n    }\r\n    else {\r\n      erorMessage = \"\";\r\n    }\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        email: { ...prevState.email, value: form.value, errorMessage: erorMessage }\r\n      }\r\n    });\r\n    return isValid;\r\n\r\n  }\r\n\r\n  private _showEditForm() {\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        email: { ...prevState.email, isShow: true }\r\n      }\r\n    });\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div className=\"ms-Grid\" dir=\"ltr\">\r\n        <div className=\"ms-Grid-row card-item\">\r\n          <div className=\"ms-Grid-col ms-sm3 ms-md3 ms-lg3\" >\r\n            <p className=\"sp-no-pm sp-m3 title\">Email</p>\r\n          </div>\r\n          <div className=\"ms-Grid-col ms-sm9 ms-md9 ms-lg9\" >\r\n            <div className=\"ms-Grid\" dir=\"ltr\">\r\n              {!this.state.email.isShow ?\r\n                <div className=\"ms-Grid-row\">\r\n                  <div className=\"ms-Grid-col ms-sm9 ms-md9 ms-lg9\" >\r\n                    <p className=\"sp-no-pm sp-m3\">{this.state.email.value}</p>\r\n                  </div>\r\n                  <div className=\"ms-Grid-col ms-sm3 ms-md3 ms-lg3\" >\r\n                    {/* <button className=\"btn-edit btn-action\" onClick={() => this._showEditForm()}>Edit</button> */}\r\n                  </div>\r\n                </div>\r\n                :\r\n                <div>\r\n                  <TextField label=\"Email\" name=\"email\" errorMessage={this.state.email.errorMessage} value={this.state.email.value} onChange={(event: any) => this._emailChangeHandle(event)} required />\r\n                  <button className=\"btn-edit btn-action\" onClick={() => this._submit()} >Save</button>\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Dialog\r\n          hidden={!this.state.DialogProps.show}\r\n          onDismiss={this._closeDialog}\r\n          dialogContentProps={{\r\n            type: DialogType.normal,\r\n          }}\r\n          modalProps={{\r\n            styles: { main: { maxWidth: 450, textAlign: \"center\" } },\r\n            isBlocking: true\r\n          }}\r\n        >\r\n          <p>{this.state.DialogProps.message}</p>\r\n          <DefaultButton className=\"sp-btn-login\" onClick={this._closeDialog} text=\"Ok\" />\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Email;","import * as React from \"react\";\r\nimport NewsService from '../Service';\r\nimport { ChoiceGroup, IChoiceGroupOption } from 'office-ui-fabric-react/lib/ChoiceGroup';\r\nimport './styles.scss';\r\nimport { Dialog, DialogType } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { DefaultButton } from 'office-ui-fabric-react';\r\nimport { IDialogPropss } from \"../../../models/models\";\r\n\r\n\r\nconst genderOptions: IChoiceGroupOption[] = [\r\n  { key: 'male', text: 'Male' },\r\n  { key: 'female', text: 'Female' }\r\n];\r\n\r\ninterface typ {\r\n  isShow: boolean;\r\n  value: string;\r\n  errorMessage: string;\r\n}\r\n\r\ninterface IState {\r\n  gender: typ;\r\n  DialogProps: IDialogPropss;\r\n  userId: string;\r\n}\r\n\r\ninterface IProps {\r\n  gender: string;\r\n  userId: string;\r\n}\r\n\r\nclass Gender extends React.Component<IProps, IState> {\r\n  private service: NewsService;\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      gender: {\r\n        isShow: false,\r\n        value: this.props.gender,\r\n        errorMessage: \"\"\r\n      },\r\n      userId: this.props.userId,\r\n      DialogProps: { show: false, message: '' }\r\n    }\r\n    this.service = new NewsService();\r\n    this._submit = this._submit.bind(this);\r\n    this._showEditForm = this._showEditForm.bind(this);\r\n    this._closeDialog = this._closeDialog.bind(this);\r\n    this._hideEditForm = this._hideEditForm.bind(this);\r\n    this._onGenderChange = this._onGenderChange.bind(this);\r\n  }\r\n\r\n  private _closeDialog() {\r\n    this.setState({\r\n      DialogProps: { show: false, message: '' }\r\n    });\r\n  }\r\n\r\n  private _submit() {\r\n    this.service.updateProfile({\r\n      field: 'gender',\r\n      data: { gender: this.state.gender.value, id: this.state.userId }\r\n    }).then((res: any) => {\r\n      if (res.status) {\r\n        this.setState((prevState: IState) => {\r\n          return {\r\n            ...prevState,\r\n            gender: { ...prevState.gender, isShow: false }\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({\r\n          DialogProps: { show: true, message: res.message },\r\n          // isLoading: false\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private _showEditForm() {\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        gender: { ...prevState.gender, isShow: true }\r\n      }\r\n    });\r\n  }\r\n\r\n  private _hideEditForm() {\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        gender: { ...prevState.gender, isShow: false, errorMessage: \"\" }\r\n      }\r\n    });\r\n  }\r\n\r\n  _onGenderChange(ev: React.FormEvent<HTMLInputElement>, option: IChoiceGroupOption, field: string) {\r\n    this.setState({\r\n      gender: { ...this.state.gender, value: option.key },\r\n    });\r\n  }\r\n\r\n\r\n\r\n  render(): JSX.Element {\r\n    return (\r\n      <div className=\"ms-Grid\" dir=\"ltr\">\r\n        <div className=\"ms-Grid-row card-item\">\r\n          <div className=\"ms-Grid-col ms-sm3 ms-md3 ms-lg3\" >\r\n            <p className=\"sp-no-pm sp-m3 title\">Gender</p>\r\n          </div>\r\n          <div className=\"ms-Grid-col ms-sm9 ms-md9 ms-lg9\" >\r\n            <div className=\"ms-Grid\" dir=\"ltr\">\r\n              {!this.state.gender.isShow ?\r\n                <div className=\"ms-Grid-row\">\r\n                  <div className=\"ms-Grid-col ms-sm9 ms-md9 ms-lg9\" >\r\n                    <p className=\"sp-no-pm sp-m3\">{this.state.gender.value}</p>\r\n                  </div>\r\n                  <div className=\"ms-Grid-col ms-sm3 ms-md3 ms-lg3\" >\r\n                    <button className=\"btn-edit btn-action\" onClick={() => this._showEditForm()}>Edit</button>\r\n                  </div>\r\n                </div>\r\n                :\r\n                <div>\r\n                  <ChoiceGroup defaultSelectedKey={this.state.gender.value} options={genderOptions} onChange={(ev: any, o: any) => this._onGenderChange(ev, o, \"gender\")} label=\"Gender\" required={true} />\r\n                  <span className=\"sp-danger\">{this.state.gender.errorMessage}</span>\r\n                  <style>\r\n                    {`.ms-ChoiceField {\r\n                          display: inline-block;\r\n                          margin-left:10px;\r\n                      } \r\n                      `}\r\n                  </style>\r\n                  <button className=\"btn-edit btn-action\" onClick={() => this._submit()} >Save</button>\r\n                  <button className=\"btn-edit btn-action sp-mr10\" onClick={() => this._hideEditForm()} >Cancel</button>\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Dialog\r\n          hidden={!this.state.DialogProps.show}\r\n          onDismiss={this._closeDialog}\r\n          dialogContentProps={{\r\n            type: DialogType.normal,\r\n          }}\r\n          modalProps={{\r\n            styles: { main: { maxWidth: 450, textAlign: \"center\" } },\r\n            isBlocking: true\r\n          }}\r\n        >\r\n          <p>{this.state.DialogProps.message}</p>\r\n          <DefaultButton className=\"sp-btn-login\" onClick={this._closeDialog} text=\"Ok\" />\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Gender;","import * as React from \"react\";\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { ErrorMessages, IDialogPropss } from '../../../models/models';\r\nimport NewsService from '../Service';\r\nimport './styles.scss';\r\nimport { Dialog, DialogType } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { DefaultButton } from 'office-ui-fabric-react';\r\n\r\n\r\ninterface passwordd {\r\n  isShow: boolean;\r\n  oldPassword: string;\r\n  newPassword: string;\r\n  confirmPassword: string;\r\n  oldPasswordErr: string;\r\n  newPasswordErr: string;\r\n  confirmPasswordErr: string;\r\n}\r\n\r\ninterface IState {\r\n  password: passwordd\r\n  userId: string;\r\n  phoneNumber: string;\r\n  errorMessage: string;\r\n  DialogProps: IDialogPropss;\r\n}\r\n\r\ninterface IProps {\r\n  userId: string;\r\n  phoneNumber: string;\r\n}\r\n\r\nclass Password extends React.Component<IProps, IState> {\r\n  private service: NewsService;\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      password: {\r\n        isShow: false,\r\n        oldPassword: \"\",\r\n        newPassword: \"\",\r\n        confirmPassword: \"\",\r\n        oldPasswordErr: \"\",\r\n        newPasswordErr: \"\",\r\n        confirmPasswordErr: \"\"\r\n      },\r\n      userId: this.props.userId,\r\n      phoneNumber: this.props.phoneNumber,\r\n      errorMessage: '',\r\n      DialogProps: { show: false, message: '' }\r\n    }\r\n\r\n    this.service = new NewsService();\r\n    this._confirmPasswordChangeHandle = this._confirmPasswordChangeHandle.bind(this);\r\n    this._passwordChangeHandle = this._passwordChangeHandle.bind(this);\r\n    this._showEditForm = this._showEditForm.bind(this);\r\n    this._closeDialog = this._closeDialog.bind(this);\r\n    this._submit = this._submit.bind(this);\r\n    this._hideEditForm = this._hideEditForm.bind(this);\r\n  }\r\n\r\n\r\n  private _closeDialog() {\r\n    this.setState({\r\n      DialogProps: { show: false, message: '' }\r\n    });\r\n  }\r\n\r\n  public _passwordChangeHandle = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    let erorMessage: string;\r\n    if (event.target.value === \"\") {\r\n      erorMessage = event.target.name === \"oldPassword\" ? \"Old password is Required.\" : \"New password is Required.\";\r\n    } else {\r\n      erorMessage = \"\";\r\n    }\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        password: { ...prevState.password, [event.target.name]: event.target.value, [event.target.name + 'Err']: erorMessage }\r\n      }\r\n    });\r\n  }\r\n\r\n  public _confirmPasswordChangeHandle(event: React.ChangeEvent<HTMLInputElement>) {\r\n    let erorMessage: string;\r\n    if (event.target.value === \"\") {\r\n      erorMessage = \"Confirm Password Required.\";\r\n    } else if (this.state.password.newPassword !== '' && (this.state.password.newPassword !== event.target.value)) {\r\n      erorMessage = \"Password doesn't match.\";\r\n    }\r\n    else {\r\n      erorMessage = \"\";\r\n    }\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        password: { ...prevState.password, [event.target.name]: event.target.value, [event.target.name + 'Err']: erorMessage }\r\n      }\r\n    });\r\n  }\r\n\r\n  private _showEditForm() {\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        password: { ...prevState.password, isShow: true }\r\n      }\r\n    });\r\n  }\r\n\r\n  private _hideEditForm() {\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        password: {\r\n          ...prevState.password,\r\n          isShow: false,\r\n          oldPassword: \"\",\r\n          newPassword: \"\",\r\n          confirmPassword: \"\",\r\n          oldPasswordErr: \"\",\r\n          newPasswordErr: \"\",\r\n          confirmPasswordErr: \"\"\r\n        },\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  private passwordValidation(form: passwordd) {\r\n    let e1: string, e2: string, e3: string, isValid = true;\r\n\r\n    if (form.oldPassword === \"\") {\r\n      e1 = ErrorMessages.oldPasswordIsRequired;\r\n      isValid = false;\r\n    } else {\r\n      e1 = \"\";\r\n    }\r\n    if (form.newPassword === \"\") {\r\n      e2 = ErrorMessages.newPasswordIsRequired;\r\n      isValid = false;\r\n    } else {\r\n      e2 = \"\";\r\n    }\r\n    if (form.confirmPassword === \"\") {\r\n      e3 = ErrorMessages.confirmPasswordIsRequired;\r\n      isValid = false;\r\n    } else {\r\n      e3 = \"\";\r\n    }\r\n    if (form.oldPassword === form.newPassword) {\r\n      e2 = ErrorMessages.oldAndNewpasswordShouldNotSame;\r\n      isValid = false;\r\n    } else {\r\n      e2 = \"\";\r\n    }\r\n\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        password: { ...prevState.password, oldPasswordErr: e1, newPasswordErr: e2, confirmPasswordErr: e3 }\r\n      }\r\n    });\r\n    return isValid;\r\n\r\n  }\r\n\r\n  private _submit() {\r\n    if (this.passwordValidation(this.state.password)) {\r\n      this.service.changePassword({\r\n        oldPassword: this.state.password.oldPassword, newPassword: this.state.password.newPassword, phoneNumber: this.state.phoneNumber, id: this.state.userId\r\n      }).then((res: any) => {\r\n        if (res.status) {\r\n          this.setState((prevState: IState) => {\r\n            return {\r\n              ...prevState,\r\n              password: {\r\n                ...prevState.password,\r\n                isShow: false,\r\n                oldPassword: \"\",\r\n                newPassword: \"\",\r\n                confirmPassword: \"\",\r\n                oldPasswordErr: \"\",\r\n                newPasswordErr: \"\",\r\n                confirmPasswordErr: \"\"\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          this.setState({\r\n            DialogProps: { show: true, message: res.message },\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div className=\"ms-Grid\" dir=\"ltr\">\r\n        <div className=\"ms-Grid-row card-item\">\r\n          <div className=\"ms-Grid-col ms-sm3 ms-md3 ms-lg3\" >\r\n            <p className=\"sp-no-pm sp-m3 title\">Password</p>\r\n          </div>\r\n          <div className=\"ms-Grid-col ms-sm9 ms-md9 ms-lg9\" >\r\n            <div className=\"ms-Grid\" dir=\"ltr\">\r\n              {!this.state.password.isShow ?\r\n                <div className=\"ms-Grid-row\">\r\n                  <div className=\"ms-Grid-col ms-sm9 ms-md9 ms-lg9\" >\r\n                    <p className=\"sp-no-pm sp-m3\">**********</p>\r\n                  </div>\r\n                  <div className=\"ms-Grid-col ms-sm3 ms-md3 ms-lg3\" >\r\n                    <button className=\"btn-edit btn-action\" onClick={() => this._showEditForm()}>Edit</button>\r\n                  </div>\r\n                </div>\r\n                :\r\n                <div >\r\n                  <TextField type=\"password\" label=\"Old password\" placeholder=\"old password\" name=\"oldPassword\" errorMessage={this.state.password.oldPasswordErr} value={this.state.password.oldPassword} onChange={(event: any) => this._passwordChangeHandle(event)} required minLength={8} />\r\n                  <TextField type=\"password\" label=\"New password\" placeholder=\"new password\" name=\"newPassword\" errorMessage={this.state.password.newPasswordErr} value={this.state.password.newPassword} onChange={(event: any) => this._passwordChangeHandle(event)} required minLength={8} />\r\n                  <TextField type=\"password\" label=\"Confirm Password.\" placeholder=\"Confirm password\" name=\"confirmPassword\" errorMessage={this.state.password.confirmPasswordErr} value={this.state.password.confirmPassword} onChange={(event: any) => this._confirmPasswordChangeHandle(event)} required minLength={8} />\r\n                  <p className=\"text-danger\">{this.state.errorMessage}</p>\r\n                  <button className=\"btn-edit btn-action\" onClick={() => this._submit()} >Save</button>\r\n                  <button className=\"btn-edit btn-action sp-mr10\" onClick={() => this._hideEditForm()} >Cancel</button>\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Dialog\r\n          hidden={!this.state.DialogProps.show}\r\n          onDismiss={this._closeDialog}\r\n          dialogContentProps={{\r\n            type: DialogType.normal,\r\n          }}\r\n          modalProps={{\r\n            styles: { main: { maxWidth: 450, textAlign: \"center\" } },\r\n            isBlocking: true\r\n          }}\r\n        >\r\n          <p>{this.state.DialogProps.message}</p>\r\n          <DefaultButton className=\"sp-btn-login\" onClick={this._closeDialog} text=\"Ok\" />\r\n        </Dialog>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Password;","import NewsService from '../Service';\r\n\r\nexport default class MyProfileService {\r\n    private service: NewsService;\r\n\r\n    constructor() {\r\n        this.service = new NewsService();\r\n    }\r\n\r\n    public isAvailCheck(field: string, text: string, id: string): Promise<boolean> {\r\n        return this.service.isAvailable({ field: field, text: text, id: id }).then((data: any) => {\r\n            if (data.status) {\r\n                if (data.data && data.data > 0) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            } else {\r\n                return false;\r\n            }\r\n        }).catch(() => {\r\n            return false;\r\n        });\r\n    }\r\n}","import * as React from \"react\";\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport './styles.scss';\r\nimport { ErrorMessages } from '../../../models/models';\r\nimport MyProfileService from './service';\r\n\r\n\r\ninterface typ {\r\n  isShow: boolean;\r\n  value: string;\r\n  errorMessage: string;\r\n}\r\n\r\ninterface IState {\r\n  username: typ;\r\n  userId: string;\r\n\r\n}\r\n\r\ninterface IProps {\r\n  username: string;\r\n  userId: string;\r\n}\r\n\r\nclass Username extends React.Component<IProps, IState> {\r\n  private myProfileService: MyProfileService;\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      username: {\r\n        isShow: false,\r\n        value: this.props.username,\r\n        errorMessage: \"\"\r\n      },\r\n      userId: this.props.userId\r\n    }\r\n    this.myProfileService = new MyProfileService();\r\n  }\r\n\r\n\r\n  private submit() {\r\n\r\n  }\r\n\r\n  private isUsernameValid(form: typ) {\r\n    let e1: string, isValid = true;\r\n    if (form.value === \"\") {\r\n      e1 = ErrorMessages.userNameIsRequired;\r\n      isValid = false;\r\n    } else {\r\n      e1 = \"\";\r\n    }\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        username: { ...prevState.username, errorMessage: e1 }\r\n      }\r\n    });\r\n    return isValid;\r\n\r\n  }\r\n\r\n  public usernameChangeHandle = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    let erorMessage: string;\r\n    if (event.target.value === \"\") {\r\n      erorMessage = \"Phone number is Required.\";\r\n    }\r\n    else if (event.target.value !== \"\") {\r\n      this.myProfileService.isAvailCheck('username', event.target.value, this.state.userId).then((data) => {\r\n        if (!data) {\r\n          erorMessage = \"Already created.\";\r\n        } else {\r\n          erorMessage = \"\";\r\n        }\r\n        this.setState((prevState: IState) => {\r\n          return {\r\n            ...prevState,\r\n            username: { ...prevState.username, value: event.target.value, errorMessage: erorMessage }\r\n          }\r\n        });\r\n      });\r\n    }\r\n    else {\r\n      erorMessage = \"\";\r\n    }\r\n\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        [event.target.name]: { ...prevState.username, value: event.target.value, errorMessage: erorMessage }\r\n      }\r\n    });\r\n  }\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div className=\"ms-Grid\" dir=\"ltr\">\r\n        <div className=\"ms-Grid-row card-item\">\r\n          <div className=\"ms-Grid-col ms-sm3 ms-md3 ms-lg3\" >\r\n            <p className=\"sp-no-pm sp-m3 title\">Username/Phone</p>\r\n          </div>\r\n          <div className=\"ms-Grid-col ms-sm9 ms-md9 ms-lg9\" >\r\n            <div className=\"ms-Grid\" dir=\"ltr\">\r\n              {!this.state.username.isShow ?\r\n                <div className=\"ms-Grid-row\">\r\n                  <div className=\"ms-Grid-col ms-sm9 ms-md9 ms-lg9\" >\r\n                    <p className=\"sp-no-pm sp-m3\"> +91 {this.state.username.value}</p>\r\n                  </div>\r\n                </div>\r\n                : <div >\r\n                  <TextField label=\"Username/Phone\" placeholder=\"Phone Number\" name=\"username\" errorMessage={this.state.username.errorMessage} value={this.state.username.value} onChange={(event: any) => this.usernameChangeHandle(event)} required minLength={10} prefix=\"+91\" maxLength={10} />\r\n                  <button className=\"btn-edit btn-action\" onClick={() => this.submit()} >Save</button>\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Username;","import { store } from '../../app';\r\nimport Actions from '../../Redux/Actions/actions';\r\nimport { ILoginM } from '../models';\r\n\r\nclass ReduxService {\r\n    public static UpdateLoginM(updateM: ILoginM) {\r\n        store.dispatch(Actions.UpdateLoginM(updateM));\r\n    }\r\n    public static updateUserImage(imgUrl: string) {\r\n        store.dispatch(Actions.updateUserImage(imgUrl));\r\n    }\r\n}\r\n\r\nexport default ReduxService;","import * as React from \"react\";\r\nimport NewsService from '../Service';\r\nimport { URLs } from '../../../constants/constants';\r\nimport './styles.scss';\r\nimport ReduxService from \"../../../Redux/service\";\r\n\r\ninterface typ {\r\n    isShow: boolean;\r\n    value: string;\r\n    errorMessage: string;\r\n}\r\n\r\n\r\ninterface IState {\r\n    image: typ;\r\n    userId: string;\r\n}\r\n\r\ninterface IProps {\r\n    imagePath: string;\r\n    userId: string\r\n    onImageChange(newImgPath: string): void;\r\n}\r\n\r\nclass Image extends React.Component<IProps, IState> {\r\n    private service: NewsService;\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            image: {\r\n                isShow: false,\r\n                value: this.props.imagePath,\r\n                errorMessage: \"\"\r\n            },\r\n            userId: this.props.userId\r\n        }\r\n        this.service = new NewsService();\r\n        this._onSucess = this._onSucess.bind(this);\r\n        this._onChangeHandler = this._onChangeHandler.bind(this);\r\n        this._onProgress = this._onProgress.bind(this);\r\n    }\r\n\r\n    public _onSucess(some: any) {\r\n        if (some && some.response && some.response.success) {\r\n            this.service.updateProfile({\r\n                field: 'imagePath',\r\n                data: { imagePath: some.response.filePath, id: this.state.userId }\r\n            }).then(() => {\r\n                this.setState({\r\n                    image: { ...this.state.image, value: some.response.filePath }\r\n                });\r\n\r\n                ReduxService.updateUserImage(some.response.filePath);\r\n                this.props.onImageChange(some.response.filePath);\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    public _onProgress(some: any) {\r\n\r\n    }\r\n\r\n    _onChangeHandler(event: any, _onSucess: any, _onProgress: any) {\r\n        if (event.target.files[0]) {\r\n            if (event.target.files[0].type === 'image/png' || event.target.files[0].type === 'image/x-png' || event.target.files[0].type === 'image/gif' || event.target.files[0].type === 'image/jpeg' || event.target.files[0].type === 'image/jpg') {\r\n                let datae: any = event.target.files[0];\r\n                const data = new FormData();\r\n                data.append('file', event.target.files[0]);\r\n                var xhr = new XMLHttpRequest();\r\n                xhr.open(\"POST\", `/use${URLs.uploadProfilePic}`);\r\n                xhr.upload.addEventListener(\"progress\", function (this, evt) {\r\n                    if (evt.lengthComputable) {\r\n                        let percentComplete: any = evt.loaded / evt.total;\r\n                        let df: any = percentComplete.toFixed(2) * 100;\r\n                        datae.progress = df.toFixed(0);\r\n                        let db = datae;\r\n                        db.progress = df.toFixed(0);\r\n                        _onProgress(db);\r\n                    }\r\n                }, false);\r\n                xhr.onloadstart = function (e) {\r\n\r\n                }\r\n                xhr.onloadend = function (e) {\r\n\r\n                }\r\n                xhr.send(data);\r\n                xhr.onreadystatechange =\r\n                    function () {\r\n                        if (this.readyState === 4 && this.status === 200) {\r\n                            var res = JSON.parse(this.response);\r\n                            datae.response = res;\r\n                            var de = datae\r\n                            _onSucess(de);\r\n                        }\r\n                    };\r\n            } else {\r\n                this.setState({\r\n                    image: { ...this.state.image, errorMessage: 'Please select image only.' }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    render(): JSX.Element {\r\n        return (\r\n            <>\r\n                <img src={`${this.state.image.value}`} className=\"avatar-3\" alt=\"dd\" />\r\n                <input type=\"file\" name=\"photo\" accept=\"image/x-png,image/gif,image/jpeg\" id=\"photo\" className=\"display-none\" onChange={(event: any) => this._onChangeHandler(event, this._onSucess, this._onProgress)} />\r\n                <label className=\"cursor upload-photo\" htmlFor=\"photo\">change</label>\r\n                <span className=\"sp-danger\">{this.state.image.errorMessage}</span>\r\n            </>);\r\n    }\r\n\r\n}\r\n\r\nexport default Image;","import * as React from \"react\";\r\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\r\nimport './styles.scss';\r\n\r\nclass Loading extends React.Component {\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className=\"loading\">\r\n                <div className=\"loading-c\">\r\n                    <Spinner size={SpinnerSize.large} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;","import * as React from \"react\";\r\nimport NewsService from '../Service';\r\nimport AuthService from '../../../services/authService';\r\nimport Address from './address';\r\nimport Name from './name';\r\nimport Email from './email';\r\nimport Gender from './gender';\r\nimport Password from './password';\r\nimport Username from './username';\r\nimport Image from './image';\r\nimport './styles.scss';\r\nimport Navbar from \"../Navbar\";\r\nimport Loading from \"../../common/Loading\";\r\nimport { connect } from \"react-redux\";\r\nimport { AppState } from \"../../../Redux/app.store\";\r\nimport { IUserState } from \"../../../Redux/models\";\r\nimport { UserType } from \"../../../constants/constants\";\r\n\r\ninterface IState {\r\n  isLoading: boolean;\r\n  User: any;\r\n  User2: any;\r\n}\r\n\r\ninterface IProps {\r\n  User: IUserState;\r\n}\r\n\r\nclass MyProfile extends React.PureComponent<IProps, IState> {\r\n  private service: NewsService;\r\n  private authService: AuthService;\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      User: null,\r\n      User2: null\r\n\r\n    }\r\n    this.service = new NewsService();\r\n    this.authService = new AuthService();\r\n\r\n    this._onImageChange = this._onImageChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    var user = this.authService.isLoggedIn();\r\n    if (user) {\r\n      this.setState({ isLoading: true });\r\n      this.service.getProfileByIdF({ id: user._id }).then((data: any) => {\r\n        if (data && data.data && data.data[0]) {\r\n          let userInfo = data.data[0];\r\n          this.setState((prevState: IState) => {\r\n            return {\r\n              ...prevState,\r\n              User: user,\r\n              User2: userInfo,\r\n              isLoading: false\r\n            }\r\n          });\r\n        }else{\r\n          this.setState({ isLoading: false });\r\n\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private _onImageChange(newImagePath: string) {\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        ...prevState,\r\n        User2: { ...prevState.User2, imagePath: newImagePath }\r\n      }\r\n    });\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <div className=\"\">\r\n          <div className=\"ms-Grid sp-bg-white my-profile\" dir=\"ltr\" >\r\n            {this.state.isLoading && <Loading />}\r\n\r\n            {this.state.User2 &&\r\n              <div className=\"ms-Grid-row sp-mt10\">\r\n                <div className=\"ms-Grid-col ms-sm12 ms-md3 ms-lg3 img-container\" >\r\n                  <Image imagePath={this.state.User2.imagePath} userId={this.state.User2._id} onImageChange={this._onImageChange} ></Image>\r\n                </div>\r\n                <div className=\"ms-Grid-col ms-sm12 ms-md9 ms-lg9\" >\r\n                  <div>\r\n                    <h5 className=\"h5\">General</h5>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"header\">\r\n                      <p className=\"sp-no-pm\">Security and Login</p>\r\n                    </div>\r\n                    <Username userId={this.state.User2._id} username={this.state.User2.phoneNumber} ></Username>\r\n                    <hr className=\"sp-no-pm sp-m3\" />\r\n                    <Password userId={this.state.User2._id} phoneNumber={this.state.User2.phoneNumber} ></Password>\r\n                  </div>\r\n                  <div className=\"card card-2\">\r\n                    <div className=\"header\">\r\n                      <p className=\"sp-no-pm\">Personal Info</p>\r\n                    </div>\r\n                    <Name firstName={this.state.User2.firstName} lastName={this.state.User2.lastName} userId={this.state.User2._id} ></Name>\r\n                    <hr className=\"sp-no-pm sp-m3\" />\r\n                    <Email email={this.state.User2.email} id={this.state.User2._id} ></Email>\r\n                    <hr className=\"sp-no-pm sp-m3\" />\r\n                    <Gender gender={this.state.User2.gender} userId={this.state.User2._id}></Gender>\r\n                    <hr className=\"sp-no-pm sp-m3\" />\r\n                    <Address city={this.state.User2.city} state={this.state.User2.state} userId={this.state.User2._id} ></Address>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): AppState => ({\r\n  User: state.User,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n)(MyProfile);","import * as React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nclass NotFound extends React.Component {\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div className=\"sp-mt40\">\r\n        <h4>The Requested page not found.</h4>\r\n        <NavLink exact to=\"/\">\r\n          Click\r\n        </NavLink> here to go home page.\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default NotFound;","import * as React from \"react\";\r\nimport './styles.scss';\r\nimport { ShimmerElementsGroup, ShimmerElementType, IShimmerStyleProps, IShimmerStyles, Shimmer } from \"office-ui-fabric-react\";\r\nconst wrapperStyle = { display: 'flex' };\r\n\r\ninterface IProps {\r\n    url: string;\r\n}\r\n\r\nfunction ShimmerLine(): JSX.Element {\r\n    return (\r\n        <div className=\"shimmer-w\">\r\n            <ShimmerElementsGroup\r\n                shimmerElements={[\r\n                    { type: ShimmerElementType.line, width: '100%', height: 32 },\r\n                ]}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction ShimmerCircleAndLine(): JSX.Element {\r\n    return (\r\n        <div style={wrapperStyle}>\r\n            <ShimmerElementsGroup\r\n                shimmerElements={[\r\n                    { type: ShimmerElementType.circle, width: 30, height: 60 },\r\n                    { type: ShimmerElementType.gap, width: 10, height: 80 },\r\n                ]}\r\n            />\r\n            <ShimmerElementsGroup\r\n                flexWrap\r\n                shimmerElements={[\r\n                    { type: ShimmerElementType.line, width: 300, height: 20 },\r\n                    { type: ShimmerElementType.line, width: 200, height: 20 },\r\n                    { type: ShimmerElementType.gap, width: 100, height: 40 },\r\n                ]}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction getShimmerStyles(props: IShimmerStyleProps): IShimmerStyles {\r\n    return {\r\n        shimmerGradient: [\r\n            {\r\n                backgroundImage:\r\n                    'linear-gradient(to right, rgba(255, 255, 255, 0) 0%, #fff 50%, rgba(255, 255, 255, 0) 100%)',\r\n            },\r\n        ],\r\n    };\r\n};\r\n\r\nconst shimmerWithElementFirstRow = [\r\n    { type: ShimmerElementType.circle, height: 50 },\r\n    { type: ShimmerElementType.gap, width: '2%', height: 50 },\r\n    { type: ShimmerElementType.line, height: 50 },\r\n];\r\n\r\nfunction Shimmer1(): JSX.Element {\r\n    return (\r\n        <Shimmer customElementsGroup={ShimmerLine()} width=\"100%\" styles={getShimmerStyles} />\r\n    );\r\n};\r\n\r\nexport function Shimmer2(): JSX.Element {\r\n    return (\r\n        <Shimmer customElementsGroup={ShimmerCircleAndLine()} width=\"100%\" styles={getShimmerStyles} />\r\n    );\r\n};\r\n\r\nexport function Shimmer3(): JSX.Element {\r\n    return (<div className=\"shimmer-wrapper\">\r\n        <div className=\"shimmer\">\r\n            <Shimmer shimmerElements={shimmerWithElementFirstRow} styles={getShimmerStyles} />\r\n        </div>\r\n        <div className=\"shimmer\">\r\n            <Shimmer customElementsGroup={ShimmerLine()} width=\"100%\" styles={getShimmerStyles} />\r\n        </div>\r\n        <div className=\"shimmer\">\r\n            <Shimmer customElementsGroup={ShimmerLine()} width=\"100%\" styles={getShimmerStyles} />\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Shimmer1;","import * as React from \"react\";\r\nimport './styles.scss';\r\n\r\ninterface IState {\r\n  uploadedFileInfo: any;\r\n  uploadedFilesInfo: any;\r\n  accept?: string;\r\n\r\n}\r\n\r\ninterface IProps {\r\n  afterFilesUploaded(res: any): void;\r\n  onProgress(filesInfo: any): void;\r\n  Reset: boolean;\r\n  id: string;\r\n  multiple: boolean;\r\n  accept?: string;\r\n\r\n}\r\n\r\nclass FileUpload extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      uploadedFileInfo: [],\r\n      uploadedFilesInfo: [],\r\n      accept: this.props.accept\r\n\r\n    }\r\n    this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    this.OnSucess = this.OnSucess.bind(this);\r\n    this.onProgress = this.onProgress.bind(this);\r\n  }\r\n\r\n\r\n  public OnSucess(some: any) {\r\n  }\r\n\r\n\r\n  public onProgress(some: any) {\r\n    this.props.onProgress(some);\r\n  }\r\n\r\n  onChangeHandler(event: any, onSucess: any, onProgress: any) {\r\n    this.props.afterFilesUploaded(event.target.files);\r\n    if (event.target.files !== null && event.target.files !== undefined && event.target.files.length > 0) {\r\n      for (let i = 0; i < event.target.files.length; i++) {\r\n        let needToUpload = true;\r\n        if (this.state.uploadedFileInfo.length > 0) {\r\n          for (let j = 0; j < this.state.uploadedFileInfo.length; j++) {\r\n            if (event.target.files[i].name === this.state.uploadedFileInfo[j].data.originalName) {\r\n              needToUpload = false;\r\n            }\r\n          }\r\n        }\r\n        if (needToUpload) {\r\n          let datae: any = event.target.files[i];\r\n          const data = new FormData();\r\n          data.append('file', event.target.files[i]);\r\n          var xhr = new XMLHttpRequest();\r\n          xhr.open(\"POST\", \"/use/api/uploadfiles\");\r\n          xhr.upload.addEventListener(\"progress\", function (this, evt) {\r\n            if (evt.lengthComputable) {\r\n              let percentComplete: any = evt.loaded / evt.total;\r\n              let df: any = percentComplete.toFixed(2) * 100;\r\n              datae.progress = df.toFixed(0);\r\n              let db = datae;\r\n              db.progress = df.toFixed(0);\r\n              onProgress(db);\r\n            }\r\n          }, false);\r\n          xhr.onloadstart = function (e) {\r\n          }\r\n          xhr.onloadend = function (e) {\r\n          }\r\n          xhr.send(data);\r\n          xhr.onreadystatechange =\r\n            function () {\r\n              if (this.readyState === 4 && this.status === 200) {\r\n                if (this.response) {\r\n                  var res = JSON.parse(this.response);\r\n                  datae.response = res;\r\n                }\r\n              }\r\n              if (this.readyState === 4 && this.status !== 200) {\r\n                alert('some error occured.');\r\n              }\r\n            };\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(newProps: IProps) {\r\n    if (newProps.Reset === true) {\r\n      this.setState({\r\n        uploadedFileInfo: [],\r\n        uploadedFilesInfo: []\r\n      });\r\n    }\r\n  }\r\n  private getAcceptString(accept?: string): string {\r\n    if (accept) {\r\n      if (accept == \"images\") {\r\n        return 'image/*'\r\n      } else {\r\n        return 'audio/*,video/*,image/*,application/pdf,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/pdf,application/vnd.ms-powerpoint';\r\n      }\r\n    } else {\r\n      return 'audio/*,video/*,image/*,application/pdf,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/pdf,application/vnd.ms-powerpoint';\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <>\r\n        <label htmlFor={this.props.id} className=\"sp-icon\" title=\"Add file\" >\r\n          <i className=\"ms-Icon ms-Icon--Attach\" aria-hidden=\"true\"></i>\r\n        </label>\r\n        <input type=\"file\" accept={this.getAcceptString(this.props.accept)} name=\"files\" id={this.props.id} multiple={this.props.multiple} className=\"sp-file\" onChange={(event: any) => this.onChangeHandler(event, this.OnSucess, this.onProgress)} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileUpload;\r\n\r\n\r\n","export default class Common {\r\n    public static _onProgress(filesInfo: any, tempFiles: any) {\r\n        let added = false;\r\n        if (tempFiles.length > 0) {\r\n            for (let j = 0; j < tempFiles.length; j++) {\r\n                if (tempFiles[j].name === filesInfo.name) {\r\n                    tempFiles = tempFiles.map(\r\n                        (file: any) => {\r\n                            if (file.name === filesInfo.name) {\r\n                                return file;\r\n                            } else {\r\n                                return file\r\n                            }\r\n                        });\r\n                } else {\r\n                    if (!added) {\r\n                        if (tempFiles[j].name === filesInfo.name) {\r\n                            tempFiles = tempFiles.map(\r\n                                (file: any) => {\r\n                                    if (file.name === filesInfo.name) {\r\n                                        return file;\r\n                                    } else {\r\n                                        return file\r\n                                    }\r\n                                });\r\n                        } else {\r\n                            tempFiles = [...tempFiles, filesInfo];\r\n                        }\r\n                    }\r\n                    added = true;\r\n                }\r\n            }\r\n        } else {\r\n            tempFiles = [...tempFiles, filesInfo];\r\n        }\r\n        return this.getUnique(tempFiles);\r\n    }\r\n\r\n    private static getUnique(array: any) {\r\n        var uniqueArray = [];\r\n        if (array.length > 0) {\r\n            for (let value of array) {\r\n                if (uniqueArray.indexOf(value) === -1) {\r\n                    uniqueArray.push(value);\r\n                }\r\n            }\r\n        }\r\n        return uniqueArray;\r\n    }\r\n}","import * as React from \"react\";\r\nimport FileUpload from '../../../common/fileUpload';\r\nimport { IFileInfo,  BasicUserInfo, IDialogPropss, FileT } from '../../../../models/models';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\nimport Service from '../../Service';\r\nimport { DefaultButton, Callout, IDropdownOption, Dropdown } from 'office-ui-fabric-react';\r\nimport { Dialog, DialogType } from 'office-ui-fabric-react/lib/Dialog';\r\nimport AuthService from '../../../../services/authService';\r\nimport Loading from \"../../../common/Loading\";\r\nimport { IUserState } from \"../../../../Redux/models\";\r\nimport { AppState } from \"../../../../Redux/app.store\";\r\nimport { connect } from \"react-redux\";\r\nimport './styles.scss';\r\nimport Common from \"../../../common\";\r\nconst ShowMoreText = require('react-show-more-text');\r\n\r\nexport const CategoryOptions: IDropdownOption[] = [\r\n    { key: 'Diabetes', text: 'Diabetes' },\r\n    { key: 'Lung disease', text: 'Lung disease' },\r\n    { key: 'Hypertension', text: 'Hypertension' },\r\n    { key: 'Heart diesease', text: 'Heart diesease' },\r\n    { key: 'Kidney disorder', text: 'Kidney disorder' }\r\n];\r\n\r\ninterface IstoryForm {\r\n    Name: string;\r\n    Age: string;\r\n    Diceases: string[];\r\n    Symptoms: string;\r\n    Treatment: string;\r\n    MoreToSay: string;\r\n    User: any;\r\n    Files: IFileInfo[];\r\n}\r\n\r\ninterface IstoryFormError {\r\n    NameErr: string;\r\n    AgeErr: string;\r\n    DiceasesErr: string;\r\n    SymptomsErr: string;\r\n    TreatmentErr: string;\r\n    MoreToSayErr: string;\r\n    FilesErr: string;\r\n}\r\n\r\ninterface IState {\r\n    uploadedFilesInfo: any;\r\n    storyForm: IstoryForm;\r\n    storyFormErr: IstoryFormError;\r\n    Reset: boolean;\r\n    DialogProps: IDialogPropss;\r\n    isLoading: boolean;\r\n    isShowInfoPanel: boolean;\r\n    showStoryForm: boolean;\r\n}\r\n\r\ninterface IProps {\r\n    User: IUserState;\r\n}\r\n\r\nclass CreateStory extends React.Component<IProps, IState> {\r\n    private service: Service;\r\n    private _menuButtonElement = React.createRef<HTMLImageElement>();\r\n    private authservice: AuthService;\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            uploadedFilesInfo: [],\r\n            storyForm: {\r\n                Name: '',\r\n                Age: '',\r\n                Diceases: [],\r\n                Symptoms: '',\r\n                Treatment: '',\r\n                MoreToSay: '',\r\n                User: '',\r\n                Files: [],\r\n\r\n            },\r\n            storyFormErr: { NameErr: '', AgeErr: '', DiceasesErr: '', SymptomsErr: '', TreatmentErr: '', MoreToSayErr: '', FilesErr: '' },\r\n            Reset: false,\r\n            DialogProps: { show: false, message: '' },\r\n            isLoading: false,\r\n            isShowInfoPanel: false,\r\n            showStoryForm: false\r\n        }\r\n        this._afterFilesUploaded = this._afterFilesUploaded.bind(this);\r\n        this._onProgress = this._onProgress.bind(this);\r\n        this._inputChangeHandle = this._inputChangeHandle.bind(this);\r\n        this._submitForm = this._submitForm.bind(this);\r\n        this._closeDialog = this._closeDialog.bind(this);\r\n        this._removefile = this._removefile.bind(this);\r\n        this._onCalloutDismiss = this._onCalloutDismiss.bind(this);\r\n        this._ageChangeHandle = this._ageChangeHandle.bind(this);\r\n        this._hideStoryForm = this._hideStoryForm.bind(this);\r\n        this.service = new Service();\r\n        this.authservice = new AuthService();\r\n    }\r\n\r\n    private _afterFilesUploaded(files: any) {\r\n        for (let i = 0; i < files.length; i++) {\r\n            this.setState((prevState, prevProps) => ({\r\n                uploadedFilesInfo: [...prevState.uploadedFilesInfo, files[i]]\r\n            }));\r\n        }\r\n    }\r\n\r\n    private _removefile(fileInf: any) {\r\n        let uploadedFiles: any[] = [];\r\n        this.state.uploadedFilesInfo.forEach((fileInfo: any) => {\r\n            if (fileInfo.name !== fileInf.name) {\r\n                uploadedFiles = [...uploadedFiles, fileInfo];\r\n            }\r\n        });\r\n        this.setState({\r\n            uploadedFilesInfo: uploadedFiles\r\n        });\r\n    }\r\n\r\n    private _onProgress(filesInfo: any) {\r\n        let upLoad = Common._onProgress(filesInfo, this.state.uploadedFilesInfo);\r\n        this.setState((prevState: IState) => {\r\n            return { uploadedFilesInfo: upLoad }\r\n        });\r\n    }\r\n\r\n    private _inputChangeHandle(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        this.setState({\r\n            storyForm: { ...this.state.storyForm, [event.target.name]: event.target.value },\r\n        });\r\n    }\r\n\r\n    private isFormValid(): boolean {\r\n        let newsForm: IstoryForm = this.state.storyForm;\r\n        let errormsgs: IstoryFormError = this.state.storyFormErr;\r\n        let uploadedFilesInfo = this.state.uploadedFilesInfo;\r\n        let isFormValid: boolean = true;\r\n\r\n        if (newsForm.Name === \"\") {\r\n            errormsgs.NameErr = \"Required\";\r\n            isFormValid = false;\r\n        } else {\r\n            errormsgs.NameErr = \"\";\r\n        }\r\n\r\n        if (newsForm.Symptoms === \"\") {\r\n            errormsgs.SymptomsErr = \"Required\";\r\n            isFormValid = false;\r\n        } else {\r\n            errormsgs.SymptomsErr = \"\";\r\n        }\r\n\r\n        if (newsForm.Treatment === \"\") {\r\n            errormsgs.TreatmentErr = \"Required\";\r\n            isFormValid = false;\r\n        } else {\r\n            errormsgs.TreatmentErr = \"\";\r\n        }\r\n\r\n        if (newsForm.Diceases.length === 0) {\r\n            errormsgs.DiceasesErr = \"Required\";\r\n            isFormValid = false;\r\n        } else {\r\n            errormsgs.DiceasesErr = \"\";\r\n        }\r\n\r\n        if (uploadedFilesInfo.length > 0) {\r\n            for (let i = 0; i < uploadedFilesInfo.length; i++) {\r\n                if (!uploadedFilesInfo[i].response) {\r\n                    errormsgs.FilesErr = \"Please wait until all files are uploaded.\"\r\n                    isFormValid = false;\r\n                } else {\r\n                    errormsgs.FilesErr = '';\r\n                }\r\n            }\r\n        }\r\n        this.setState({\r\n            storyFormErr: errormsgs\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.setState((prevState: IState) => {\r\n                return {\r\n                    storyFormErr: { ...prevState.storyFormErr, FilesErr: '' },\r\n                };\r\n            });\r\n        }, 3000);\r\n        return isFormValid;\r\n    }\r\n\r\n    private _closeDialog() {\r\n        this.setState({\r\n            DialogProps: { show: false, message: '' }\r\n        });\r\n    }\r\n\r\n    private _submitForm() {\r\n        if (this.isFormValid()) {\r\n            let uploadedFilesInfo = this.state.uploadedFilesInfo;\r\n            let formData: IstoryForm = this.state.storyForm;\r\n            let FileUploadedResponse: IFileInfo[] = [];\r\n            for (let i = 0; i < uploadedFilesInfo.length; i++) {\r\n                if (uploadedFilesInfo[i].response) {\r\n                    FileUploadedResponse = [...FileUploadedResponse,\r\n                    new FileT(uploadedFilesInfo[i].response)]\r\n                }\r\n            }\r\n\r\n            let userInfo = this.authservice.isLoggedIn();\r\n            formData = {\r\n                ...formData,\r\n                Files: FileUploadedResponse,\r\n                User: (userInfo ? new BasicUserInfo(userInfo) : null)\r\n            };\r\n            formData.Name = formData.Name.trim();\r\n            formData.MoreToSay = formData.MoreToSay.trim();\r\n            formData.Symptoms = formData.Symptoms.trim();\r\n            formData.Treatment = formData.Treatment.trim();\r\n            this.setState({ isLoading: true });\r\n            this.service.createStory(formData).then((res) => {\r\n                if (res.status === true) {\r\n                    this.setState({\r\n                        uploadedFilesInfo: [],\r\n                        storyForm: {\r\n                            Name: '',\r\n                            Age: '',\r\n                            Diceases: [],\r\n                            Symptoms: '',\r\n                            Treatment: '',\r\n                            MoreToSay: '',\r\n                            User: '',\r\n                            Files: [],\r\n\r\n                        },\r\n                        storyFormErr: {\r\n                            NameErr: '',\r\n                            AgeErr: '',\r\n                            DiceasesErr: '', SymptomsErr: '',\r\n                            TreatmentErr: '', MoreToSayErr: '', FilesErr: ''\r\n                        },\r\n                        Reset: true,\r\n                        DialogProps: { show: true, message: \"Your story created.\" },\r\n                        isLoading: false\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        DialogProps: { show: true, message: res.message },\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private filesUploadedBindingInfo(filesInfo: any[]) {\r\n        let temp;\r\n        temp = filesInfo.map((fileInfo: any) => {\r\n            return <div key={fileInfo.name}>\r\n                <div className=\"ms-Grid upload\" dir=\"ltr\">\r\n                    <div className=\"ms-Grid-row\">\r\n                        <div className=\"ms-Grid-col ms-sm6 ms-md6 ms-lg6\">\r\n                            <p className=\"filename\">{fileInfo.name}</p>\r\n                        </div>\r\n                        <div className=\"ms-Grid-col ms-sm6 ms-md6 ms-lg6\">\r\n                            <div className=\"ms-Grid\" dir=\"ltr\">\r\n                                <div className=\"ms-Grid-row\">\r\n                                    <div className=\"ms-Grid-col ms-sm10 ms-md10 ms-lg11 sp-progress-bar \">\r\n                                        {fileInfo.progress != 100 &&\r\n                                            <ProgressBar now={fileInfo.progress}\r\n                                                label={fileInfo.progress}\r\n                                                animated={true}\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"ms-Grid-col ms-sm2 ms-md2 ms-lg1\">\r\n                                        <span className=\"btn-remove-file sp-float-right\"\r\n                                            onClick={() => this._removefile(fileInfo)}> &times;</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        });\r\n        return temp;\r\n    }\r\n\r\n    _onCalloutDismiss() {\r\n        this.setState({\r\n            isShowInfoPanel: false\r\n        });\r\n    }\r\n\r\n    _hideStoryForm() {\r\n        this.setState({\r\n            showStoryForm: false\r\n        });\r\n    }\r\n\r\n    private _onCategoryChange(option?: IDropdownOption) {\r\n        let erorMessage: string;\r\n        if (option) {\r\n            let catergory = this.state.storyForm.Diceases;\r\n            if (option.selected) {\r\n                catergory.push(option.key.toString());\r\n            } else {\r\n                let files = this.state.storyForm.Diceases.filter(\r\n                    (file: string) => file !== option.key\r\n                );\r\n                catergory = files;\r\n            }\r\n            if (catergory.length > 0) {\r\n                erorMessage = ''\r\n            }\r\n            else {\r\n                erorMessage = 'required'\r\n\r\n            }\r\n            this.setState({\r\n                storyForm: { ...this.state.storyForm, Diceases: catergory },\r\n                storyFormErr: { ...this.state.storyFormErr, DiceasesErr: erorMessage },\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    public _ageChangeHandle = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        let errorMessage: string;\r\n        const amount = (event.target.validity.valid || event.target.value === '') ? event.target.value : this.state.storyForm.Age;\r\n        if (event.target.value === \"\") {\r\n            errorMessage = 'Age required'\r\n        } else if (!event.target.validity.valid) {\r\n            errorMessage = \"Only number are allowed\";\r\n        } else {\r\n            errorMessage = \"\";\r\n        }\r\n        this.setState({\r\n            storyForm: { ...this.state.storyForm, [event.target.name]: amount },\r\n            storyFormErr: { ...this.state.storyFormErr, [event.target.name + 'Err']: errorMessage }\r\n        });\r\n    }\r\n\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <>\r\n                {this.state.isLoading && <Loading />}\r\n                <Dialog\r\n                    hidden={!this.state.showStoryForm}\r\n                    onDismiss={this._hideStoryForm}\r\n                    dialogContentProps={{\r\n                        type: DialogType.normal,\r\n                        title: \"Share your experience\",\r\n                        closeButtonAriaLabel: 'Close',\r\n                        showCloseButton: true,\r\n                    }}\r\n\r\n                    modalProps={{\r\n                        styles: { main: { maxWidth: 450 } },\r\n                        containerClassName: \"register-form-dialog\",\r\n                        onDismissed: this._hideStoryForm,\r\n                        isBlocking: true\r\n                    }}\r\n                >\r\n                    <TextField label=\"Name\" name=\"Name\"\r\n                        errorMessage={this.state.storyFormErr.NameErr}\r\n                        value={this.state.storyForm.Name}\r\n                        onChange={(event: any) => this._inputChangeHandle(event)}\r\n                        required />\r\n                    <div className=\"ms-Grid sp-no-pm\" dir=\"ltr\">\r\n                        <div className=\"ms-Grid-row\" >\r\n                            <div className=\"ms-Grid-col ms-sm12 ms-md6 ms-lg6\" >\r\n                                <TextField label=\"Age\" name=\"Age\"\r\n                                    errorMessage={this.state.storyFormErr.AgeErr}\r\n                                    value={this.state.storyForm.Age}\r\n                                    pattern=\"[0-9]*\"\r\n                                    onChange={(event: any) => this._ageChangeHandle(event)}\r\n                                    required />\r\n                            </div>\r\n                            <div className=\"ms-Grid-col ms-sm12 ms-md6 ms-lg6\" >\r\n\r\n                                <Dropdown\r\n                                    style={{ width: \"100%\" }}\r\n                                    label=\"Suffering from?\"\r\n                                    required\r\n                                    className=\"dropdown-fileType\"\r\n                                    placeholder=\"Select file type\"\r\n                                    options={CategoryOptions}\r\n                                    multiSelect={true}\r\n                                    defaultSelectedKeys={this.state.storyForm.Diceases}\r\n                                    // selectedKeys={this.state.newsForm.Category}\r\n                                    errorMessage={this.state.storyFormErr.DiceasesErr}\r\n                                    onChange={(event: React.FormEvent<HTMLDivElement>, option?: IDropdownOption, index?: number) => this._onCategoryChange(option)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <TextField label=\"What symptoms you observed?\" name=\"Symptoms\"\r\n                        errorMessage={this.state.storyFormErr.SymptomsErr}\r\n                        value={this.state.storyForm.Symptoms}\r\n                        multiline={true}\r\n                        rows={2}\r\n                        onChange={(event: any) => this._inputChangeHandle(event)}\r\n                        required />\r\n                    <TextField label=\"What treatment have you taken or taking?\" name=\"Treatment\"\r\n                        errorMessage={this.state.storyFormErr.TreatmentErr}\r\n                        value={this.state.storyForm.Treatment}\r\n                        onChange={(event: any) => this._inputChangeHandle(event)}\r\n                        required\r\n                        multiline={true}\r\n                        rows={2}\r\n                    />\r\n                    <TextField label=\"More to Say?\" name=\"MoreToSay\"\r\n                        errorMessage={this.state.storyFormErr.MoreToSayErr}\r\n                        value={this.state.storyForm.MoreToSay}\r\n                        onChange={(event: any) => this._inputChangeHandle(event)}\r\n                        multiline={true}\r\n                        rows={2}\r\n                        required />\r\n\r\n                    <div className=\"\" >\r\n                        {this.filesUploadedBindingInfo(this.state.uploadedFilesInfo)}\r\n                        <p className=\"sp-danger\">{this.state.storyFormErr.FilesErr}</p>\r\n                    </div>\r\n                    <FileUpload id=\"composeC12\"\r\n                        multiple={true}\r\n                        onProgress={this._onProgress}\r\n                        Reset={this.state.Reset}\r\n                        afterFilesUploaded={this._afterFilesUploaded} />\r\n                    <DefaultButton onClick={this._submitForm} className=\"sp-main-btn sp-float-right btn-register\" text=\"Post\" />\r\n                </Dialog>\r\n                <div className=\"compose-c\">\r\n                    <div className=\"sp-compose-body\">\r\n                        <p className=\"txt-heading\">Would you like to share your Experience</p>\r\n                        <div className=\"ms-Grid sp-no-pm\" dir=\"ltr\">\r\n                            <div className=\"ms-Grid-row\">\r\n                                <div className=\"ms-Grid-col ms-sm1\">\r\n                                    <img className=\"p-pic\" src={`${this.props.User.User && this.props.User.User.imagePath ? this.props.User.User.imagePath : ''}`} />\r\n                                </div>\r\n                                <div className=\"ms-Grid-col ms-sm11\">\r\n                                    <p className=\"text-box\" onClick={() => { this.setState({ showStoryForm: true }) }}>Share your Experience</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"sp-clearFix\"> </div>\r\n                    </div>\r\n                </div>\r\n                <Dialog\r\n                    hidden={!this.state.DialogProps.show}\r\n                    onDismiss={this._closeDialog}\r\n                    dialogContentProps={{\r\n                        type: DialogType.normal,\r\n                    }}\r\n                    modalProps={{\r\n                        styles: { main: { maxWidth: 450, textAlign: \"center\" } },\r\n                        isBlocking: true\r\n                    }}\r\n                >\r\n                    <p>{this.state.DialogProps.message}</p>\r\n                    <DefaultButton className=\"sp-btn-login\" onClick={this._closeDialog} text=\"Ok\" />\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): AppState => ({\r\n    User: state.User,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(CreateStory);","import * as React from \"react\";\r\nimport './styles.scss';\r\nimport moment from 'moment';\r\ninterface IProps {\r\ndateTime : string;\r\n}\r\n \r\nfunction TimeStamp(props: IProps) {\r\n  return (\r\n    <span className=\"time-stamp\">{moment(props.dateTime).fromNow()}</span>\r\n  );\r\n}\r\n\r\nexport function TimeStamp2(props: IProps) {\r\n  return (\r\n    <span className=\"time-stamp\">{moment(props.dateTime).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")}</span>\r\n  );\r\n}\r\n\r\n\r\nexport function TimeStamp3Right(props: IProps) {\r\n  return (\r\n    <span className=\"time-stamp-right\">{moment(props.dateTime).fromNow()}</span>\r\n  );\r\n}\r\n\r\nexport default TimeStamp;","import * as React from \"react\";\r\nimport './styles.scss';\r\nimport { IUserC } from '../../../models/models';\r\nimport Util from '../../../util';\r\nimport TimeStamp from '../TimeStamp';\r\n\r\n\r\ninterface IProps {\r\n  User: IUserC;\r\n  DateTime: string;\r\n  onUserClick(id: string): void;\r\n}\r\n\r\nclass UserInfo extends React.Component<IProps, {}> {\r\n  private util: Util;\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.util = new Util();\r\n  }\r\n  public render(): JSX.Element {\r\n    return (<>\r\n      <div className=\"row\">\r\n        <div className=\"column\">\r\n        <div className=\"sp-float-left img-c\" >\r\n          <img className=\"profile-pic sp-pointer\" src={`${this.props.User.imagePath}`} alt=\"dd\" onClick={() => this.props.onUserClick(this.props.User._id)} />\r\n        </div>\r\n        </div>\r\n        <div className=\"column1\" >\r\n        <p className=\"profile-name\" >\r\n            {`${this.props.User.firstName} ${this.props.User.lastName}`}\r\n          </p>\r\n          <TimeStamp dateTime={this.props.DateTime} />\r\n        </div>\r\n      </div>\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserInfo;","import * as React from \"react\";\r\nimport './styles.scss';\r\nimport { IFileC } from '../../../models/models';\r\nconst YTPlayer = require('yt-player');\r\n\r\ninterface IProps {\r\n  File: IFileC;\r\n}\r\n\r\ninterface IState {\r\n  playerRef: any;\r\n  currentId: string;\r\n  File: IFileC;\r\n}\r\n\r\nclass Youtube extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      playerRef: null,\r\n      currentId: '',\r\n      File: this.props.File\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let thisObj = this;\r\n    let link = this.state.File.filePath;\r\n    let linkL = link.length;\r\n    let ddd = link.substring(linkL - 11);\r\n    const player = new YTPlayer(`#${this.state.File._id.substring(1, 10)}`, { width: '100%', height: '280' });\r\n    player.load(ddd);\r\n    window.addEventListener('scroll', function () {\r\n      var element = document.querySelector(`#${thisObj.props.File._id.substring(1, 10)}`);\r\n      if (element) {\r\n        var position = element.getBoundingClientRect();\r\n        if (position.top >= 0 && position.bottom <= window.innerHeight) {\r\n        }\r\n        if (position.top < window.innerHeight && position.bottom >= 0) {\r\n          if (player.getState() == 'playing') {\r\n            player.pause();\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      playerRef: player,\r\n      currentId: this.state.File._id.substring(1, 10)\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(newProps: IProps) {\r\n    if (newProps.File) {\r\n      if (this.state.File._id !== newProps.File._id) {\r\n        this.setState({\r\n          File: newProps.File\r\n        });\r\n      }\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.state.playerRef) {\r\n      this.state.playerRef.destroy();\r\n    }\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    console.log(this.state.File);\r\n    return (\r\n      <>\r\n        \r\n        {(this.state.File !== null && this.state.File !== undefined) &&\r\n          <div id={this.state.File._id.substring(1, 10)}></div>}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Youtube;","import * as React from \"react\";\r\nimport './styles.scss';\r\nimport { IFileC } from '../../../models/models';\r\n\r\ninterface IProps {\r\n  File: IFileC;\r\n}\r\n\r\nfunction Image(props: IProps) {\r\n  return (\r\n    <img className=\"sp-img\" src={`${props.File.filePath}`} alt=\"no image\" />\r\n  );\r\n}\r\n\r\n\r\nexport function OthersImage(props: IProps) {\r\n  return (\r\n    <img className=\"sp-img\" src={props.File.filePath} alt=\"no image\" />\r\n  );\r\n}\r\n\r\nexport default Image;","import * as React from \"react\";\r\nimport './styles.scss';\r\nimport { IFileC } from '../../../models/models';\r\n\r\ninterface IProps {\r\n  File: IFileC;\r\n}\r\n\r\n\r\nfunction FacebookVideo(props: IProps) {\r\n  return (\r\n    <iframe id={props.File._id + Date().toString()} src={`https://www.facebook.com/plugins/video.php?href=${props.File.filePath}&width=500&show_text=false&height=280&appId`} width=\"100%\" height=\"280px\" scrolling=\"no\" frameBorder=\"0\" className=\"sp-fb-iframe\" allow=\"encrypted-media\" allowFullScreen={true} title={props.File.originalName} ></iframe>\r\n  );\r\n}\r\nexport default FacebookVideo;\r\n","import * as React from \"react\";\r\nimport './styles.scss';\r\nimport { IFileC } from '../../../models/models';\r\n\r\ninterface IProps {\r\n  File: IFileC;\r\n  isThumbNail?: boolean;\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nclass LocalVideo extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let thisObj = this;\r\n\r\n    window.addEventListener('scroll', function () {\r\n      var element: any = document.querySelector(`#${thisObj.props.File._id.substring(1, 10)}`);\r\n      if (element) {\r\n        var position = element.getBoundingClientRect();\r\n        if (position.top >= 0 && position.bottom <= window.innerHeight) {\r\n        }\r\n        if (position.top < window.innerHeight && position.bottom >= 0) {\r\n          element.pause();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    return (<>\r\n      <div className={`${this.props.isThumbNail ? 'hover-ef' : 'sp-hide'}`}>\r\n      </div>\r\n      <video id={this.props.File._id.substring(1, 10)} width=\"100%\" height=\"100%\" controls >\r\n        <source src={`${this.props.File.filePath}`} type=\"video/mp4\" />\r\n          Your browser does not support the video tag.\r\n      </video>\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LocalVideo;\r\n\r\n","import * as React from \"react\";\r\nimport Youtube from './Youtube';\r\nimport Image, { OthersImage } from './Image';\r\nimport FacebookVideo from './facebook';\r\nimport LocalVideo from './localVideo';\r\nimport { IFileC, MainFileType } from '../../../models/models';\r\nimport './styles.scss';\r\n\r\ninterface IState {\r\n  Sources: IFileC[];\r\n  CurrentIndex: number;\r\n}\r\n\r\ninterface IProps {\r\n  Sources: IFileC[];\r\n}\r\n\r\nclass Template extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      Sources: this.props.Sources,\r\n      CurrentIndex: 0\r\n    }\r\n\r\n    this._onNavBtnClicked = this._onNavBtnClicked.bind(this);\r\n  }\r\n\r\n  public _onNavBtnClicked(type: any) {\r\n    if (type === \"prev\") {\r\n      if (this.state.CurrentIndex > 0) {\r\n        this.setState((prevStat: IState) => {\r\n          return { CurrentIndex: Number(prevStat.CurrentIndex) - 1 }\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      if (this.state.Sources.length - 1 > this.state.CurrentIndex) {\r\n        this.setState((prevStat: IState) => {\r\n          return { CurrentIndex: Number(prevStat.CurrentIndex) + 1 }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <>\r\n        <div className=\"card sp-main-video\">\r\n          {(this.state.Sources[this.state.CurrentIndex].fileType === MainFileType.facebookVideo) && <><FacebookVideo File={this.state.Sources[this.state.CurrentIndex]}></FacebookVideo></>}\r\n          {(this.state.Sources[this.state.CurrentIndex].fileType === MainFileType.youtubeVideo) && <Youtube File={this.state.Sources[this.state.CurrentIndex]} />}\r\n          {(this.state.Sources[this.state.CurrentIndex].fileType === MainFileType.localImage) && <Image File={this.state.Sources[this.state.CurrentIndex]} />}\r\n          {(this.state.Sources[this.state.CurrentIndex].fileType === MainFileType.othersImage) && <OthersImage File={this.state.Sources[this.state.CurrentIndex]} />}\r\n          {(this.state.Sources[this.state.CurrentIndex].fileType === MainFileType.localVideo) && <LocalVideo File={this.state.Sources[this.state.CurrentIndex]} />}\r\n          {(this.state.Sources.length - 1 > this.state.CurrentIndex) && <button className=\"sp-nav-btn sp-btn-right\" onClick={() => this._onNavBtnClicked(\"next\")}><i className=\"ms-Icon ms-Icon--ChevronRight\" aria-hidden=\"true\"></i></button>}\r\n          {(this.state.CurrentIndex > 0) && <button className=\"sp-nav-btn sp-btn-left\" onClick={() => this._onNavBtnClicked(\"prev\")}><i className=\"ms-Icon ms-Icon--ChevronLeft\" aria-hidden=\"true\"></i></button>}\r\n        </div>\r\n        <div className=\"sp-clearFix\"></div>\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Template;\r\n","import * as React from \"react\";\r\nimport Youtube from '../../../common/Templates/Youtube';\r\nimport Template from '../../../common/Templates';\r\nimport Image, { OthersImage } from '../../../common/Templates/Image';\r\nimport { IFileC, MainFileType } from '../../../../models/models';\r\nimport FacebookVideo from '../../../common/Templates/facebook';\r\nimport LocalVideo from '../../../common/Templates/localVideo';\r\nimport './styles.scss';\r\n\r\n\r\ninterface IProps {\r\n  Sources: IFileC[];\r\n}\r\n\r\nclass Sources extends React.Component<IProps, {}> {\r\n  private infoBind(filesInfo: IFileC[]) {\r\n    let temp;\r\n    if (filesInfo.length === 1) {\r\n      return <>\r\n        {(filesInfo[0].fileType === MainFileType.facebookVideo) && <div className=\"video-container\">  <FacebookVideo File={filesInfo[0]} /> </div>}\r\n        {(filesInfo[0].fileType === MainFileType.youtubeVideo) && <div className=\"video-container\">  <Youtube File={filesInfo[0]} /> </div>}\r\n        {(filesInfo[0].fileType === MainFileType.localImage) && <div className=\"image-container\"> <Image File={filesInfo[0]} /> </div>}\r\n        {(filesInfo[0].fileType === MainFileType.othersImage) && <div className=\"image-container\"> <OthersImage File={filesInfo[0]} /> </div>}\r\n        {(filesInfo[0].fileType === MainFileType.localVideo) && <div className=\"video-container\">  <LocalVideo File={filesInfo[0]} /> </div>}\r\n      </>\r\n    } else\r\n      temp = <div className=\"image-container\"><Template Sources={filesInfo}></Template> </div>;\r\n    return temp;\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <>\r\n        {(this.props.Sources.length > 0 && this.infoBind(this.props.Sources))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sources;","import * as React from \"react\";\r\nimport { IUserC } from '../../../models/models';\r\nimport TimeStamp, { TimeStamp3Right } from '../TimeStamp';\r\ninterface IState {\r\n}\r\n\r\ninterface IProps {\r\n  User: IUserC;\r\n  DateTime: string;\r\n  Comment: string;\r\n}\r\n\r\nclass UserInfo extends React.Component<IProps, IState> {\r\n  public render(): JSX.Element {\r\n    return (<>\r\n      <div className=\"ms-Grid comment-info\" dir=\"ltr\">\r\n        <div className=\"ms-Grid-row\">\r\n          <div className=\"ms-Grid-col sp-1 profile-pic2-c\">\r\n            <img className=\"profile-pic2 sp-pointer\" src={`${this.props.User.imagePath}`} alt=\"dd\" />\r\n          </div>\r\n          <div className=\"ms-Grid-col sp-9 comment-details\">\r\n            <p className=\"profile-name2 sp-no-pm\" >\r\n              {`${this.props.User.firstName} ${this.props.User.lastName}`}\r\n              <TimeStamp3Right dateTime={this.props.DateTime} />\r\n            </p>\r\n            <p className=\"comment\">{this.props.Comment}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"sp-clearFix\"></div>\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserInfo;","import * as React from \"react\";\r\nimport NewsService from '../user/Service';\r\nimport AuthService from \"../../services/authService\";\r\nimport CommentInfo from './CommentPoster';\r\nimport { IComment, IDialogPropss } from \"../../models/models\";\r\nimport { connect } from \"react-redux\";\r\nimport { AppState } from \"../../Redux/app.store\";\r\nimport { IUserState } from \"../../Redux/models\";\r\nimport { socket } from '../../app';\r\nimport { DialogType, Dialog, DefaultButton } from \"office-ui-fabric-react\";\r\nimport './styles.scss';\r\n\r\ninterface ICommentForm {\r\n    comment: string;\r\n    commentErr: string;\r\n}\r\n\r\ninterface IState {\r\n    commentForm: ICommentForm\r\n    showComments: boolean;\r\n    RefId: string;\r\n    isLoggedInUser: boolean;\r\n    skip: number;\r\n    isLoading: boolean;\r\n    comments: IComment[];\r\n    User: IUserState;\r\n    hideMoreCommentsButton: boolean;\r\n    dialogProps: IDialogPropss\r\n}\r\n\r\ninterface IProps {\r\n    User: IUserState;\r\n    RefId: string;\r\n}\r\n\r\nclass Comment extends React.Component<IProps, IState> {\r\n    private newsService: NewsService;\r\n    private authService: AuthService;\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.authService = new AuthService();\r\n\r\n        this.state = {\r\n            commentForm: { comment: '', commentErr: '' },\r\n            showComments: false,\r\n            RefId: this.props.RefId,\r\n            isLoggedInUser: this.authService.isLoggedIn(),\r\n            skip: 0,\r\n            comments: [],\r\n            isLoading: false,\r\n            User: this.props.User,\r\n            hideMoreCommentsButton: false,\r\n            dialogProps: { show: false, message: '' }\r\n        }\r\n\r\n        this.newsService = new NewsService();\r\n        this._inputChangeHandle = this._inputChangeHandle.bind(this);\r\n        this._showComments = this._showComments.bind(this);\r\n        this._getMoreComments = this._getMoreComments.bind(this);\r\n        this._onKeyDown = this._onKeyDown.bind(this);\r\n        this._closeDialog = this._closeDialog.bind(this);\r\n    }\r\n\r\n    private _closeDialog() {\r\n        this.setState({\r\n            dialogProps: { show: false, message: '' }\r\n        });\r\n    }\r\n    public _inputChangeHandle = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        this.setState({\r\n            commentForm: { ...this.state.commentForm, comment: event.target.value },\r\n        });\r\n    }\r\n\r\n    private _showComments() {\r\n        this.setState({\r\n            showComments: !this.state.showComments,\r\n            isLoading: true\r\n        });\r\n\r\n        this.newsService.getCommentsByRef(\r\n            { skip: this.state.skip, filter: { RefId: this.state.RefId } })\r\n            .then((res: any) => {\r\n                if (res.status) {\r\n                    let comments: IComment[] = res.data;\r\n                    let allComments: IComment[] = this.state.comments;\r\n                    if (comments.length > 0) {\r\n                        comments.forEach((comment: IComment) => {\r\n                            allComments = [...allComments, comment];\r\n                        });\r\n                        this.setState({\r\n                            comments: allComments,\r\n                            skip: this.state.skip + comments.length,\r\n                            hideMoreCommentsButton: comments.length < 10 ? true : false,\r\n                            isLoading: false\r\n                        });\r\n                    } else {\r\n                        this.setState({ isLoading: false });\r\n                    }\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    private _onKeyDown(event: React.KeyboardEvent<HTMLInputElement | HTMLTextAreaElement>) {\r\n        if (event.keyCode === 13) {\r\n            if (this.state.User.User) {\r\n                this.newsService.postComment(\r\n                    {\r\n                        RefId: this.state.RefId,\r\n                        comment: this.state.commentForm.comment\r\n                    }\r\n                ).then((res) => {\r\n                    if (res.status) {\r\n                        this.setState({\r\n                            commentForm: {\r\n                                ...this.state.commentForm,\r\n                                comment: '',\r\n                                commentErr: ''\r\n                            }\r\n                        });\r\n                    } else if (res.statuscode == 401) {\r\n                        this.setState({\r\n                            dialogProps: { show: true, message: 'Please login to comment.' }\r\n                        });\r\n                        this.authService.LogOut1();\r\n                    }\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    dialogProps: { show: true, message: 'Please login to comment.' }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps: IProps) {\r\n        this.setState({\r\n            isLoggedInUser: this.authService.isLoggedIn(),\r\n            User: newProps.User\r\n        });\r\n    }\r\n\r\n    _getMoreComments() {\r\n        this.setState({\r\n            isLoading: true\r\n        });\r\n\r\n        this.newsService.getCommentsByRef(\r\n            { skip: this.state.skip, filter: { RefId: this.state.RefId } })\r\n            .then((res: any) => {\r\n                if (res.status) {\r\n                    let comments: IComment[] = res.data;\r\n                    let allComments: IComment[] = this.state.comments;\r\n                    if (comments.length > 0) {\r\n                        comments.forEach((comment: IComment) => {\r\n                            allComments = [...allComments, comment];\r\n                        })\r\n                        this.setState({\r\n                            comments: allComments,\r\n                            skip: this.state.skip + comments.length,\r\n                            hideMoreCommentsButton: comments.length < 10 ? true : false,\r\n                            isLoading: false\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            isLoading: false,\r\n                            hideMoreCommentsButton: true\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.setState({\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        socket.on(`Comments_${this.state.RefId}`, (data: any) => {\r\n            if (data && (data.RefId === this.state.RefId)) {\r\n                let ddd: IComment[] = this.state.comments;\r\n                ddd.unshift({ CommetPoster: data.CommetPoster, Comment: data.Comment, _id: '', DateTime: data.DateTime });\r\n                this.setState({\r\n                    comments: ddd,\r\n                    skip: this.state.skip + 1,\r\n                    hideMoreCommentsButton: this.state.hideMoreCommentsButton\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <div className=\"comments-container\">\r\n                <div className=\"sp-m10 button-div\">\r\n                    <p className=\"sp-float-right comment-p\" onClick={this._showComments}>\r\n                        Comments\r\n                    </p>\r\n                </div>\r\n                {this.state.showComments && <>\r\n                    <div className=\"ms-Grid comment-info2\" dir=\"ltr\">\r\n                        <div className=\"ms-Grid-row\">\r\n                            <div className=\"ms-Grid-col sp-1 profile-pic2-c\">\r\n                                <img className=\"profile-pic2 sp-pointer\" src={`${this.state.User.User ? this.state.User.User.imagePath : '/uploads/static_files/avatar_2x.png'}`} alt=\"dd\" />\r\n                            </div>\r\n                            <div className=\"ms-Grid-col sp-9 comment-details\">\r\n                                <input\r\n                                    className=\"comment-in\"\r\n                                    value={this.state.commentForm.comment}\r\n                                    placeholder=\"Write a comment.\"\r\n                                    name=\"Title\"\r\n                                    onKeyDown={this._onKeyDown}\r\n                                    onChange={(event: any) => this._inputChangeHandle(event)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {this.state.comments.length > 0 ?\r\n                        <div className=\"all-comments\">\r\n                            {this.state.comments.map((info: IComment) => {\r\n                                return <CommentInfo User={info.CommetPoster} Comment={info.Comment} DateTime={info.DateTime} key={info._id} />\r\n                            })}\r\n                            {!this.state.hideMoreCommentsButton &&\r\n                                <p className=\"view-more\" onClick={this._getMoreComments}>View more comments.</p>}\r\n                        </div> :\r\n                        <>\r\n                            {!this.state.isLoading && <p className=\"sp-ml10 view-more\">Be the first one to comment.</p>}\r\n                        </>\r\n                    }\r\n                </>\r\n                }\r\n                <Dialog\r\n                    hidden={!this.state.dialogProps.show}\r\n                    onDismiss={this._closeDialog}\r\n                    dialogContentProps={{\r\n                        type: DialogType.normal,\r\n                    }}\r\n                    modalProps={{\r\n                        styles: { main: { maxWidth: 450, textAlign: \"center\" } },\r\n                        isBlocking: true\r\n                    }}\r\n                >\r\n                    <p>{this.state.dialogProps.message}</p>\r\n                    <DefaultButton className=\"sp-btn-login\" onClick={this._closeDialog} text=\"Ok\" />\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): AppState => ({\r\n    User: state.User,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(Comment);","import * as React from \"react\";\r\nimport {\r\n    RouteComponentProps, withRouter\r\n} from 'react-router-dom';\r\nimport './styles.scss';\r\nimport NewsService from '../../Service';\r\nimport {  ISavedStory, StoryModel } from '../../../../models/models';\r\nimport { socket } from '../../../../app';\r\nimport { AppState } from \"../../../../Redux/app.store\";\r\nimport { connect } from \"react-redux\";\r\nimport { IUserState } from \"../../../../Redux/models\";\r\nimport { Shimmer3 } from \"../../../common/Loading/Shimmers\";\r\nimport { debug } from \"console\";\r\nimport Donations from \"../Donations\";\r\nimport CreateStory from \"./CreateStory\";\r\nimport UserInfo from \"../../../common/UserInfo\";\r\nimport Sources from \"../mainNews/Sources\";\r\nimport Comment from '../../../common/Comment';\r\nimport Navbar from \"../../Navbar\";\r\nconst ShowMoreText = require('react-show-more-text');\r\n\r\ninterface IState {\r\n    allNews: ISavedStory[];\r\n    isLoading: boolean;\r\n    currentScrollPosition: number;\r\n    skip: number;\r\n    isLoadNext: boolean;\r\n    DateTime: any;\r\n    stopRequests: boolean;\r\n}\r\n\r\ninterface IProps extends RouteComponentProps {\r\n    User: IUserState;\r\n}\r\n\r\nclass Stories extends React.Component<IProps, IState> {\r\n    private newsService: NewsService;\r\n    private language: string;\r\n    ddd = localStorage.getItem('language');\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            allNews: [],\r\n            currentScrollPosition: 0,\r\n            skip: 0,\r\n            isLoadNext: false,\r\n            DateTime: null,\r\n            stopRequests: false\r\n        }\r\n        this.newsService = new NewsService();\r\n        this.language = this.ddd ? this.ddd : 'en';\r\n        this._onUserClick = this._onUserClick.bind(this);\r\n        this._onScrollEvent = this._onScrollEvent.bind(this);\r\n    }\r\n\r\n    private _onUserClick(id: string) {\r\n        if (id !== null) {\r\n            this.props.history.push(`/user/${id}`);\r\n        }\r\n    }\r\n\r\n    private generateString(strings: string[]) {\r\n        debugger;\r\n        let dd = \"\";\r\n        strings.forEach((a: string, index: number) => {\r\n            if (index !== strings.length - 1) {\r\n                dd += a + ' ,';\r\n            } else {\r\n                dd += a + '.'\r\n            }\r\n        });\r\n        return dd;\r\n    }\r\n\r\n    private infoBind(filesInfo: ISavedStory[]) {\r\n        console.log(filesInfo);\r\n        let temp;\r\n        if (filesInfo) {\r\n            temp = filesInfo.map((news: ISavedStory) => {\r\n                return <div id={news._id}>\r\n                    <div className=\"main-contai c-style1\" key={news._id}>\r\n                        <UserInfo DateTime={news.DateTime} User={news.User} onUserClick={this._onUserClick} ></UserInfo>\r\n\r\n                        <div className=\"story-details\">\r\n                            <p className=\"sp-no-pm\"> <b>Symptoms: </b> </p>\r\n                            <ShowMoreText\r\n                                lines={4}\r\n                                more=\"read more\"\r\n                                less=\"read less\"\r\n                                anchorClass='show-more-link'\r\n                                expanded={false}\r\n                                keepNewLines={true}\r\n                            >\r\n                                {news.Symptoms}\r\n                            </ShowMoreText>\r\n                            <p className=\"sp-no-pm\"> <b>Diseases: </b></p>\r\n                            <ShowMoreText\r\n                                lines={4}\r\n                                more=\"read more\"\r\n                                less=\"read less\"\r\n                                anchorClass='show-more-link'\r\n                                expanded={false}\r\n                                keepNewLines={true}\r\n                            >\r\n                                {this.generateString(news.Diceases)}\r\n                            </ShowMoreText>\r\n\r\n                            <p className=\"sp-no-pm\"><b>Treatment:</b></p>\r\n                            <ShowMoreText\r\n                                lines={4}\r\n                                more=\"read more\"\r\n                                less=\"read less\"\r\n                                anchorClass='show-more-link'\r\n                                expanded={false}\r\n                                keepNewLines={true}\r\n                            >\r\n                                {news.Treatment}\r\n                            </ShowMoreText>\r\n                            <p className=\"sp-no-pm\"><b>Suggestions: </b></p>\r\n                            <ShowMoreText\r\n                                lines={4}\r\n                                more=\"read more\"\r\n                                less=\"read less\"\r\n                                anchorClass='show-more-link'\r\n                                expanded={false}\r\n                                keepNewLines={true}\r\n                            >\r\n                                {news.MoreToSay}\r\n                            </ShowMoreText>\r\n                        </div>\r\n                        <div className=\"sp-clearFix msg-body\" >\r\n\r\n                            {news.Files.length > 0 && <Sources Sources={news.Files} />}\r\n                        </div>\r\n\r\n                        <hr className=\"sp-hr\" />\r\n                        <Comment RefId={news._id} />\r\n                    </div>\r\n\r\n                </div>\r\n            });\r\n        } else {\r\n            temp = <p>no records</p>;\r\n        }\r\n        return temp;\r\n    }\r\n\r\n    componentWillReceiveProps(newProps: IProps) {\r\n        if (this.language !== newProps.User.language) {\r\n            this.setState({ isLoading: true });\r\n            this.language = newProps.User.language;\r\n            this.newsService.getStories({ skip: 0 }).then((res: any) => {\r\n                if (res.status) {\r\n                    let data = res.data;\r\n                    this.setState({\r\n                        allNews: data,\r\n                        isLoading: false,\r\n                        currentScrollPosition: window.scrollY,\r\n                        skip: data.length,\r\n                        DateTime: res.data.length > 0 ? res.data[0].DateTime : ''\r\n                    });\r\n                } else {\r\n                    this.setState({ isLoading: false });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true });\r\n        this.newsService.getStories({ skip: 0 }).then((res: any) => {\r\n            debugger;\r\n            console.log(res);\r\n            if (res.status) {\r\n                let data = res.data;\r\n                this.setState({\r\n                    allNews: data,\r\n                    isLoading: false,\r\n                    currentScrollPosition: window.scrollY,\r\n                    skip: data.length,\r\n                    DateTime: res.data.length > 0 ? res.data[0].DateTime : ''\r\n                });\r\n            } else {\r\n                this.setState({ isLoading: false });\r\n            }\r\n        });\r\n\r\n        socket.on(\"NewsUpdated\", (data: any) => {\r\n            debugger;\r\n            if (this.language === 'en') {\r\n                let newsInfo: any = data.English;\r\n                let allNews: ISavedStory[] = this.state.allNews;\r\n                let tempNews: ISavedStory[] = [];\r\n                allNews.forEach((news: ISavedStory) => {\r\n                    if (news._id === newsInfo._id) {\r\n                        if (newsInfo.Show) {\r\n                            tempNews = [...tempNews, new StoryModel(newsInfo)]\r\n                        }\r\n                    } else {\r\n                        tempNews = [...tempNews, news];\r\n                    }\r\n                });\r\n                this.setState({\r\n                    allNews: tempNews\r\n                });\r\n            } else if (this.language === 'te') {\r\n                let newsInfo: any = data.Telugu;\r\n                let allNews: ISavedStory[] = this.state.allNews;\r\n                let tempNews: ISavedStory[] = [];\r\n                allNews.forEach((news: ISavedStory) => {\r\n                    if (news._id === newsInfo._id) {\r\n                        if (newsInfo.Show) {\r\n                            tempNews = [...tempNews, newsInfo]\r\n                        }\r\n                    } else {\r\n                        tempNews = [...tempNews, news];\r\n                    }\r\n                });\r\n                this.setState({\r\n                    allNews: tempNews\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    _onScrollEvent() {\r\n        const totalHeight = document.documentElement.scrollHeight;\r\n        if (window.pageYOffset > totalHeight - 1300 && !this.state.isLoading && !this.state.stopRequests) {\r\n            this.setState({\r\n                isLoading: true\r\n            });\r\n            this.newsService.getStories({ skip: this.state.skip, filter: { DateTime: this.state.DateTime } }).then((res: any) => {\r\n                if (res.status) {\r\n                    let data: [] = res.data;\r\n                    if (data.length > 0) {\r\n                        let allre: ISavedStory[] = this.state.allNews;\r\n                        data.forEach((d: any) => {\r\n                            allre = [...allre, d];\r\n                        });\r\n                        if (allre.length > 100) {\r\n\r\n                            allre.splice(0, 10);\r\n                        }\r\n                        this.setState((prevState: IState) => {\r\n                            return {\r\n                                allNews: allre,\r\n                                currentScrollPosition: window.scrollY,\r\n                                skip: data.length > 0 ? prevState.skip + data.length : prevState.skip,\r\n                                isLoading: false,\r\n                                DateTime: prevState.DateTime < res.data[0].DateTime ? res.data[0].DateTime : prevState.DateTime\r\n                            }\r\n                        });\r\n                    } else {\r\n                        this.setState({ isLoading: false, stopRequests: true });\r\n                    }\r\n                } else {\r\n                    this.setState({ isLoading: false, stopRequests: true });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        window.addEventListener('scroll', this._onScrollEvent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"scroll\", this._onScrollEvent, { capture: false });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <>\r\n                <Navbar />\r\n                <div className=\"sp-main-wrapper\">\r\n                    <div className=\"ms-Grid\" dir=\"ltr\">\r\n                        <div className=\"ms-Grid-row\">\r\n                            <div className=\"ms-Grid-col ms-sm12 ms-md8 \">\r\n                                <div className=\"main-container-wrapper\">\r\n                                    <div className=\"compose-co c-style1\" >\r\n                                        <CreateStory />\r\n                                    </div>\r\n                                    {(this.state.allNews && this.infoBind(this.state.allNews))}\r\n                                    {this.state.isLoading && <>\r\n                                        <div className=\"shimmer-main-w\"> <Shimmer3 /> </div>\r\n                                        <div className=\"shimmer-main-w\"> <Shimmer3 /> </div> </>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppState): AppState => ({\r\n    User: state.User,\r\n});\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n)(Stories));","import * as React from \"react\";\r\nimport { DefaultButton, IStackStyles, Dialog, DialogType, DialogFooter, PrimaryButton, TextField } from 'office-ui-fabric-react';\r\nimport { connect } from \"react-redux\";\r\nimport './styles.scss';\r\nimport { IUserState } from \"../../../../Redux/models\";\r\nimport { AppState } from \"../../../../Redux/app.store\";\r\nimport Service from '../../Service';\r\nimport { IDialogPropss } from \"../../../../models/models\";\r\nimport Loading from \"../../../common/Loading\";\r\n\r\nconst stackStyles: Partial<IStackStyles> = { root: { color: \"#E55346\" } };\r\n\r\ninterface IDonationForm {\r\n    name: string;\r\n    phoneNumber: string;\r\n    email: string;\r\n    problem: string;\r\n    expect: string;\r\n}\r\ninterface IDonationFormErr {\r\n    nameErr: string;\r\n    phoneNumberErr: string;\r\n    emailErr: string;\r\n    problemErr: string;\r\n    expectErr: string;\r\n}\r\ninterface IState {\r\n    showModel: boolean;\r\n    donationForm: IDonationForm;\r\n    donationFormErr: IDonationFormErr;\r\n    isLoading: boolean;\r\n    response: any;\r\n    DialogProps2: IDialogPropss;\r\n    errormsg: string;\r\n}\r\n\r\ninterface IProps {\r\n    User: IUserState;\r\n\r\n}\r\n\r\nclass RaiseHelp extends React.Component<IProps, IState> {\r\n    private service: Service;\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            showModel: false,\r\n            donationForm: {\r\n                // _id: this.props.User && this.props.User.User && this.props.User.User._id ? this.props.User.User._id : '',\r\n                name: this.props.User && this.props.User.User && this.props.User.User.firstName ? this.props.User.User.firstName : '',\r\n                phoneNumber: this.props.User && this.props.User.User && this.props.User.User.phoneNumber ? this.props.User.User.phoneNumber : '',\r\n                email: this.props.User && this.props.User.User && this.props.User.User.email ? this.props.User.User.email : '',\r\n                problem: '',\r\n                expect: ''\r\n            },\r\n            donationFormErr: {\r\n                phoneNumberErr: '',\r\n                nameErr: '',\r\n                emailErr: '',\r\n                problemErr: '',\r\n                expectErr: ''\r\n            },\r\n            isLoading: false,\r\n            response: null,\r\n            DialogProps2: { show: false, message: '' },\r\n            errormsg: ''\r\n\r\n        }\r\n        this.service = new Service();\r\n        this._showDialog = this._showDialog.bind(this);\r\n        this._closeDialog = this._closeDialog.bind(this);\r\n        this._amountChangeHandle = this._amountChangeHandle.bind(this);\r\n        this._inputChangeHandle = this._inputChangeHandle.bind(this);\r\n        this._submitForm = this._submitForm.bind(this);\r\n        this.onPaymentSuccuess = this.onPaymentSuccuess.bind(this);\r\n        this._closeDialog2 = this._closeDialog2.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n    }\r\n\r\n    private _showDialog() {\r\n        this.setState({\r\n            showModel: true\r\n        });\r\n    }\r\n\r\n    private _closeDialog() {\r\n        this.setState({\r\n            showModel: false,\r\n            donationForm: {\r\n                name: this.props.User && this.props.User.User && this.props.User.User.firstName ? this.props.User.User.firstName : '',\r\n                phoneNumber: this.props.User && this.props.User.User && this.props.User.User.phoneNumber ? this.props.User.User.phoneNumber : '',\r\n                email: this.props.User && this.props.User.User && this.props.User.User.email ? this.props.User.User.email : '',\r\n                problem: '',\r\n                expect: ''\r\n            }\r\n        });\r\n    }\r\n    private _inputChangeHandle(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        this.setState({\r\n            donationForm: { ...this.state.donationForm, [event.target.name]: event.target.value },\r\n        });\r\n    }\r\n\r\n    public _amountChangeHandle = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        let errorMessage: string;\r\n        const amount = (event.target.validity.valid || event.target.value === '') ? event.target.value : this.state.donationForm.phoneNumber;\r\n        if (event.target.value === \"\") {\r\n            errorMessage = 'Required'\r\n        } else if (!event.target.validity.valid) {\r\n            errorMessage = \"Only number are allowed\";\r\n        } else {\r\n            errorMessage = \"\";\r\n        }\r\n        this.setState({\r\n            donationForm: { ...this.state.donationForm, [event.target.name]: amount },\r\n            donationFormErr: { ...this.state.donationFormErr, [event.target.name + 'Err']: errorMessage }\r\n        });\r\n    }\r\n\r\n    private onPaymentSuccuess(obj: any) {\r\n        debugger;\r\n        if (obj && obj.razorpay_payment_id) {\r\n            this.setState({ isLoading: true });\r\n            let objee: any = {};\r\n            objee.PaymentSuccess = obj;\r\n            objee.paymentInit = this.state.response.paymentInit;\r\n            objee.orderId = this.state.response.orderId;\r\n\r\n            this.service.updateDonationRequest(objee).then((res: any) => {\r\n                console.log(res);\r\n                debugger;\r\n                if (res.status) {\r\n                    this.setState({\r\n                        DialogProps2: { show: true, message: 'Thanks for donating.' },\r\n                        isLoading: false\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        DialogProps2: { show: true, message: res.message },\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    private isFormValid = (): boolean => {\r\n        let donationForm: IDonationForm = this.state.donationForm;\r\n        let donationFormErr: IDonationFormErr = this.state.donationFormErr;\r\n        let isFormValid: boolean = true;\r\n        if (donationForm.phoneNumber === \"\") {\r\n            donationFormErr.phoneNumberErr = 'Required'\r\n            isFormValid = false;\r\n        }\r\n        else {\r\n            donationFormErr.phoneNumberErr = \"\";\r\n        }\r\n\r\n        if (donationForm.phoneNumber === \"\") {\r\n            donationFormErr.phoneNumberErr = \"Required\";\r\n            isFormValid = false;\r\n        } else if (donationForm.phoneNumber.length < 10) {\r\n            donationFormErr.phoneNumberErr = \"Enter valid mobile number\"\r\n            isFormValid = false;\r\n        } else {\r\n            donationFormErr.phoneNumberErr = \"\";\r\n        }\r\n\r\n        if (donationForm.problem === \"\") {\r\n            donationFormErr.problemErr = 'Required'\r\n            isFormValid = false;\r\n        }\r\n        else {\r\n            donationFormErr.problemErr = \"\";\r\n        }\r\n\r\n        if (donationForm.expect === \"\") {\r\n            donationFormErr.expectErr = 'Required'\r\n            isFormValid = false;\r\n        }\r\n        else {\r\n            donationFormErr.expectErr = \"\";\r\n        }\r\n\r\n        this.setState({\r\n            donationFormErr\r\n        });\r\n        return isFormValid;\r\n    }\r\n\r\n    private _submitForm() {\r\n        if (this.isFormValid()) {\r\n            console.log(this.state.donationForm);\r\n            let requestObj: any = this.state.donationForm;\r\n\r\n            this.setState({\r\n                isLoading: true\r\n            });\r\n            this.service.raiseHelpRequest1(requestObj).then((res: any) => {\r\n                debugger;\r\n                console.log(res);\r\n\r\n                if (res.status) {\r\n\r\n                    this.setState({\r\n                        showModel: false,\r\n                        donationForm: {\r\n                            name: this.props.User && this.props.User.User && this.props.User.User.firstName ? this.props.User.User.firstName : '',\r\n                            phoneNumber: this.props.User && this.props.User.User && this.props.User.User.phoneNumber ? this.props.User.User.phoneNumber : '',\r\n                            email: this.props.User && this.props.User.User && this.props.User.User.email ? this.props.User.User.email : '',\r\n                            problem: '',\r\n                            expect: ''\r\n                        },\r\n                        donationFormErr: {\r\n                            phoneNumberErr: '',\r\n                            nameErr: '',\r\n                            emailErr: '',\r\n                            problemErr: '',\r\n                            expectErr: ''\r\n                        },\r\n                        DialogProps2: { show: true, message: \"Thanks for reaching out. We will help you.\" },\r\n                        isLoading: false\r\n                    });\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    private _closeDialog2() {\r\n        this.setState({\r\n            DialogProps2: { show: false, message: '' }\r\n        });\r\n\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (<>\r\n            {this.state.isLoading && <Loading />}\r\n            <div className=\"raise-help c-style1\" >\r\n                <div className=\"c-btns\">\r\n                    <p className=\"d-txt ms-fontSize-24\">Do you need any help?</p>\r\n                    <p className=\"d-txt2\">Please let our community know that you are seeking something</p>\r\n                    <DefaultButton iconProps={{ iconName: 'Heart', styles: stackStyles }} className={`c-btn`} onClick={this._showDialog} text=\"Request\" />\r\n\r\n                </div>\r\n                {\r\n                    this.state.showModel && <div>\r\n                        <TextField label=\"Name\"\r\n                            placeholder=\"Please enter name\"\r\n                            name=\"name\"\r\n                            value={this.state.donationForm.name}\r\n                            required\r\n                            errorMessage={this.state.donationFormErr.nameErr}\r\n                            onChange={(event: any) => this._inputChangeHandle(event)}\r\n                        />\r\n                        <TextField label=\"Phone Number\"\r\n                            placeholder=\"Please enter mobile number.\"\r\n                            name=\"phoneNumber\"\r\n                            pattern=\"[0-9]*\"\r\n                            required\r\n                            minLength={10} prefix=\"+91\" maxLength={10}\r\n                            errorMessage={this.state.donationFormErr.phoneNumberErr}\r\n                            value={this.state.donationForm.phoneNumber}\r\n                            onChange={(event: any) => this._amountChangeHandle(event)}\r\n                        />\r\n                        <TextField label=\"How can we help You?\"\r\n                            placeholder=\"Describe your problem\"\r\n                            name=\"problem\"\r\n                            multiline={true}\r\n                            rows={3}\r\n                            required\r\n                            errorMessage={this.state.donationFormErr.problemErr}\r\n                            value={this.state.donationForm.problem}\r\n                            onChange={(event: any) => this._inputChangeHandle(event)}\r\n                        />\r\n                        <TextField label=\"Location\"\r\n                            placeholder=\"please mention your address.\"\r\n                            name=\"expect\"\r\n                            multiline={true}\r\n                            rows={3}\r\n                            required\r\n                            value={this.state.donationForm.expect}\r\n                            errorMessage={this.state.donationFormErr.expectErr}\r\n                            onChange={(event: any) => this._inputChangeHandle(event)}\r\n                        />\r\n                        <DefaultButton onClick={this._submitForm} className=\"sp-main-btn btn-register\" text=\"Send\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n            <Dialog\r\n                hidden={!this.state.DialogProps2.show}\r\n                onDismiss={this._closeDialog}\r\n                dialogContentProps={{\r\n                    type: DialogType.normal,\r\n                }}\r\n                modalProps={{\r\n                    styles: { main: { maxWidth: 450, textAlign: \"center\" } },\r\n                    isBlocking: true\r\n                }}\r\n            >\r\n                <p>{this.state.DialogProps2.message}</p>\r\n                <DefaultButton className=\"sp-btn-login\" onClick={this._closeDialog2} text=\"Ok\" />\r\n            </Dialog>\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState): AppState => ({\r\n    User: state.User,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(RaiseHelp);","import * as React from \"react\";\r\nimport {\r\n    RouteComponentProps, withRouter\r\n} from 'react-router-dom';\r\nimport './styles.scss';\r\nimport NewsService from '../../Service';\r\nimport { ISaveHelpCovid,  HelpCovidModel } from '../../../../models/models';\r\nimport { socket } from '../../../../app';\r\nimport { AppState } from \"../../../../Redux/app.store\";\r\nimport { connect } from \"react-redux\";\r\nimport { IUserState } from \"../../../../Redux/models\";\r\nimport { Shimmer3 } from \"../../../common/Loading/Shimmers\";\r\nimport RaiseHelp from './raiseHelp';\r\nimport Navbar from \"../../Navbar\";\r\ninterface IState {\r\n    allNews: ISaveHelpCovid[];\r\n    isLoading: boolean;\r\n    currentScrollPosition: number;\r\n    skip: number;\r\n    isLoadNext: boolean;\r\n    DateTime: any;\r\n    stopRequests: boolean;\r\n}\r\n\r\ninterface IProps extends RouteComponentProps {\r\n    User: IUserState;\r\n}\r\n\r\nclass Help extends React.Component<IProps, IState> {\r\n    private newsService: NewsService;\r\n    private language: string;\r\n    ddd = localStorage.getItem('language');\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            allNews: [],\r\n            currentScrollPosition: 0,\r\n            skip: 0,\r\n            isLoadNext: false,\r\n            DateTime: null,\r\n            stopRequests: false\r\n        }\r\n        this.newsService = new NewsService();\r\n        this.language = this.ddd ? this.ddd : 'en';\r\n        this._onUserClick = this._onUserClick.bind(this);\r\n        this._onScrollEvent = this._onScrollEvent.bind(this);\r\n    }\r\n\r\n    private _onUserClick(id: string) {\r\n        if (id !== null) {\r\n            this.props.history.push(`/user/${id}`);\r\n        }\r\n    }\r\n\r\n    private infoBind(filesInfo: ISaveHelpCovid[]) {\r\n        console.log(filesInfo);\r\n        let temp;\r\n        if (filesInfo) {\r\n            temp = filesInfo.map((news: ISaveHelpCovid) => {\r\n                return <div id={news._id}>\r\n                    <div className=\"main-contai c-style1\" key={news._id}>\r\n                        <div className=\"sp-clearFix help-body\" >\r\n                            <p className=\"sp-no-pm\"> <b>{news.name} has asked for </b></p>\r\n                            <p className=\"sp-no-pm\">{news.problem}</p>\r\n                        </div>\r\n                        <hr className=\"sp-hr\" />\r\n                        <p className=\"sp-no-pm sp-ml10\">Contact Details</p>\r\n                        <p className=\"help-name\"><b></b> {news.name}</p>\r\n                        <p className=\"help-name\"><b></b> {news.expect}</p>\r\n                    </div>\r\n\r\n                </div>\r\n            });\r\n        } else {\r\n            temp = <p>no records</p>;\r\n        }\r\n        return temp;\r\n    }\r\n\r\n    componentWillReceiveProps(newProps: IProps) {\r\n        if (this.language !== newProps.User.language) {\r\n            this.setState({ isLoading: true });\r\n            this.language = newProps.User.language;\r\n            this.newsService.getHelpRequests1({ skip: 0 }).then((res: any) => {\r\n                if (res.status) {\r\n                    let data = res.data;\r\n                    this.setState({\r\n                        allNews: data,\r\n                        isLoading: false,\r\n                        currentScrollPosition: window.scrollY,\r\n                        skip: data.length,\r\n                        DateTime: res.data.length > 0 ? res.data[0].DateTime : ''\r\n                    });\r\n                } else {\r\n                    this.setState({ isLoading: false });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ isLoading: true });\r\n        this.newsService.getHelpRequests1({ skip: this.state.skip }).then((res: any) => {\r\n            console.log(res);\r\n            debugger;\r\n            if (res.status) {\r\n                let data = res.data;\r\n                this.setState({\r\n                    allNews: data,\r\n                    isLoading: false,\r\n                    currentScrollPosition: window.scrollY,\r\n                    skip: data.length,\r\n                    DateTime: res.data.length > 0 ? res.data[0].DateTime : ''\r\n                });\r\n            } else {\r\n                this.setState({ isLoading: false });\r\n            }\r\n        });\r\n\r\n        socket.on(\"NewsUpdated\", (data: any) => {\r\n            debugger;\r\n            if (this.language === 'en') {\r\n                let newsInfo: any = data.English;\r\n                let allNews: ISaveHelpCovid[] = this.state.allNews;\r\n                let tempNews: ISaveHelpCovid[] = [];\r\n                allNews.forEach((news: ISaveHelpCovid) => {\r\n                    if (news._id === newsInfo._id) {\r\n                        if (newsInfo.Show) {\r\n                            tempNews = [...tempNews, new HelpCovidModel(newsInfo)]\r\n                        }\r\n                    } else {\r\n                        tempNews = [...tempNews, news];\r\n                    }\r\n                });\r\n                this.setState({\r\n                    allNews: tempNews\r\n                });\r\n            } else if (this.language === 'te') {\r\n                let newsInfo: any = data.Telugu;\r\n                let allNews: ISaveHelpCovid[] = this.state.allNews;\r\n                let tempNews: ISaveHelpCovid[] = [];\r\n                allNews.forEach((news: ISaveHelpCovid) => {\r\n                    if (news._id === newsInfo._id) {\r\n                        if (newsInfo.Show) {\r\n                            tempNews = [...tempNews, newsInfo]\r\n                        }\r\n                    } else {\r\n                        tempNews = [...tempNews, news];\r\n                    }\r\n                });\r\n                this.setState({\r\n                    allNews: tempNews\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    _onScrollEvent() {\r\n        const totalHeight = document.documentElement.scrollHeight;\r\n        if (window.pageYOffset > totalHeight - 1300 && !this.state.isLoading && !this.state.stopRequests) {\r\n            this.setState({\r\n                isLoading: true\r\n            });\r\n            this.newsService.getHelpRequests1({ skip: this.state.skip, filter: { DateTime: this.state.DateTime } }).then((res: any) => {\r\n                if (res.status) {\r\n                    let data: [] = res.data;\r\n                    if (data.length > 0) {\r\n                        let allre: ISaveHelpCovid[] = this.state.allNews;\r\n                        data.forEach((d: any) => {\r\n                            allre = [...allre, d];\r\n                        });\r\n                        if (allre.length > 100) {\r\n\r\n                            allre.splice(0, 10);\r\n                        }\r\n                        this.setState((prevState: IState) => {\r\n                            return {\r\n                                allNews: allre,\r\n                                currentScrollPosition: window.scrollY,\r\n                                skip: data.length > 0 ? prevState.skip + data.length : prevState.skip,\r\n                                isLoading: false,\r\n                                DateTime: prevState.DateTime < res.data[0].DateTime ? res.data[0].DateTime : prevState.DateTime\r\n                            }\r\n                        });\r\n                    } else {\r\n                        this.setState({ isLoading: false, stopRequests: true });\r\n                    }\r\n                } else {\r\n                    this.setState({ isLoading: false, stopRequests: true });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        window.addEventListener('scroll', this._onScrollEvent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"scroll\", this._onScrollEvent, { capture: false });\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <>\r\n                <Navbar />\r\n                <div className=\"sp-main-wrapper\">\r\n                    <div className=\"ms-Grid\" dir=\"ltr\">\r\n                        <div className=\"ms-Grid-row\">\r\n                            <div className=\"ms-Grid-col ms-sm12 ms-md8 \">\r\n                                <div className=\"main-container-wrapper\">\r\n                                    <RaiseHelp />\r\n                                    {(this.state.allNews && this.infoBind(this.state.allNews))}\r\n                                    {this.state.isLoading && <>\r\n                                        <div className=\"shimmer-main-w\"> <Shimmer3 /> </div>\r\n                                        <div className=\"shimmer-main-w\"> <Shimmer3 /> </div> </>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppState): AppState => ({\r\n    User: state.User,\r\n});\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n)(Help));","import * as React from \"react\";\r\nimport {\r\n    RouteComponentProps, withRouter\r\n} from 'react-router-dom';\r\nimport styles from './styles.module.scss';\r\nimport NewsService from '../../Service';\r\nimport { AppState } from \"../../../../Redux/app.store\";\r\nimport { connect } from \"react-redux\";\r\nimport { IUserState } from \"../../../../Redux/models\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport highchartsMap from \"highcharts/modules/map\";\r\nimport mapDataIN from \"@highcharts/map-collection/countries/in/custom/in-all-disputed.geo.json\";\r\nimport mapDataWorld from \"@highcharts/map-collection/custom/world-eckert3-highres.geo.json\";\r\nimport { DefaultButton } from \"office-ui-fabric-react\";\r\nhighchartsMap(Highcharts);\r\n\r\nconst dataIndia = require('./dataindia');\r\nconst dataWorld = require('./dataworld');\r\n\r\ninterface IState {\r\n    covidDataIndia: {\r\n        confirmed: number;\r\n        deceased: number;\r\n        recovered: number;\r\n    };\r\n    covidDataWorld: {\r\n        confirmed: number;\r\n        deceased: number;\r\n        recovered: number;\r\n    };\r\n}\r\n\r\ninterface IProps extends RouteComponentProps {\r\n    User: IUserState;\r\n}\r\n\r\nclass Main extends React.Component<IProps, IState> {\r\n    private newsService: NewsService;\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.getIndiaData();\r\n        this.getWorldData();\r\n        this.state = {\r\n            covidDataIndia: {\r\n                confirmed: 0,\r\n                deceased: 0,\r\n                recovered: 0\r\n            },\r\n            covidDataWorld: {\r\n                confirmed: 0,\r\n                deceased: 0,\r\n                recovered: 0\r\n            }\r\n        }\r\n        this.newsService = new NewsService();\r\n    }\r\n\r\n    public getIndiaData() {\r\n        // 'https://api.covidindiatracker.com/state_data.json'\r\n        fetch('https://api.covidindiatracker.com/total.json', {\r\n            method: 'GET'\r\n        }).then(response => {\r\n            return response.json();\r\n        }).then(indiaData => {\r\n            this.setState({\r\n                covidDataIndia: {\r\n                    confirmed: indiaData.confirmed,\r\n                    deceased: indiaData.deaths,\r\n                    recovered: indiaData.recovered\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    public getWorldData() {\r\n        fetch('https://api.covid19api.com/summary', {\r\n            method: 'GET'\r\n        }).then(response => {\r\n            return response.json();\r\n        }).then(WorldData => {\r\n            this.setState({\r\n                covidDataWorld: {\r\n                    confirmed: WorldData.Global.TotalConfirmed as number,\r\n                    deceased: WorldData.Global.TotalDeaths as number,\r\n                    recovered: WorldData.Global.TotalRecovered as number\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    public goToFacts() {\r\n        this.props.history.push('/facts');\r\n    }\r\n\r\n    public render() {\r\n\r\n        const mapOptionsIndia = {\r\n            chart: {\r\n                map: 'countries/in/custom/in-all-disputed',\r\n                backgroundColor: 'transparent'\r\n            },\r\n\r\n            title: {\r\n                text: ''\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n            mapNavigation: {\r\n                enabled: false\r\n            },\r\n            tooltip: {\r\n                headerFormat: '',\r\n                pointFormat: '<b>{point.name}:</b>{point.value}'\r\n            },\r\n            legend: {\r\n                enabled: false\r\n            },\r\n            series: [{\r\n                data: dataIndia,\r\n                name: 'Random data',\r\n                states: {\r\n                    hover: {\r\n                        color: '#BADA55'\r\n                    }\r\n                },\r\n                dataLabels: {\r\n                    enabled: false,\r\n                    format: '{point.name}'\r\n                },\r\n\r\n                mapData: mapDataIN,\r\n            }]\r\n        }\r\n        const mapOptionsWorld = {\r\n            chart: {\r\n                map: 'countries/in/custom/in-all-disputed',\r\n                backgroundColor: 'transparent'\r\n            },\r\n            title: {\r\n                text: ''\r\n            },\r\n            credits: {\r\n                enabled: false\r\n            },\r\n\r\n            mapNavigation: {\r\n                enabled: false\r\n            },\r\n            tooltip: {\r\n                headerFormat: '',\r\n                pointFormat: '<b>{point.name}:</b>{point.x}'\r\n            },\r\n            legend: {\r\n                enabled: false\r\n            },\r\n            series: [{\r\n                data: dataWorld,\r\n                name: 'Random data',\r\n                states: {\r\n                    hover: {\r\n                        color: '#BADA55'\r\n                    }\r\n                },\r\n                dataLabels: {\r\n                    enabled: false,\r\n                    format: '{point.name}'\r\n                },\r\n\r\n                mapData: mapDataWorld,\r\n            }]\r\n        }\r\n        return (\r\n            <>\r\n                <div className={styles.homePageContainer}>\r\n                    <div className={styles.parallax}></div>\r\n                    <div className={styles.wrapper}>\r\n                        <div className={styles.mapContainer}>\r\n                            <div className={styles.worldMap}>\r\n                                <HighchartsReact\r\n                                    constructorType={'mapChart'}\r\n                                    highcharts={Highcharts}\r\n                                    options={mapOptionsWorld}\r\n                                />\r\n                                <div className={styles.totalValueContainer}>\r\n                                    <div className={styles.total}>\r\n                                        Confirmed: <b>{this.state.covidDataWorld.confirmed}</b>\r\n                                    </div>\r\n                                    <div className={styles.recovered}>\r\n                                        Recovered: <b>{this.state.covidDataWorld.recovered}</b>\r\n                                    </div>\r\n                                    <div className={styles.deaths}>\r\n                                        Deceased: <b>{this.state.covidDataWorld.deceased}</b>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.indiaMap}>\r\n                                <HighchartsReact\r\n                                    constructorType={'mapChart'}\r\n                                    highcharts={Highcharts}\r\n                                    options={mapOptionsIndia}\r\n                                />\r\n                                <div className={styles.totalValueContainer}>\r\n                                    <div className={styles.total}>\r\n                                        Confirmed: <b>{this.state.covidDataIndia.confirmed}</b>\r\n                                    </div>\r\n                                    <div className={styles.recovered}>\r\n                                        Recovered: <b>{this.state.covidDataIndia.recovered}</b>\r\n                                    </div>\r\n                                    <div className={styles.deaths}>\r\n                                        Deceased: <b>{this.state.covidDataIndia.deceased}</b>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div></div>\r\n                        <div className={styles.covidDetailsBrief}>\r\n                            <div className={styles.details}>\r\n                                <div className={styles.title}>Get the facts about Corona Virus</div>\r\n                                <div className={styles.subTitle}>Take steps to care for yourself and help protect others in your home and community.</div>\r\n                                <div className={styles.learnMore}>\r\n                                    <DefaultButton className={`c-btn`}  onClick={() => this.goToFacts()}text=\"Learn More\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.imageContainer}>\r\n                                <img className={styles.image} src={`https://image.freepik.com/free-photo/girl-with-surgical-mask-is-going-buy-cheese_1153-5294.jpg`} alt=\"Be precautious\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppState): AppState => ({\r\n    User: state.User,\r\n});\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n)(Main));","import * as React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport Home from './home/index';\r\nimport './styles.scss';\r\nimport PrivateRoute from '../common/PrivateRoute/index';\r\nimport MyProfile from './myProfile';\r\nimport NotFound from '../common/NotFound';\r\nimport Stories from './../user/home/stories';\r\nimport Help from './../user/home/help';\r\nimport Main from './../user/home/main';\r\n\r\nclass UserApp extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let loadingE: any = document.getElementById('loading');\r\n    loadingE.style.display = \"none\";\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route ecact path=\"/t\" component={Main} />\r\n        <PrivateRoute path=\"/stories\">\r\n          <Stories />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/myprofile\">\r\n          <MyProfile />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/help\">\r\n          <Help />\r\n        </PrivateRoute>\r\n        <Route path=\"*\">\r\n          <NotFound />\r\n        </Route>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserApp;","import { ActionTypes } from \"../action.types\";\r\nimport { IUser, IUserState } from '../models';\r\nlet language = localStorage.getItem('language');\r\nlet lan = language && language === 'en' ? 'en' : 'en';\r\n\r\n\r\nconst initialState: IUserState = {\r\n  User: {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    _id: '',\r\n    imagePath: '',\r\n    userType: 0\r\n  },\r\n  language: lan,\r\n  login: { show: false, message: '' }\r\n};\r\n\r\nexport interface IReducerActions {\r\n  type: string;\r\n  User: IUser;\r\n}\r\n\r\nexport interface ILanguageAction {\r\n  type: string;\r\n  language: string;\r\n}\r\n\r\n\r\nexport type IReducerActionss = IReducerActions | ILanguageAction;\r\n\r\nexport function UserReducer(\r\n  state: IUserState = initialState,\r\n  action: any\r\n): IUserState {\r\n  switch (action.type) {\r\n    case ActionTypes.AddUser:\r\n      return {\r\n        ...state, User: action.User\r\n      };\r\n    case ActionTypes.RemoveUser:\r\n      return {\r\n        ...state, User: action.User\r\n      };\r\n    case ActionTypes.UpdateUserImage:\r\n      localStorage.setItem('User', JSON.stringify({ ...state.User, imagePath: action.payload }));\r\n      return {\r\n        ...state, User: { ...state.User, imagePath: action.payload }\r\n      };\r\n    case ActionTypes.UpdateLoginM:\r\n      return {\r\n        ...state, login: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { createStore, combineReducers } from \"redux\";\r\nimport { UserReducer } from \"./Reducers/reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  User: UserReducer\r\n});\r\n \r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport default function configureStore():any {\r\n  const store = createStore(\r\n    rootReducer,\r\n  );\r\n  return store;\r\n} \r\n ","import * as React from \"react\";\r\nimport UserApp from './components/user/index';\r\nimport { initializeIcons } from '@uifabric/icons';\r\nimport { Provider } from 'react-redux';\r\nimport socketIOClient from 'socket.io-client';\r\nimport configureStore from \"./Redux/app.store\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './styles.scss';\r\nconst ENDPOINT = \"/\";\r\nexport const store = configureStore();\r\nexport const socket = socketIOClient(ENDPOINT);\r\ninitializeIcons();\r\n\r\nclass App extends React.Component {\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <UserApp />\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\nimport * as serviceWorker from './serviceWorker';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}